TRACE: 2017/03/20 18:06:00 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:06:00 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 18:06:00 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 18:06:00 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:06:00 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 18:06:00 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 18:06:00 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 18:06:00 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 18:06:00 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 18:06:00 debug.go:45: [GIN-debug] GET    /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/20 18:06:00 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 18:06:00 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 18:06:00 debug.go:45: [GIN-debug] [ERROR] listen tcp :8082: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
TRACE: 2017/03/20 18:08:29 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:08:29 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 18:08:29 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 18:08:29 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:08:29 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 18:08:29 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 18:08:29 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 18:08:29 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 18:08:29 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 18:08:29 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/20 18:08:29 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 18:08:29 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 18:08:29 debug.go:45: [GIN-debug] [ERROR] listen tcp :8082: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
TRACE: 2017/03/20 18:11:52 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:11:52 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 18:11:52 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 18:11:52 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:11:52 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 18:11:52 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 18:11:52 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 18:11:52 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 18:11:52 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 18:11:52 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/20 18:11:52 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 18:11:52 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 18:11:52 debug.go:45: [GIN-debug] [ERROR] listen tcp :8082: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
TRACE: 2017/03/20 18:13:20 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:13:20 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 18:13:20 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 18:13:20 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:13:20 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 18:13:20 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 18:13:20 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 18:13:20 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 18:13:20 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 18:13:20 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/20 18:13:20 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 18:13:20 debug.go:45: [GIN-debug] Listening and serving HTTP on :7082
TRACE: 2017/03/20 18:16:54 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:16:54 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 18:16:54 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 18:16:54 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:16:54 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 18:16:54 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 18:16:54 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 18:16:54 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 18:16:54 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 18:16:54 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/20 18:16:54 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 18:16:54 debug.go:45: [GIN-debug] Listening and serving HTTP on :7082
TRACE: 2017/03/20 18:19:21 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:19:21 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 18:19:21 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 18:19:21 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:19:21 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 18:19:21 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 18:19:21 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 18:19:21 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 18:19:21 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 18:19:21 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/20 18:19:21 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 18:19:21 debug.go:45: [GIN-debug] Listening and serving HTTP on :7082
TRACE: 2017/03/20 18:19:28 Login.go:16: entering login manager...
TRACE: 2017/03/20 18:22:44 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

<<<<<<< HEAD
TRACE: 2017/03/20 18:22:44 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 18:22:44 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 18:22:44 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:22:44 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 18:22:44 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 18:22:44 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 18:22:44 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 18:22:44 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 18:22:44 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/20 18:22:44 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 18:22:44 debug.go:45: [GIN-debug] Listening and serving HTTP on :7082
TRACE: 2017/03/20 18:22:46 Login.go:16: entering login manager...
TRACE: 2017/03/20 18:22:46 userimpl.go:71: entering AuthenticateUser Impl
TRACE: 2017/03/20 18:22:46 userimpl.go:73: Executing query..
TRACE: 2017/03/20 18:23:37 userimpl.go:95: Response user Obj :  {0    test@t.com   }
TRACE: 2017/03/20 18:24:26 Login.go:16: entering login manager...
TRACE: 2017/03/20 18:24:26 userimpl.go:71: entering AuthenticateUser Impl
TRACE: 2017/03/20 18:24:26 userimpl.go:73: Executing query..
TRACE: 2017/03/20 18:24:56 userimpl.go:95: Response user Obj :  {0    test@t.com   }
TRACE: 2017/03/20 18:28:09 Login.go:16: entering login manager...
TRACE: 2017/03/20 18:28:09 userimpl.go:71: entering AuthenticateUser Impl
TRACE: 2017/03/20 18:28:09 userimpl.go:73: Executing query..
TRACE: 2017/03/20 18:28:22 userimpl.go:95: Response user Obj :  {0    test@t.com   }
TRACE: 2017/03/20 18:28:59 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:28:59 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 18:28:59 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 18:28:59 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:28:59 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 18:28:59 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 18:28:59 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 18:28:59 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 18:28:59 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 18:28:59 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/20 18:28:59 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 18:28:59 debug.go:45: [GIN-debug] Listening and serving HTTP on :7082
TRACE: 2017/03/20 18:29:03 Login.go:16: entering login manager...
TRACE: 2017/03/20 18:29:03 userimpl.go:71: entering AuthenticateUser Impl
TRACE: 2017/03/20 18:29:03 userimpl.go:73: Executing query..
TRACE: 2017/03/20 18:29:35 Login.go:16: entering login manager...
TRACE: 2017/03/20 18:29:35 userimpl.go:71: entering AuthenticateUser Impl
TRACE: 2017/03/20 18:29:35 userimpl.go:73: Executing query..
TRACE: 2017/03/20 18:29:51 userimpl.go:95: Response user Obj :  {0    test@t.com   }
TRACE: 2017/03/20 18:29:51 userimpl.go:95: Response user Obj :  {0    test@t.com   }
TRACE: 2017/03/20 18:30:31 Login.go:16: entering login manager...
TRACE: 2017/03/20 18:30:31 userimpl.go:71: entering AuthenticateUser Impl
TRACE: 2017/03/20 18:30:31 userimpl.go:73: Executing query..
TRACE: 2017/03/20 18:30:43 userimpl.go:95: Response user Obj :  {0    test@t.com   }
TRACE: 2017/03/20 18:32:47 Login.go:16: entering login manager...
TRACE: 2017/03/20 18:32:47 userimpl.go:71: entering AuthenticateUser Impl
TRACE: 2017/03/20 18:32:47 userimpl.go:73: Executing query..
TRACE: 2017/03/20 18:32:52 userimpl.go:95: Response user Obj :  {0    test@t.com   }
TRACE: 2017/03/20 18:33:17 Login.go:16: entering login manager...
TRACE: 2017/03/20 18:33:17 userimpl.go:71: entering AuthenticateUser Impl
TRACE: 2017/03/20 18:33:17 userimpl.go:73: Executing query..
TRACE: 2017/03/20 18:33:50 userimpl.go:95: Response user Obj :  {0    test@t.com   }
TRACE: 2017/03/20 18:33:52 Login.go:16: entering login manager...
TRACE: 2017/03/20 18:33:52 userimpl.go:71: entering AuthenticateUser Impl
TRACE: 2017/03/20 18:33:52 userimpl.go:73: Executing query..
TRACE: 2017/03/20 18:34:07 userimpl.go:95: Response user Obj :  {0    test@t.com   }
TRACE: 2017/03/20 18:36:21 Login.go:16: entering login manager...
TRACE: 2017/03/20 18:36:21 userimpl.go:71: entering AuthenticateUser Impl
TRACE: 2017/03/20 18:36:21 userimpl.go:73: Executing query..
TRACE: 2017/03/20 18:36:29 userimpl.go:95: Response user Obj :  {0    test@t.com   }
TRACE: 2017/03/20 18:41:19 Login.go:16: entering login manager...
TRACE: 2017/03/20 18:41:19 userimpl.go:71: entering AuthenticateUser Impl
TRACE: 2017/03/20 18:41:19 userimpl.go:73: Executing query..
TRACE: 2017/03/20 18:41:24 userimpl.go:95: Response user Obj :  {0    test@t.com   }
TRACE: 2017/03/20 18:50:09 Login.go:16: entering login manager...
TRACE: 2017/03/20 18:50:09 userimpl.go:71: entering AuthenticateUser Impl
TRACE: 2017/03/20 18:50:09 userimpl.go:73: Executing query..
TRACE: 2017/03/20 18:50:42 Login.go:16: entering login manager...
TRACE: 2017/03/20 18:50:42 userimpl.go:71: entering AuthenticateUser Impl
TRACE: 2017/03/20 18:50:42 userimpl.go:73: Executing query..
TRACE: 2017/03/20 18:51:08 userimpl.go:95: Response user Obj :  {0    testuser@rpqbl.com  Sweta1 }
TRACE: 2017/03/20 18:51:08 userimpl.go:95: Response user Obj :  {0    testuser@rpqbl.com  Sweta1 }
TRACE: 2017/03/20 18:51:08 Login.go:37: Error 1146: Table 'rpqbmysql.Token' doesn't exist
TRACE: 2017/03/20 18:51:08 Login.go:48: {1 Sweta CUEXThQNpUMQgXAQjGAK Admin}
TRACE: 2017/03/20 18:51:09 Login.go:37: Error 1146: Table 'rpqbmysql.Token' doesn't exist
TRACE: 2017/03/20 18:51:09 Login.go:48: {1 Sweta IWIyLyTGKuSEjAYtAmfy Admin}
TRACE: 2017/03/20 19:28:33 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 19:28:33 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 19:28:33 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 19:28:33 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 19:28:33 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 19:28:33 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 19:28:33 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 19:28:33 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 19:28:33 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 19:28:33 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/20 19:28:33 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 19:28:33 debug.go:45: [GIN-debug] Listening and serving HTTP on :7082
TRACE: 2017/03/20 19:46:06 Login.go:16: entering login manager...
TRACE: 2017/03/20 19:46:06 userimpl.go:71: entering AuthenticateUser Impl
TRACE: 2017/03/20 19:46:07 userimpl.go:73: Executing query..
TRACE: 2017/03/20 19:46:12 userimpl.go:95: Response user Obj :  {0    r.s@r.com  123 }
TRACE: 2017/03/20 19:46:52 Login.go:16: entering login manager...
TRACE: 2017/03/20 19:46:52 userimpl.go:71: entering AuthenticateUser Impl
TRACE: 2017/03/20 19:46:52 userimpl.go:73: Executing query..
TRACE: 2017/03/20 19:47:00 userimpl.go:95: Response user Obj :  {0    r.s@r.com  123 }
TRACE: 2017/03/20 19:55:27 Login.go:16: entering login manager...
TRACE: 2017/03/20 19:55:27 userimpl.go:71: entering AuthenticateUser Impl
TRACE: 2017/03/20 19:55:27 userimpl.go:73: Executing query..
TRACE: 2017/03/20 19:55:40 userimpl.go:95: Response user Obj :  {0    r.s@r.com  123 }
TRACE: 2017/03/20 19:55:41 Login.go:37: Error 1146: Table 'rpqbmysql.Token' doesn't exist
TRACE: 2017/03/20 19:55:41 Login.go:48: {2 Risabh LEBhPPvsJkwnpGJXTfFH user}
=======
TRACE: 2017/03/18 17:10:11 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
<<<<<<< HEAD
TRACE: 2017/03/18 17:10:11 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
>>>>>>> 17fdb08a1980373dbb70bf30e138139a618b50e6
TRACE: 2017/03/20 09:17:23 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 09:17:23 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 09:17:23 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 09:17:23 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 09:17:23 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 09:17:23 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 09:17:23 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 09:17:23 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 09:17:23 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 09:17:23 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/20 09:17:23 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 09:17:23 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 09:44:09 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 09:44:09 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 09:44:09 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 09:44:09 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 09:44:09 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 09:44:09 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 09:44:09 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 09:44:09 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 09:44:09 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 09:44:09 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/20 09:44:09 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 09:44:09 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 11:15:29 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 11:15:29 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 11:15:29 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 11:15:29 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 11:15:29 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 11:15:29 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 11:15:29 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 11:15:29 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 11:15:29 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 11:15:29 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/20 11:15:29 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 11:15:29 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
=======
TRACE: 2017/03/18 17:10:11 debug.go:45: [GIN-debug] Listening and serving HTTP on :8
TRACE: 2017/03/18 21:29:36 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/18 21:29:36 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/18 21:29:36 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
06
<<<<<<< HEAD
TRACE: 2017/03/20 15:10:34 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 15:10:34 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 15:10:34 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 15:10:34 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 15:10:34 debug.go:45: [GIN-debug] [ERROR] listen tcp :8082: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
TRACE: 2017/03/20 15:14:46 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 15:14:46 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 15:14:46 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 15:14:46 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 15:14:46 debug.go:45: [GIN-debug] [ERROR] listen tcp :8082: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
TRACE: 2017/03/20 15:22:49 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 15:22:49 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 15:22:49 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 15:22:49 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 15:22:49 debug.go:45: [GIN-debug] [ERROR] listen tcp :8082: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
TRACE: 2017/03/20 15:26:48 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 15:26:48 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 15:26:48 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 15:26:48 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 15:26:48 debug.go:45: [GIN-debug] [ERROR] listen tcp :8082: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
TRACE: 2017/03/20 15:32:11 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 15:32:11 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 15:32:11 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 15:32:11 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 15:32:11 debug.go:45: [GIN-debug] [ERROR] listen tcp :8082: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
TRACE: 2017/03/20 15:35:18 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 15:35:18 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 15:35:18 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 15:35:18 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 15:47:18 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 15:47:18 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 15:47:18 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 15:47:23 QuestionList.go:17: 
TRACE: 2017/03/20 15:47:23 aunthenticate.go:23: parsing time "  20060102060000" as "20060102150405": cannot parse "  20060102060000" as "2006"
TRACE: 2017/03/20 15:47:23 aunthenticate.go:28: 0 0 0
TRACE: 2017/03/20 15:47:23 aunthenticate.go:36: 
TRACE: 2017/03/20 15:47:23 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 15:47:23 authenticatetokenimpl.go:48: in AunthenticateToken function
TRACE: 2017/03/20 15:47:31 authenticatetokenimpl.go:53: No uid with that token.
TRACE: 2017/03/20 15:47:31 authenticatetokenimpl.go:62:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 15:47:31 aunthenticate.go:44: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 15:47:31 aunthenticate.go:47: Monday, 20-Mar-17 15:47:31 IST
TRACE: 2017/03/20 15:47:31 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 15:47:31 IST" as "20060102150405": cannot parse "Monday, 20-Mar-17 15:47:31 IST" as "2006"
TRACE: 2017/03/20 15:47:31 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 15:47:31 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 15:47:31 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 15:47:31 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 15:47:32 authenticatetokenimpl.go:33: {0xc0421b8a10 0xc042135af0}
TRACE: 2017/03/20 15:47:32 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 15:47:32 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 15:47:32 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 15:47:33 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 16:00:25 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 16:00:25 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 16:00:25 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 16:02:20 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 16:02:20 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 16:02:20 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 16:03:07 QuestionList.go:16: java
TRACE: 2017/03/20 16:03:07 QuestionList.go:17: 
TRACE: 2017/03/20 16:03:07 aunthenticate.go:23: parsing time "  20060102060000" as "20060102150405": cannot parse "  20060102060000" as "2006"
TRACE: 2017/03/20 16:03:07 aunthenticate.go:28: 0 0 0
TRACE: 2017/03/20 16:03:07 aunthenticate.go:36: 
TRACE: 2017/03/20 16:03:07 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 16:03:07 authenticatetokenimpl.go:48: in AunthenticateToken function
TRACE: 2017/03/20 16:03:07 authenticatetokenimpl.go:53: No uid with that token.
TRACE: 2017/03/20 16:03:07 authenticatetokenimpl.go:62:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:03:07 aunthenticate.go:44:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:03:07 aunthenticate.go:47: Monday, 20-Mar-17 16:03:07 IST
TRACE: 2017/03/20 16:03:07 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 16:03:07 IST" as "20060102150405": cannot parse "Monday, 20-Mar-17 16:03:07 IST" as "2006"
TRACE: 2017/03/20 16:03:07 aunthenticate.go:56: 0s
TRACE: 2017/03/20 16:03:07 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 16:03:07 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 16:03:07 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 16:03:08 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 16:03:08 authenticatetokenimpl.go:33: {0xc0421ea070 0xc0421e8070}
TRACE: 2017/03/20 16:03:08 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 16:03:08 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:03:08 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 16:03:09 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 16:18:03 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 16:18:03 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 16:18:03 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 16:18:20 QuestionList.go:16: java
TRACE: 2017/03/20 16:18:20 QuestionList.go:17: 
TRACE: 2017/03/20 16:18:20 aunthenticate.go:23: parsing time "  20060102060000" as "20060102150405": cannot parse "  20060102060000" as "2006"
TRACE: 2017/03/20 16:18:20 aunthenticate.go:28: 0 0 0
TRACE: 2017/03/20 16:18:20 aunthenticate.go:36: 
TRACE: 2017/03/20 16:18:20 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 16:18:20 authenticatetokenimpl.go:48: in AunthenticateToken function
TRACE: 2017/03/20 16:18:25 authenticatetokenimpl.go:53: No uid with that token.
TRACE: 2017/03/20 16:18:25 authenticatetokenimpl.go:62:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:18:25 aunthenticate.go:44:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:18:25 aunthenticate.go:47: Monday, 20-Mar-17 16:18:25 IST
TRACE: 2017/03/20 16:18:25 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 16:18:25 IST" as "20060102150405": cannot parse "Monday, 20-Mar-17 16:18:25 IST" as "2006"
TRACE: 2017/03/20 16:18:25 aunthenticate.go:56: 0s
TRACE: 2017/03/20 16:18:25 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 16:18:25 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 16:18:25 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 16:18:26 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 16:18:26 authenticatetokenimpl.go:33: {0xc0421f0230 0xc0421ee240}
TRACE: 2017/03/20 16:18:26 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 16:18:26 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:18:26 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 16:18:53 QuestionList.go:16: java
TRACE: 2017/03/20 16:18:53 QuestionList.go:17: 
TRACE: 2017/03/20 16:18:53 aunthenticate.go:23: parsing time "  20060102060000" as "20060102150405": cannot parse "  20060102060000" as "2006"
TRACE: 2017/03/20 16:18:53 aunthenticate.go:28: 0 0 0
TRACE: 2017/03/20 16:18:53 aunthenticate.go:36: 
TRACE: 2017/03/20 16:18:53 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 16:18:53 authenticatetokenimpl.go:48: in AunthenticateToken function
TRACE: 2017/03/20 16:19:26 QuestionList.go:16: java
TRACE: 2017/03/20 16:19:26 QuestionList.go:17: 
TRACE: 2017/03/20 16:19:26 aunthenticate.go:23: parsing time "  20060102060000" as "20060102150405": cannot parse "  20060102060000" as "2006"
TRACE: 2017/03/20 16:19:26 aunthenticate.go:28: 0 0 0
TRACE: 2017/03/20 16:19:26 aunthenticate.go:36: 
TRACE: 2017/03/20 16:19:26 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 16:19:26 authenticatetokenimpl.go:48: in AunthenticateToken function
TRACE: 2017/03/20 16:19:27 authenticatetokenimpl.go:53: No uid with that token.
TRACE: 2017/03/20 16:19:27 authenticatetokenimpl.go:62:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:19:27 aunthenticate.go:44:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:19:27 aunthenticate.go:47: Monday, 20-Mar-17 16:19:27 IST
TRACE: 2017/03/20 16:19:27 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 16:19:27 IST" as "20060102150405": cannot parse "Monday, 20-Mar-17 16:19:27 IST" as "2006"
TRACE: 2017/03/20 16:19:27 aunthenticate.go:56: 0s
TRACE: 2017/03/20 16:19:27 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 16:19:27 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 16:19:27 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 16:19:27 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 16:19:27 authenticatetokenimpl.go:53: No uid with that token.
TRACE: 2017/03/20 16:19:27 authenticatetokenimpl.go:62:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:19:27 aunthenticate.go:44:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:19:27 aunthenticate.go:47: Monday, 20-Mar-17 16:19:27 IST
TRACE: 2017/03/20 16:19:27 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 16:19:27 IST" as "20060102150405": cannot parse "Monday, 20-Mar-17 16:19:27 IST" as "2006"
TRACE: 2017/03/20 16:19:27 aunthenticate.go:56: 0s
TRACE: 2017/03/20 16:19:27 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 16:19:27 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 16:19:27 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 16:19:27 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 16:19:28 authenticatetokenimpl.go:33: {0xc0421a6af0 0xc0421ee390}
TRACE: 2017/03/20 16:19:28 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 16:19:28 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:19:28 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 16:20:04 QuestionList.go:16: java
TRACE: 2017/03/20 16:20:04 QuestionList.go:17: 
TRACE: 2017/03/20 16:20:04 aunthenticate.go:23: parsing time "  20060102060000" as "20060102150405": cannot parse "  20060102060000" as "2006"
TRACE: 2017/03/20 16:20:04 aunthenticate.go:28: 0 0 0
TRACE: 2017/03/20 16:20:04 aunthenticate.go:36: 
TRACE: 2017/03/20 16:20:04 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 16:20:04 authenticatetokenimpl.go:48: in AunthenticateToken function
TRACE: 2017/03/20 16:20:12 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 16:20:16 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 16:20:16 authenticatetokenimpl.go:33: {0xc0422204d0 0xc0421bdc60}
TRACE: 2017/03/20 16:20:16 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 16:20:16 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:20:16 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 16:20:31 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 16:20:36 QuestionList.go:16: java
TRACE: 2017/03/20 16:20:36 QuestionList.go:17: 
TRACE: 2017/03/20 16:20:36 aunthenticate.go:23: parsing time "  20060102060000" as "20060102150405": cannot parse "  20060102060000" as "2006"
TRACE: 2017/03/20 16:20:36 aunthenticate.go:28: 0 0 0
TRACE: 2017/03/20 16:20:36 aunthenticate.go:36: 
TRACE: 2017/03/20 16:20:36 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 16:20:36 authenticatetokenimpl.go:48: in AunthenticateToken function
TRACE: 2017/03/20 16:20:43 authenticatetokenimpl.go:53: No uid with that token.
TRACE: 2017/03/20 16:20:43 authenticatetokenimpl.go:62:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:20:43 aunthenticate.go:44:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:20:43 aunthenticate.go:47: Monday, 20-Mar-17 16:20:43 IST
TRACE: 2017/03/20 16:20:43 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 16:20:43 IST" as "20060102150405": cannot parse "Monday, 20-Mar-17 16:20:43 IST" as "2006"
TRACE: 2017/03/20 16:20:43 aunthenticate.go:56: 0s
TRACE: 2017/03/20 16:20:43 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 16:20:43 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 16:20:43 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 16:20:43 authenticatetokenimpl.go:53: No uid with that token.
TRACE: 2017/03/20 16:20:43 authenticatetokenimpl.go:62:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:20:43 aunthenticate.go:44:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:20:43 aunthenticate.go:47: Monday, 20-Mar-17 16:20:43 IST
TRACE: 2017/03/20 16:20:43 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 16:20:43 IST" as "20060102150405": cannot parse "Monday, 20-Mar-17 16:20:43 IST" as "2006"
TRACE: 2017/03/20 16:20:43 aunthenticate.go:56: 0s
TRACE: 2017/03/20 16:20:43 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 16:20:43 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 16:20:43 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 16:20:44 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 16:20:44 authenticatetokenimpl.go:33: {0xc0421a6e00 0xc04225e7a0}
TRACE: 2017/03/20 16:20:44 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 16:20:44 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:20:44 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 16:20:44 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 16:20:44 authenticatetokenimpl.go:33: {0xc0421a6e70 0xc04225e8d0}
TRACE: 2017/03/20 16:20:44 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 16:20:44 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:20:44 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 16:20:45 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 16:20:45 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 16:23:23 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 16:23:23 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 16:23:23 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 16:23:28 QuestionList.go:16: java
TRACE: 2017/03/20 16:23:28 QuestionList.go:17: 
TRACE: 2017/03/20 16:23:28 aunthenticate.go:23: parsing time "  20060102060000" as "20060102150405": cannot parse "  20060102060000" as "2006"
TRACE: 2017/03/20 16:23:28 aunthenticate.go:28: 0 0 0
TRACE: 2017/03/20 16:23:28 aunthenticate.go:36: 
TRACE: 2017/03/20 16:23:28 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 16:23:28 authenticatetokenimpl.go:48: in AunthenticateToken function
TRACE: 2017/03/20 16:23:40 authenticatetokenimpl.go:53: No uid with that token.
TRACE: 2017/03/20 16:23:40 authenticatetokenimpl.go:62:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:23:40 aunthenticate.go:44:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:23:40 aunthenticate.go:47: Monday, 20-Mar-17 16:23:40 IST
TRACE: 2017/03/20 16:23:40 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 16:23:40 IST" as "20060102150405": cannot parse "Monday, 20-Mar-17 16:23:40 IST" as "2006"
TRACE: 2017/03/20 16:23:40 aunthenticate.go:56: 0s
TRACE: 2017/03/20 16:23:40 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 16:23:40 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 16:23:40 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 16:23:40 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 16:23:40 authenticatetokenimpl.go:33: {0xc0420322a0 0xc042004510}
TRACE: 2017/03/20 16:23:40 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 16:23:40 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:23:40 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 16:24:02 QuestionList.go:16: java
TRACE: 2017/03/20 16:24:02 QuestionList.go:17: 
TRACE: 2017/03/20 16:24:02 aunthenticate.go:23: parsing time "  20060102060000" as "20060102150405": cannot parse "  20060102060000" as "2006"
TRACE: 2017/03/20 16:24:02 aunthenticate.go:28: 0 0 0
TRACE: 2017/03/20 16:24:02 aunthenticate.go:36: 
TRACE: 2017/03/20 16:24:02 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 16:24:02 authenticatetokenimpl.go:48: in AunthenticateToken function
TRACE: 2017/03/20 16:24:13 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 16:24:13 authenticatetokenimpl.go:53: No uid with that token.
TRACE: 2017/03/20 16:24:13 authenticatetokenimpl.go:62:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:24:13 aunthenticate.go:44:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:24:13 aunthenticate.go:47: Monday, 20-Mar-17 16:24:13 IST
TRACE: 2017/03/20 16:24:13 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 16:24:13 IST" as "20060102150405": cannot parse "Monday, 20-Mar-17 16:24:13 IST" as "2006"
TRACE: 2017/03/20 16:24:13 aunthenticate.go:56: 0s
TRACE: 2017/03/20 16:24:13 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 16:24:13 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 16:24:13 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 16:24:13 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 16:24:14 authenticatetokenimpl.go:33: {0xc0420324d0 0xc042004910}
TRACE: 2017/03/20 16:24:14 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 16:24:14 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:24:14 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 16:24:15 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 16:27:52 QuestionList.go:16: java
TRACE: 2017/03/20 16:27:52 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 16:27:52 aunthenticate.go:23: parsing time "  20060102060000" as "20060102150405": cannot parse "  20060102060000" as "2006"
TRACE: 2017/03/20 16:27:52 aunthenticate.go:28: 0 0 0
TRACE: 2017/03/20 16:27:52 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 16:27:52 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 16:27:52 authenticatetokenimpl.go:48: in AunthenticateToken function
TRACE: 2017/03/20 16:27:53 authenticatetokenimpl.go:55: sql: Scan error on column index 1: unsupported Scan, storing driver.Value type []uint8 into type *time.Time
TRACE: 2017/03/20 16:28:31 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 16:28:31 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 16:28:31 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 16:28:38 QuestionList.go:16: java
TRACE: 2017/03/20 16:28:38 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 16:28:38 aunthenticate.go:23: parsing time "  20060102060000" as "20060102150405": cannot parse "  20060102060000" as "2006"
TRACE: 2017/03/20 16:28:38 aunthenticate.go:28: 0 0 0
TRACE: 2017/03/20 16:28:38 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 16:28:38 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 16:28:38 authenticatetokenimpl.go:48: in AunthenticateToken function
TRACE: 2017/03/20 16:28:44 authenticatetokenimpl.go:55: sql: Scan error on column index 1: unsupported Scan, storing driver.Value type []uint8 into type *time.Time
TRACE: 2017/03/20 16:35:07 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 16:35:07 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 16:35:07 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 16:35:25 QuestionList.go:16: java
TRACE: 2017/03/20 16:35:25 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 16:35:25 aunthenticate.go:23: parsing time "  Dec 29, 2014 at 6:00am (SGT)" as "Jan 2, 2006 at 3:04am (MST)": cannot parse "  Dec 29, 2014 at 6:00am (SGT)" as "Jan"
TRACE: 2017/03/20 16:35:25 aunthenticate.go:28: 0 0 0
TRACE: 2017/03/20 16:35:25 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 16:35:25 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 16:35:25 authenticatetokenimpl.go:48: in AunthenticateToken function
TRACE: 2017/03/20 16:35:45 authenticatetokenimpl.go:55: sql: Scan error on column index 1: unsupported Scan, storing driver.Value type []uint8 into type *time.Time
TRACE: 2017/03/20 16:35:45 authenticatetokenimpl.go:62: abcxyz 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:35:45 aunthenticate.go:44: abcxyz 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:35:45 aunthenticate.go:47: Monday, 20-Mar-17 16:35:45 IST
TRACE: 2017/03/20 16:35:45 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 16:35:45 IST" as "20060102150405": cannot parse "Monday, 20-Mar-17 16:35:45 IST" as "2006"
TRACE: 2017/03/20 16:35:45 aunthenticate.go:56: 0s
TRACE: 2017/03/20 16:35:45 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 16:35:45 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 16:35:45 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 16:35:45 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 16:35:46 authenticatetokenimpl.go:33: {0xc04219cbd0 0xc042119c20}
TRACE: 2017/03/20 16:35:46 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 16:35:46 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 16:35:46 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 16:35:47 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 17:18:27 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 17:18:27 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 17:18:27 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 17:18:32 QuestionList.go:16: java
TRACE: 2017/03/20 17:18:32 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 17:18:32 aunthenticate.go:23: parsing time "  Dec 29, 2014 at 6:00am (SGT)" as "Jan 2, 2006 at 3:04am (MST)": cannot parse "  Dec 29, 2014 at 6:00am (SGT)" as "Jan"
TRACE: 2017/03/20 17:18:32 aunthenticate.go:26: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:18:32 aunthenticate.go:28: 0 0 0
TRACE: 2017/03/20 17:18:32 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 17:18:32 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 17:18:32 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 17:18:42 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 17:18:42 aunthenticate.go:44: abcxyz 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:18:42 aunthenticate.go:47: Monday, 20-Mar-17 17:18:42 IST
TRACE: 2017/03/20 17:18:42 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 17:18:42 IST" as "2013-03-27 18:32:45": cannot parse "Monday, 20-Mar-17 17:18:42 IST" as "2"
TRACE: 2017/03/20 17:18:42 aunthenticate.go:56: 0s
TRACE: 2017/03/20 17:18:42 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 17:18:42 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 17:18:42 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 17:19:04 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 17:19:04 authenticatetokenimpl.go:33: {0xc0420322a0 0xc042004510}
TRACE: 2017/03/20 17:19:04 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 17:19:04 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:19:04 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 17:19:05 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 17:23:58 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 17:23:58 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 17:23:58 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 17:24:00 QuestionList.go:16: java
TRACE: 2017/03/20 17:24:00 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 17:24:00 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 17:24:00 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 17:24:00 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 17:24:00 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 17:24:00 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 17:24:09 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 17:24:09 aunthenticate.go:44: abcxyz 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:24:09 aunthenticate.go:47: Monday, 20-Mar-17 17:24:09 IST
TRACE: 2017/03/20 17:24:09 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 17:24:09 IST" as "2013-03-27 18:32:45": cannot parse "Monday, 20-Mar-17 17:24:09 IST" as "2"
TRACE: 2017/03/20 17:24:09 aunthenticate.go:56: 0s
TRACE: 2017/03/20 17:24:09 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 17:24:09 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 17:24:09 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 17:24:25 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 17:24:25 authenticatetokenimpl.go:33: {0xc0421a28c0 0xc04211f730}
TRACE: 2017/03/20 17:24:25 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 17:24:25 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:24:25 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 17:24:26 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 17:25:33 QuestionList.go:16: java
TRACE: 2017/03/20 17:25:33 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 17:25:33 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 17:25:33 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 17:25:33 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 17:25:33 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 17:25:33 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 17:25:34 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 17:25:34 aunthenticate.go:44: abcxyz 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:25:34 aunthenticate.go:47: Monday, 20-Mar-17 17:25:34 IST
TRACE: 2017/03/20 17:25:34 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 17:25:34 IST" as "2013-03-27 18:32:45": cannot parse "Monday, 20-Mar-17 17:25:34 IST" as "2"
TRACE: 2017/03/20 17:25:34 aunthenticate.go:56: 0s
TRACE: 2017/03/20 17:25:34 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 17:25:34 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 17:25:34 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 17:25:35 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 17:25:35 authenticatetokenimpl.go:33: {0xc0421f81c0 0xc0421f0240}
TRACE: 2017/03/20 17:25:35 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 17:25:35 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:25:35 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 17:25:36 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 17:35:28 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 17:35:28 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 17:35:28 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 17:35:32 QuestionList.go:16: java
TRACE: 2017/03/20 17:35:32 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 17:35:32 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 17:35:32 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 17:35:32 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 17:35:32 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 17:35:32 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 17:36:11 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 17:36:11 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:36:11 aunthenticate.go:44: abcxyz 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:36:11 aunthenticate.go:47: Monday, 20-Mar-17 17:36:11 IST
TRACE: 2017/03/20 17:36:11 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 17:36:11 IST" as "2013-03-27 18:32:45": cannot parse "Monday, 20-Mar-17 17:36:11 IST" as "2"
TRACE: 2017/03/20 17:36:11 aunthenticate.go:56: 0s
TRACE: 2017/03/20 17:36:11 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 17:36:11 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 17:36:11 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 17:36:12 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 17:36:12 authenticatetokenimpl.go:33: {0xc0421b8a80 0xc042135d60}
TRACE: 2017/03/20 17:36:12 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 17:36:12 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:36:12 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 17:36:13 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 17:36:13 QuestionList.go:16: java
TRACE: 2017/03/20 17:36:13 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 17:36:13 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 17:36:13 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 17:36:13 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 17:36:13 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 17:36:13 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 17:36:22 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 17:36:22 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:36:22 aunthenticate.go:44: abcxyz 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:36:22 aunthenticate.go:47: Monday, 20-Mar-17 17:36:22 IST
TRACE: 2017/03/20 17:36:22 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 17:36:22 IST" as "2013-03-27 18:32:45": cannot parse "Monday, 20-Mar-17 17:36:22 IST" as "2"
TRACE: 2017/03/20 17:36:22 aunthenticate.go:56: 0s
TRACE: 2017/03/20 17:36:22 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 17:36:22 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 17:36:22 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 17:36:28 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 17:36:29 authenticatetokenimpl.go:33: {0xc042032460 0xc042004de0}
TRACE: 2017/03/20 17:36:29 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 17:36:29 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:36:29 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 17:36:47 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 17:38:09 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 17:38:09 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 17:38:09 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 17:38:11 QuestionList.go:16: java
TRACE: 2017/03/20 17:38:11 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 17:38:11 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 17:38:11 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 17:38:11 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 17:38:11 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 17:38:11 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 17:38:49 QuestionList.go:16: java
TRACE: 2017/03/20 17:38:49 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 17:38:49 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 17:38:49 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 17:38:49 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 17:38:49 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 17:38:49 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 17:38:55 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 17:38:55 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:38:55 aunthenticate.go:44: abcxyz 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:38:55 aunthenticate.go:47: Monday, 20-Mar-17 17:38:55 IST
TRACE: 2017/03/20 17:38:55 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 17:38:55 IST" as "2013-03-27 18:32:45": cannot parse "Monday, 20-Mar-17 17:38:55 IST" as "2"
TRACE: 2017/03/20 17:38:55 aunthenticate.go:56: 0s
TRACE: 2017/03/20 17:38:55 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 17:38:55 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 17:38:55 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 17:39:00 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 17:39:00 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:39:00 aunthenticate.go:44: abcxyz 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:39:00 aunthenticate.go:47: Monday, 20-Mar-17 17:39:00 IST
TRACE: 2017/03/20 17:39:00 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 17:39:00 IST" as "2013-03-27 18:32:45": cannot parse "Monday, 20-Mar-17 17:39:00 IST" as "2"
TRACE: 2017/03/20 17:39:00 aunthenticate.go:56: 0s
TRACE: 2017/03/20 17:39:00 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 17:39:00 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 17:39:00 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 17:39:00 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 17:39:00 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 17:39:01 authenticatetokenimpl.go:33: {0xc0421babd0 0xc042135d20}
TRACE: 2017/03/20 17:39:01 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 17:39:01 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:39:01 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 17:39:01 authenticatetokenimpl.go:33: {0xc0421bab60 0xc042206000}
TRACE: 2017/03/20 17:39:01 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 17:39:01 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 17:39:01 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 17:39:05 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 17:39:32 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 17:51:58 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 17:51:58 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 17:51:58 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 18:00:23 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:00:23 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:00:23 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 18:00:23 debug.go:45: [GIN-debug] [ERROR] listen tcp :8082: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
TRACE: 2017/03/20 18:01:33 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:01:33 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:01:33 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 18:02:10 QuestionList.go:16: java
TRACE: 2017/03/20 18:02:10 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 18:02:10 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 18:02:10 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 18:02:10 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 18:02:10 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 18:02:10 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 18:02:48 QuestionList.go:16: java
TRACE: 2017/03/20 18:02:48 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 18:02:48 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 18:02:48 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 18:02:48 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 18:02:48 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 18:02:48 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 18:03:21 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 18:03:21 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:03:21 aunthenticate.go:44: abcxyz 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:03:21 aunthenticate.go:47: Monday, 20-Mar-17 18:03:21 IST
TRACE: 2017/03/20 18:03:21 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 18:03:21 IST" as "2017-03-20 18:32:45": cannot parse "Monday, 20-Mar-17 18:03:21 IST" as "2"
TRACE: 2017/03/20 18:03:21 aunthenticate.go:56: 0s
TRACE: 2017/03/20 18:03:21 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 18:03:21 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 18:03:21 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 18:03:33 QuestionList.go:16: java
TRACE: 2017/03/20 18:03:33 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 18:03:33 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 18:03:33 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 18:03:33 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 18:03:33 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 18:03:33 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 18:03:43 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 18:03:43 authenticatetokenimpl.go:33: {0xc0420321c0 0xc042004340}
TRACE: 2017/03/20 18:03:43 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 18:03:43 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:03:43 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 18:03:58 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 18:03:58 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:03:58 aunthenticate.go:44: abcxyz 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:03:58 aunthenticate.go:47: Monday, 20-Mar-17 18:03:58 IST
TRACE: 2017/03/20 18:03:58 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 18:03:58 IST" as "2017-03-20 18:32:45": cannot parse "Monday, 20-Mar-17 18:03:58 IST" as "2"
TRACE: 2017/03/20 18:03:58 aunthenticate.go:56: 0s
TRACE: 2017/03/20 18:03:58 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 18:03:58 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 18:03:58 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 18:03:58 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 18:03:58 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:03:58 aunthenticate.go:44: abcxyz 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:03:58 aunthenticate.go:47: Monday, 20-Mar-17 18:03:58 IST
TRACE: 2017/03/20 18:03:58 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 18:03:58 IST" as "2017-03-20 18:32:45": cannot parse "Monday, 20-Mar-17 18:03:58 IST" as "2"
TRACE: 2017/03/20 18:03:58 aunthenticate.go:56: 0s
TRACE: 2017/03/20 18:03:58 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 18:03:58 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 18:03:58 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 18:03:59 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 18:03:59 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 18:03:59 authenticatetokenimpl.go:33: {0xc0421baa80 0xc0422444c0}
TRACE: 2017/03/20 18:03:59 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 18:03:59 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:03:59 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 18:03:59 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 18:04:00 authenticatetokenimpl.go:33: {0xc0421baaf0 0xc0422445f0}
TRACE: 2017/03/20 18:04:00 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 18:04:00 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:04:00 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 18:04:01 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 18:04:01 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 18:05:53 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:05:53 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:05:53 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 18:06:05 QuestionList.go:16: java
TRACE: 2017/03/20 18:06:05 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 18:06:05 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 18:06:05 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 18:06:05 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 18:06:05 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 18:06:05 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 18:06:40 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 18:06:40 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:06:40 aunthenticate.go:44: abcxyz 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:06:40 aunthenticate.go:47: Monday, 20-Mar-17 18:06:40 IST
TRACE: 2017/03/20 18:06:40 aunthenticate.go:51: parsing time "Monday, 20-Mar-17 18:06:40 IST" as "2017-03-20 18:32:45": cannot parse "Monday, 20-Mar-17 18:06:40 IST" as "2"
TRACE: 2017/03/20 18:06:40 aunthenticate.go:54: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:06:40 aunthenticate.go:56: 0s
TRACE: 2017/03/20 18:06:40 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 18:06:40 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 18:06:40 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 18:06:41 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 18:06:41 authenticatetokenimpl.go:33: {0xc042032230 0xc042004300}
TRACE: 2017/03/20 18:06:41 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 18:06:41 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:06:41 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 18:07:14 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 18:15:18 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:15:18 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:15:18 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 18:15:21 QuestionList.go:16: java
TRACE: 2017/03/20 18:15:21 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 18:15:21 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 18:15:21 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 18:15:21 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 18:15:21 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 18:15:21 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 18:15:29 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 18:15:29 authenticatetokenimpl.go:60: 0000-00-00 00:00:00
TRACE: 2017/03/20 18:15:29 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:15:29 aunthenticate.go:44: abcxyz 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:15:29 aunthenticate.go:47: 200320-33-03T2020:08:153+00:00
TRACE: 2017/03/20 18:15:29 aunthenticate.go:51: parsing time "200320-33-03T2020:08:153+00:00" as "2017-03-20 18:32:45": cannot parse "20-33-03T2020:08:153+00:00" as "7-"
TRACE: 2017/03/20 18:15:29 aunthenticate.go:54: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:15:29 aunthenticate.go:56: 0s
TRACE: 2017/03/20 18:15:29 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 18:15:29 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 18:15:29 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 18:15:30 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 18:15:30 authenticatetokenimpl.go:33: {0xc0421ba8c0 0xc042135970}
TRACE: 2017/03/20 18:15:30 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 18:15:30 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:15:30 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 18:15:32 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 18:16:05 QuestionList.go:16: java
TRACE: 2017/03/20 18:16:05 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 18:16:05 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 18:16:05 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 18:16:05 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 18:16:05 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 18:16:05 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 18:17:01 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 18:17:01 authenticatetokenimpl.go:60: 0000-00-00 00:00:00
TRACE: 2017/03/20 18:17:01 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:17:01 aunthenticate.go:44: abcxyz 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:17:01 aunthenticate.go:47: 200320-33-03T2020:08:173+00:00
TRACE: 2017/03/20 18:17:01 aunthenticate.go:51: parsing time "200320-33-03T2020:08:173+00:00" as "2017-03-20 18:32:45": cannot parse "20-33-03T2020:08:173+00:00" as "7-"
TRACE: 2017/03/20 18:17:01 aunthenticate.go:54: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:17:01 aunthenticate.go:56: 0s
TRACE: 2017/03/20 18:17:01 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 18:17:01 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 18:17:01 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 18:17:17 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 18:17:17 authenticatetokenimpl.go:33: {0xc04222e230 0xc042214420}
TRACE: 2017/03/20 18:17:17 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 18:17:17 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:17:17 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 18:17:19 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 18:22:33 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:22:33 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:22:33 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 18:22:36 QuestionList.go:16: java
TRACE: 2017/03/20 18:22:36 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 18:22:36 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 18:22:36 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 18:22:36 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 18:22:36 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 18:22:36 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 18:22:51 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 18:22:51 authenticatetokenimpl.go:60: 2015-03-20 15:20:45
TRACE: 2017/03/20 18:22:51 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:22:51 aunthenticate.go:44: abcxyz 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:22:51 aunthenticate.go:47: 200320-33-03 2020:08:223
TRACE: 2017/03/20 18:22:51 aunthenticate.go:51: parsing time "200320-33-03 2020:08:223" as "2017-03-20 18:32:45": cannot parse "20-33-03 2020:08:223" as "7-"
TRACE: 2017/03/20 18:22:51 aunthenticate.go:54: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:22:51 aunthenticate.go:56: 0s
TRACE: 2017/03/20 18:22:51 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 18:22:51 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 18:22:51 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 18:23:37 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 18:23:37 authenticatetokenimpl.go:33: {0xc0421f6070 0xc0421f4070}
TRACE: 2017/03/20 18:23:37 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 18:23:37 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:23:37 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 18:24:56 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 18:41:52 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:41:52 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:41:52 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 18:43:24 QuestionList.go:16: java
TRACE: 2017/03/20 18:43:24 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 18:43:24 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 18:43:24 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 18:43:24 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 18:43:24 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 18:43:24 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 18:43:34 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 18:43:34 authenticatetokenimpl.go:60: 2015-03-20 15:20:45
TRACE: 2017/03/20 18:43:34 authenticatetokenimpl.go:63: 2015-03-20 15:20:45 +0000 UTC
TRACE: 2017/03/20 18:43:34 aunthenticate.go:44: abcxyz 2015-03-20 15:20:45 +0000 UTC
TRACE: 2017/03/20 18:43:34 aunthenticate.go:47: 200320-33-03T2020:08:433
TRACE: 2017/03/20 18:43:34 aunthenticate.go:51: parsing time "200320-33-03T2020:08:433" as "2017-03-20 18:32:45": cannot parse "20-33-03T2020:08:433" as "7-"
TRACE: 2017/03/20 18:43:34 aunthenticate.go:54: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:43:34 aunthenticate.go:56: 2562047h47m16.854775807s
TRACE: 2017/03/20 18:43:34 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 18:43:34 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 18:43:34 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 18:43:35 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 18:43:35 authenticatetokenimpl.go:33: {0xc0421f2070 0xc0421f0070}
TRACE: 2017/03/20 18:43:35 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 18:43:35 aunthenticate.go:61: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:43:35 aunthenticate.go:65: calling delete token function
TRACE: 2017/03/20 18:43:35 authenticatetokenimpl.go:71: calling DeleteToken function
TRACE: 2017/03/20 18:43:35 authenticatetokenimpl.go:73: after query execution
TRACE: 2017/03/20 18:43:41 authenticatetokenimpl.go:82: reached to execution
TRACE: 2017/03/20 18:43:41 authenticatetokenimpl.go:84: {0xc0421f21c0 0xc0421f01b0}
TRACE: 2017/03/20 18:43:41 aunthenticate.go:67: true
TRACE: 2017/03/20 18:43:41 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 18:43:53 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 18:45:07 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:45:07 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:45:07 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 18:45:23 QuestionList.go:16: java
TRACE: 2017/03/20 18:45:23 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 18:45:23 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 18:45:23 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 18:45:23 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 18:45:23 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 18:45:23 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 18:45:39 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/20 18:45:39 authenticatetokenimpl.go:60: 
TRACE: 2017/03/20 18:45:39 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:45:39 aunthenticate.go:44:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:45:39 aunthenticate.go:47: 2017-03-20 18:45:39
TRACE: 2017/03/20 18:45:39 aunthenticate.go:51: parsing time "2017-03-20 18:45:39": month out of range
TRACE: 2017/03/20 18:45:39 aunthenticate.go:54: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:45:39 aunthenticate.go:56: 0s
TRACE: 2017/03/20 18:45:39 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 18:45:40 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 18:53:22 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:53:22 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:53:22 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 18:53:27 QuestionList.go:16: java
TRACE: 2017/03/20 18:53:27 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 18:53:27 aunthenticate.go:23: parsing time "Dec 29, 2014 at 6:00:20am (SGT)" as "Jan 2, 2006 at 3:04:20am (MST)": cannot parse "am (SGT)" as "0am ("
TRACE: 2017/03/20 18:53:27 aunthenticate.go:26: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:53:27 aunthenticate.go:28: 0 0 0
TRACE: 2017/03/20 18:53:27 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 18:53:27 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 18:53:27 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 18:53:31 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 18:53:31 authenticatetokenimpl.go:60: 2015-01-02 15:04:05
TRACE: 2017/03/20 18:53:31 authenticatetokenimpl.go:63: 2015-01-02 15:04:05 +0000 UTC
TRACE: 2017/03/20 18:53:31 aunthenticate.go:44: abcxyz 2015-01-02 15:04:05 +0000 UTC
TRACE: 2017/03/20 18:53:31 aunthenticate.go:47: 2017-03-20 18:53:31
TRACE: 2017/03/20 18:53:31 aunthenticate.go:54: 2017-03-20 18:53:31 +0000 UTC
TRACE: 2017/03/20 18:53:31 aunthenticate.go:56: -19395h49m26s
TRACE: 2017/03/20 18:53:31 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 18:53:31 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 18:53:31 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 18:53:45 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 18:53:45 authenticatetokenimpl.go:33: {0xc0421b8a80 0xc042137bb0}
TRACE: 2017/03/20 18:53:45 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 18:53:45 aunthenticate.go:61: 2017-03-20 18:53:31 +0000 UTC
TRACE: 2017/03/20 18:53:45 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 18:53:46 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 18:57:50 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:57:50 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:57:50 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 18:57:52 QuestionList.go:16: java
TRACE: 2017/03/20 18:57:52 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 18:57:52 aunthenticate.go:23: parsing time "Dec 29, 2014 at 6:00:20am (SGT)" as "Jan 2, 2006 at 3:04:20am (MST)": cannot parse "am (SGT)" as "0am ("
TRACE: 2017/03/20 18:57:52 aunthenticate.go:26: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 18:57:52 aunthenticate.go:28: 0 0 0
TRACE: 2017/03/20 18:57:52 aunthenticate.go:36: abcxyz
TRACE: 2017/03/20 18:57:52 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 18:57:52 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 18:57:57 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 18:57:57 authenticatetokenimpl.go:60: 2017-03-20 18:53:31
TRACE: 2017/03/20 18:57:57 authenticatetokenimpl.go:63: 2017-03-20 18:53:31 +0000 UTC
TRACE: 2017/03/20 18:57:57 aunthenticate.go:44: abcxyz 2017-03-20 18:53:31 +0000 UTC
TRACE: 2017/03/20 18:57:57 aunthenticate.go:47: 2017-03-20 18:57:57
TRACE: 2017/03/20 18:57:57 aunthenticate.go:54: 2017-03-20 18:57:57 +0000 UTC
TRACE: 2017/03/20 18:57:57 aunthenticate.go:56: -4m26s
TRACE: 2017/03/20 18:57:57 aunthenticate.go:59: calling modifyfunction
TRACE: 2017/03/20 18:57:57 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 18:57:57 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 18:57:58 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 18:57:58 authenticatetokenimpl.go:33: {0xc0420322a0 0xc042004580}
TRACE: 2017/03/20 18:57:58 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 18:57:58 aunthenticate.go:61: 2017-03-20 18:57:57 +0000 UTC
TRACE: 2017/03/20 18:57:58 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 18:58:51 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 19:02:47 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 19:02:47 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 19:02:47 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 19:03:27 QuestionList.go:16: java
TRACE: 2017/03/20 19:03:27 QuestionList.go:17: abcxy
TRACE: 2017/03/20 19:03:27 aunthenticate.go:23: parsing time "Dec 29, 2014 at 6:00:00am (SGT)" as "Jan 2, 2006 at 3:04:20am (MST)": cannot parse "am (SGT)" as "0am ("
TRACE: 2017/03/20 19:03:27 aunthenticate.go:26: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:03:27 aunthenticate.go:28: 0 0 0
TRACE: 2017/03/20 19:03:27 aunthenticate.go:36: abcxy
TRACE: 2017/03/20 19:03:27 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 19:03:27 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 19:03:40 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/20 19:03:40 authenticatetokenimpl.go:60: 
TRACE: 2017/03/20 19:03:40 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:03:40 aunthenticate.go:44:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:03:40 aunthenticate.go:47: 2017-03-20 19:03:40
TRACE: 2017/03/20 19:03:40 aunthenticate.go:54: 2017-03-20 19:03:40 +0000 UTC
TRACE: 2017/03/20 19:03:40 aunthenticate.go:56: -2562047h47m16.854775808s
TRACE: 2017/03/20 19:03:40 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 19:03:41 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 19:05:45 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 19:05:45 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 19:05:45 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 19:05:53 QuestionList.go:16: java
TRACE: 2017/03/20 19:05:53 QuestionList.go:17: abcxy
TRACE: 2017/03/20 19:05:53 aunthenticate.go:23: parsing time "Dec 29, 2014 at 6:00:00am (SGT)" as "Jan 2, 2006 at 3:04:20am (MST)": cannot parse "am (SGT)" as "0am ("
TRACE: 2017/03/20 19:05:53 aunthenticate.go:26: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:05:53 aunthenticate.go:28: 0 0 0
TRACE: 2017/03/20 19:05:53 aunthenticate.go:36: abcxy
TRACE: 2017/03/20 19:05:53 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 19:05:53 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 19:06:14 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/20 19:06:14 authenticatetokenimpl.go:60: 
TRACE: 2017/03/20 19:06:14 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:06:14 aunthenticate.go:44:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:06:14 aunthenticate.go:47: 2017-03-20 19:06:14
TRACE: 2017/03/20 19:06:14 aunthenticate.go:54: 2017-03-20 19:06:14 +0000 UTC
TRACE: 2017/03/20 19:06:14 aunthenticate.go:56: -2562047h47m16.854775808s
TRACE: 2017/03/20 19:06:14 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 19:06:23 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 19:11:00 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 19:11:00 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 19:11:00 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 19:11:13 QuestionList.go:16: java
TRACE: 2017/03/20 19:11:13 QuestionList.go:17: abcxy
TRACE: 2017/03/20 19:11:13 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 19:11:13 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 19:11:13 aunthenticate.go:36: abcxy
TRACE: 2017/03/20 19:11:13 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 19:11:13 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 19:11:36 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/20 19:11:36 authenticatetokenimpl.go:60: 
TRACE: 2017/03/20 19:11:36 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:11:36 aunthenticate.go:44:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:11:36 aunthenticate.go:47: 2017-03-20 19:11:36
TRACE: 2017/03/20 19:11:36 aunthenticate.go:54: 2017-03-20 19:11:36 +0000 UTC
TRACE: 2017/03/20 19:11:36 aunthenticate.go:56: -2562047h47m16.854775808s
TRACE: 2017/03/20 19:11:36 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 19:11:37 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 19:12:28 QuestionList.go:16: java
TRACE: 2017/03/20 19:12:28 QuestionList.go:17: ab
TRACE: 2017/03/20 19:12:28 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 19:12:28 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 19:12:28 aunthenticate.go:36: ab
TRACE: 2017/03/20 19:12:28 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 19:12:28 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 19:12:40 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/20 19:12:40 authenticatetokenimpl.go:60: 
TRACE: 2017/03/20 19:12:40 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:12:40 aunthenticate.go:44:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:12:40 aunthenticate.go:47: 2017-03-20 19:12:40
TRACE: 2017/03/20 19:12:40 aunthenticate.go:54: 2017-03-20 19:12:40 +0000 UTC
TRACE: 2017/03/20 19:12:40 aunthenticate.go:56: -2562047h47m16.854775808s
TRACE: 2017/03/20 19:12:40 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 19:12:54 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 19:15:27 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 19:15:27 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 19:15:27 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 19:16:05 QuestionList.go:16: java
TRACE: 2017/03/20 19:16:05 QuestionList.go:17: ab
TRACE: 2017/03/20 19:16:05 aunthenticate.go:26: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 19:16:05 aunthenticate.go:28: 6 0 0
TRACE: 2017/03/20 19:16:05 aunthenticate.go:36: ab
TRACE: 2017/03/20 19:16:05 aunthenticate.go:42: calling  daoimpl
TRACE: 2017/03/20 19:16:05 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 19:16:10 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/20 19:16:10 authenticatetokenimpl.go:60: 
TRACE: 2017/03/20 19:16:10 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:16:10 aunthenticate.go:44:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:16:10 aunthenticate.go:47: 2017-03-20 19:16:10
TRACE: 2017/03/20 19:16:10 aunthenticate.go:54: 2017-03-20 19:16:10 +0000 UTC
TRACE: 2017/03/20 19:16:10 aunthenticate.go:56: -2562047h47m16.854775808s
TRACE: 2017/03/20 19:16:10 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 19:16:11 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 19:51:22 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 19:51:22 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 19:51:22 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 19:51:24 QuestionList.go:16: java
TRACE: 2017/03/20 19:51:24 QuestionList.go:17: ab
TRACE: 2017/03/20 19:51:24 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 19:51:24 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/20 19:51:24 aunthenticate.go:32: ab
TRACE: 2017/03/20 19:51:24 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/20 19:51:24 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 19:51:43 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/20 19:51:43 authenticatetokenimpl.go:60: 
TRACE: 2017/03/20 19:51:43 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:51:43 aunthenticate.go:38:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:51:43 aunthenticate.go:41: 2017-03-20 19:51:43
TRACE: 2017/03/20 19:51:43 aunthenticate.go:48: 2017-03-20 19:51:43 +0000 UTC
TRACE: 2017/03/20 19:51:43 aunthenticate.go:50: 2562047h47m16.854775807s
TRACE: 2017/03/20 19:51:43 aunthenticate.go:59: calling delete token function
TRACE: 2017/03/20 19:51:43 authenticatetokenimpl.go:71: calling DeleteToken function
TRACE: 2017/03/20 19:51:43 authenticatetokenimpl.go:73: after query execution
TRACE: 2017/03/20 19:51:44 authenticatetokenimpl.go:82: reached to execution
TRACE: 2017/03/20 19:51:44 authenticatetokenimpl.go:84: {0xc0420320e0 0xc042004350}
TRACE: 2017/03/20 19:51:44 aunthenticate.go:61: true
TRACE: 2017/03/20 19:51:44 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 19:51:45 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 19:52:15 QuestionList.go:16: java
TRACE: 2017/03/20 19:52:15 QuestionList.go:17: ab
TRACE: 2017/03/20 19:52:15 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 19:52:15 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/20 19:52:15 aunthenticate.go:32: ab
TRACE: 2017/03/20 19:52:15 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/20 19:52:15 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 19:53:12 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/20 19:53:12 authenticatetokenimpl.go:60: 
TRACE: 2017/03/20 19:53:12 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:53:12 aunthenticate.go:38:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:53:12 aunthenticate.go:41: 2017-03-20 19:53:12
TRACE: 2017/03/20 19:53:12 aunthenticate.go:48: 2017-03-20 19:53:12 +0000 UTC
TRACE: 2017/03/20 19:53:12 aunthenticate.go:50: 2562047h47m16.854775807s
TRACE: 2017/03/20 19:53:12 aunthenticate.go:59: calling delete token function
TRACE: 2017/03/20 19:53:12 authenticatetokenimpl.go:71: calling DeleteToken function
TRACE: 2017/03/20 19:53:12 authenticatetokenimpl.go:73: after query execution
TRACE: 2017/03/20 19:53:13 authenticatetokenimpl.go:82: reached to execution
TRACE: 2017/03/20 19:53:13 authenticatetokenimpl.go:84: {0xc0421ba930 0xc042137b80}
TRACE: 2017/03/20 19:53:13 aunthenticate.go:61: true
TRACE: 2017/03/20 19:53:13 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 19:53:14 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 19:53:17 QuestionList.go:16: java
TRACE: 2017/03/20 19:53:17 QuestionList.go:17: ab
TRACE: 2017/03/20 19:53:17 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 19:53:17 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/20 19:53:17 aunthenticate.go:32: ab
TRACE: 2017/03/20 19:53:17 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/20 19:53:17 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 19:53:33 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/20 19:53:33 authenticatetokenimpl.go:60: 
TRACE: 2017/03/20 19:53:33 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:53:33 aunthenticate.go:38:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 19:53:33 aunthenticate.go:41: 2017-03-20 19:53:33
TRACE: 2017/03/20 19:53:33 aunthenticate.go:48: 2017-03-20 19:53:33 +0000 UTC
TRACE: 2017/03/20 19:53:33 aunthenticate.go:50: 2562047h47m16.854775807s
TRACE: 2017/03/20 19:53:33 aunthenticate.go:59: calling delete token function
TRACE: 2017/03/20 19:53:33 authenticatetokenimpl.go:71: calling DeleteToken function
TRACE: 2017/03/20 19:53:33 authenticatetokenimpl.go:73: after query execution
TRACE: 2017/03/20 19:53:45 authenticatetokenimpl.go:82: reached to execution
TRACE: 2017/03/20 19:53:45 authenticatetokenimpl.go:84: {0xc0420325b0 0xc042005130}
TRACE: 2017/03/20 19:53:45 aunthenticate.go:61: true
TRACE: 2017/03/20 19:53:45 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 19:53:46 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 20:05:15 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 20:05:15 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 20:05:15 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 20:05:17 QuestionList.go:16: java
TRACE: 2017/03/20 20:05:17 QuestionList.go:17: ab
TRACE: 2017/03/20 20:05:17 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 20:05:17 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/20 20:05:17 aunthenticate.go:32: ab
TRACE: 2017/03/20 20:05:17 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/20 20:05:17 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 20:05:48 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/20 20:05:48 authenticatetokenimpl.go:60: 
TRACE: 2017/03/20 20:05:48 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 20:05:48 aunthenticate.go:38:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 20:05:49 QuestionList.go:16: java
TRACE: 2017/03/20 20:05:49 QuestionList.go:17: ab
TRACE: 2017/03/20 20:05:49 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 20:05:49 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/20 20:05:49 aunthenticate.go:32: ab
TRACE: 2017/03/20 20:05:49 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/20 20:05:49 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 20:06:17 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/20 20:06:17 authenticatetokenimpl.go:60: 
TRACE: 2017/03/20 20:06:17 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 20:06:17 aunthenticate.go:38:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 20:13:51 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 20:13:51 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 20:13:51 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 20:14:01 QuestionList.go:16: java
TRACE: 2017/03/20 20:14:01 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 20:14:01 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 20:14:01 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/20 20:14:01 aunthenticate.go:32: abcxyz
TRACE: 2017/03/20 20:14:01 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/20 20:14:01 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 20:14:35 QuestionList.go:16: java
TRACE: 2017/03/20 20:14:35 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 20:14:35 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 20:14:35 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/20 20:14:35 aunthenticate.go:32: abcxyz
TRACE: 2017/03/20 20:14:35 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/20 20:14:35 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 20:14:50 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 20:14:50 authenticatetokenimpl.go:60: 2017-03-20 18:57:57
TRACE: 2017/03/20 20:14:50 authenticatetokenimpl.go:63: 2017-03-20 18:57:57 +0000 UTC
TRACE: 2017/03/20 20:14:50 aunthenticate.go:38: abcxyz 2017-03-20 18:57:57 +0000 UTC
TRACE: 2017/03/20 20:14:50 aunthenticate.go:44: 2017-03-20 20:14:50
TRACE: 2017/03/20 20:14:50 aunthenticate.go:51: 2017-03-20 20:14:50 +0000 UTC
TRACE: 2017/03/20 20:14:50 aunthenticate.go:54: 4
TRACE: 2017/03/20 20:14:50 aunthenticate.go:57: calling modifyfunction
TRACE: 2017/03/20 20:14:50 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 20:14:50 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 20:14:50 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 20:14:50 authenticatetokenimpl.go:60: 2017-03-20 18:57:57
TRACE: 2017/03/20 20:14:50 authenticatetokenimpl.go:63: 2017-03-20 18:57:57 +0000 UTC
TRACE: 2017/03/20 20:14:50 aunthenticate.go:38: abcxyz 2017-03-20 18:57:57 +0000 UTC
TRACE: 2017/03/20 20:14:50 aunthenticate.go:44: 2017-03-20 20:14:50
TRACE: 2017/03/20 20:14:50 aunthenticate.go:51: 2017-03-20 20:14:50 +0000 UTC
TRACE: 2017/03/20 20:14:50 aunthenticate.go:54: 4
TRACE: 2017/03/20 20:14:50 aunthenticate.go:57: calling modifyfunction
TRACE: 2017/03/20 20:14:50 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 20:14:50 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 20:14:51 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 20:14:51 authenticatetokenimpl.go:33: {0xc0422280e0 0xc0420044c0}
TRACE: 2017/03/20 20:14:51 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 20:14:51 aunthenticate.go:59: 2017-03-20 20:14:50 +0000 UTC
TRACE: 2017/03/20 20:14:51 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 20:14:51 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 20:14:51 authenticatetokenimpl.go:33: {0xc0422281c0 0xc042135940}
TRACE: 2017/03/20 20:14:51 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 20:14:51 aunthenticate.go:59: 2017-03-20 20:14:50 +0000 UTC
TRACE: 2017/03/20 20:14:51 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 20:15:27 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 20:15:42 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 20:17:08 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 20:17:08 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 20:17:08 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 20:17:11 QuestionList.go:16: java
TRACE: 2017/03/20 20:17:11 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 20:17:11 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 20:17:11 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/20 20:17:11 aunthenticate.go:32: abcxyz
TRACE: 2017/03/20 20:17:11 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/20 20:17:11 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 20:17:44 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 20:17:44 authenticatetokenimpl.go:60: 2017-03-20 20:14:50
TRACE: 2017/03/20 20:17:44 authenticatetokenimpl.go:63: 2017-03-20 20:14:50 +0000 UTC
TRACE: 2017/03/20 20:17:44 aunthenticate.go:38: abcxyz 2017-03-20 20:14:50 +0000 UTC
TRACE: 2017/03/20 20:17:44 aunthenticate.go:44: 2017-03-20 20:17:44
TRACE: 2017/03/20 20:17:44 aunthenticate.go:51: 2017-03-20 20:17:44 +0000 UTC
TRACE: 2017/03/20 20:17:44 aunthenticate.go:53: 2m54s
TRACE: 2017/03/20 20:17:44 aunthenticate.go:55: 21
TRACE: 2017/03/20 20:17:44 aunthenticate.go:58: calling modifyfunction
TRACE: 2017/03/20 20:17:44 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 20:17:44 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 20:17:45 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 20:17:45 authenticatetokenimpl.go:33: {0xc0420320e0 0xc042004150}
TRACE: 2017/03/20 20:17:45 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 20:17:45 aunthenticate.go:60: 2017-03-20 20:17:44 +0000 UTC
TRACE: 2017/03/20 20:17:45 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 20:17:46 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 20:18:11 QuestionList.go:16: java
TRACE: 2017/03/20 20:18:11 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 20:18:11 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 20:18:11 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/20 20:18:11 aunthenticate.go:32: abcxyz
TRACE: 2017/03/20 20:18:11 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/20 20:18:11 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 20:18:19 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 20:18:19 authenticatetokenimpl.go:60: 2017-03-20 20:17:44
TRACE: 2017/03/20 20:18:19 authenticatetokenimpl.go:63: 2017-03-20 20:17:44 +0000 UTC
TRACE: 2017/03/20 20:18:19 aunthenticate.go:38: abcxyz 2017-03-20 20:17:44 +0000 UTC
TRACE: 2017/03/20 20:18:19 aunthenticate.go:44: 2017-03-20 20:18:19
TRACE: 2017/03/20 20:18:19 aunthenticate.go:51: 2017-03-20 20:18:19 +0000 UTC
TRACE: 2017/03/20 20:18:19 aunthenticate.go:53: 35s
TRACE: 2017/03/20 20:18:19 aunthenticate.go:55: 2
TRACE: 2017/03/20 20:18:19 aunthenticate.go:58: calling modifyfunction
TRACE: 2017/03/20 20:18:19 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 20:18:19 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 20:18:20 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 20:18:21 authenticatetokenimpl.go:33: {0xc042032460 0xc042004d50}
TRACE: 2017/03/20 20:18:21 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 20:18:21 aunthenticate.go:60: 2017-03-20 20:18:19 +0000 UTC
TRACE: 2017/03/20 20:18:21 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 20:19:19 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 20:20:38 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 20:20:38 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 20:20:38 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 20:20:44 QuestionList.go:16: java
TRACE: 2017/03/20 20:20:44 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 20:20:44 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 20:20:44 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/20 20:20:44 aunthenticate.go:32: abcxyz
TRACE: 2017/03/20 20:20:44 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/20 20:20:44 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 20:21:19 QuestionList.go:16: java
TRACE: 2017/03/20 20:21:19 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 20:21:19 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 20:21:19 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/20 20:21:19 aunthenticate.go:32: abcxyz
TRACE: 2017/03/20 20:21:19 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/20 20:21:19 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 20:21:32 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 20:21:32 authenticatetokenimpl.go:60: 2017-03-20 20:18:19
TRACE: 2017/03/20 20:21:32 authenticatetokenimpl.go:63: 2017-03-20 20:18:19 +0000 UTC
TRACE: 2017/03/20 20:21:32 aunthenticate.go:38: abcxyz 2017-03-20 20:18:19 +0000 UTC
TRACE: 2017/03/20 20:21:32 aunthenticate.go:44: 2017-03-20 20:21:32
TRACE: 2017/03/20 20:21:32 aunthenticate.go:51: 2017-03-20 20:21:32 +0000 UTC
TRACE: 2017/03/20 20:21:32 aunthenticate.go:53: 3m13s
TRACE: 2017/03/20 20:21:32 aunthenticate.go:55: 53611
TRACE: 2017/03/20 20:21:32 aunthenticate.go:58: calling modifyfunction
TRACE: 2017/03/20 20:21:32 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 20:21:32 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 20:21:32 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 20:21:32 authenticatetokenimpl.go:60: 2017-03-20 20:18:19
TRACE: 2017/03/20 20:21:32 authenticatetokenimpl.go:63: 2017-03-20 20:18:19 +0000 UTC
TRACE: 2017/03/20 20:21:32 aunthenticate.go:38: abcxyz 2017-03-20 20:18:19 +0000 UTC
TRACE: 2017/03/20 20:21:32 aunthenticate.go:44: 2017-03-20 20:21:32
TRACE: 2017/03/20 20:21:32 aunthenticate.go:51: 2017-03-20 20:21:32 +0000 UTC
TRACE: 2017/03/20 20:21:32 aunthenticate.go:53: 3m13s
TRACE: 2017/03/20 20:21:32 aunthenticate.go:55: 53611
TRACE: 2017/03/20 20:21:32 aunthenticate.go:58: calling modifyfunction
TRACE: 2017/03/20 20:21:32 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 20:21:32 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 20:21:33 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 20:21:33 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 20:21:33 authenticatetokenimpl.go:33: {0xc0421ba930 0xc042137bc0}
TRACE: 2017/03/20 20:21:33 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 20:21:33 aunthenticate.go:60: 2017-03-20 20:21:32 +0000 UTC
TRACE: 2017/03/20 20:21:33 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 20:21:33 authenticatetokenimpl.go:33: {0xc0421ba9a0 0xc042137c80}
TRACE: 2017/03/20 20:21:33 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 20:21:33 aunthenticate.go:60: 2017-03-20 20:21:32 +0000 UTC
TRACE: 2017/03/20 20:21:33 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 20:21:34 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 20:21:34 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 20:30:32 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 20:30:32 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 20:30:32 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 20:30:36 QuestionList.go:16: java
TRACE: 2017/03/20 20:30:36 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 20:30:36 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 20:30:36 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/20 20:30:36 aunthenticate.go:32: abcxyz
TRACE: 2017/03/20 20:30:36 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/20 20:30:36 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 20:31:10 QuestionList.go:16: java
TRACE: 2017/03/20 20:31:10 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 20:31:10 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 20:31:10 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/20 20:31:10 aunthenticate.go:32: abcxyz
TRACE: 2017/03/20 20:31:10 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/20 20:31:10 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 20:31:19 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 20:31:19 authenticatetokenimpl.go:60: 2017-03-20 20:21:32
TRACE: 2017/03/20 20:31:19 authenticatetokenimpl.go:63: 2017-03-20 20:21:32 +0000 UTC
TRACE: 2017/03/20 20:31:19 aunthenticate.go:38: abcxyz 2017-03-20 20:21:32 +0000 UTC
TRACE: 2017/03/20 20:31:19 aunthenticate.go:44: 2017-03-20 20:31:19
TRACE: 2017/03/20 20:31:19 aunthenticate.go:51: 2017-03-20 20:31:19 +0000 UTC
TRACE: 2017/03/20 20:31:19 aunthenticate.go:53: 9m47s
TRACE: 2017/03/20 20:31:19 aunthenticate.go:55: 163055
TRACE: 2017/03/20 20:31:19 aunthenticate.go:58: calling modifyfunction
TRACE: 2017/03/20 20:31:19 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 20:31:19 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 20:31:19 authenticatetokenimpl.go:58: Type is abcxyz
TRACE: 2017/03/20 20:31:19 authenticatetokenimpl.go:60: 2017-03-20 20:21:32
TRACE: 2017/03/20 20:31:19 authenticatetokenimpl.go:63: 2017-03-20 20:21:32 +0000 UTC
TRACE: 2017/03/20 20:31:19 aunthenticate.go:38: abcxyz 2017-03-20 20:21:32 +0000 UTC
TRACE: 2017/03/20 20:31:19 aunthenticate.go:44: 2017-03-20 20:31:19
TRACE: 2017/03/20 20:31:19 aunthenticate.go:51: 2017-03-20 20:31:19 +0000 UTC
TRACE: 2017/03/20 20:31:19 aunthenticate.go:53: 9m47s
TRACE: 2017/03/20 20:31:19 aunthenticate.go:55: 163055
TRACE: 2017/03/20 20:31:19 aunthenticate.go:58: calling modifyfunction
TRACE: 2017/03/20 20:31:19 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/20 20:31:19 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/20 20:31:21 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 20:31:21 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/20 20:31:21 authenticatetokenimpl.go:33: {0xc04221c3f0 0xc0421f2690}
TRACE: 2017/03/20 20:31:21 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 20:31:21 aunthenticate.go:60: 2017-03-20 20:31:19 +0000 UTC
TRACE: 2017/03/20 20:31:21 aunthenticate.go:64: calling delete token function
TRACE: 2017/03/20 20:31:21 authenticatetokenimpl.go:71: calling DeleteToken function
TRACE: 2017/03/20 20:31:21 authenticatetokenimpl.go:73: after query execution
TRACE: 2017/03/20 20:31:21 authenticatetokenimpl.go:33: {0xc04221c460 0xc042004330}
TRACE: 2017/03/20 20:31:21 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/20 20:31:21 aunthenticate.go:60: 2017-03-20 20:31:19 +0000 UTC
TRACE: 2017/03/20 20:31:21 aunthenticate.go:64: calling delete token function
TRACE: 2017/03/20 20:31:21 authenticatetokenimpl.go:71: calling DeleteToken function
TRACE: 2017/03/20 20:31:21 authenticatetokenimpl.go:73: after query execution
TRACE: 2017/03/20 20:31:22 authenticatetokenimpl.go:82: reached to execution
TRACE: 2017/03/20 20:31:22 authenticatetokenimpl.go:82: reached to execution
TRACE: 2017/03/20 20:31:23 authenticatetokenimpl.go:84: {0xc0421ba9a0 0xc042137ac0}
TRACE: 2017/03/20 20:31:23 aunthenticate.go:66: true
TRACE: 2017/03/20 20:31:23 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 20:31:23 authenticatetokenimpl.go:84: {0xc0421baa10 0xc042137b70}
TRACE: 2017/03/20 20:31:23 aunthenticate.go:66: true
TRACE: 2017/03/20 20:31:23 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 20:32:03 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 20:32:03 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 20:34:26 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 20:34:26 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 20:34:26 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 20:34:57 QuestionList.go:16: java
TRACE: 2017/03/20 20:34:57 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 20:34:57 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 20:34:57 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/20 20:34:57 aunthenticate.go:32: abcxyz
TRACE: 2017/03/20 20:34:57 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/20 20:34:57 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 20:35:07 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/20 20:35:07 authenticatetokenimpl.go:60: 
TRACE: 2017/03/20 20:35:07 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 20:35:07 aunthenticate.go:38:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 20:38:17 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 20:38:17 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 20:38:17 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 20:38:21 QuestionList.go:16: 
TRACE: 2017/03/20 20:38:21 QuestionList.go:17: abcxyz
TRACE: 2017/03/20 20:38:21 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/20 20:38:21 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/20 20:38:21 aunthenticate.go:32: abcxyz
TRACE: 2017/03/20 20:38:21 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/20 20:38:21 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/20 20:38:40 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/20 20:38:40 authenticatetokenimpl.go:60: 
TRACE: 2017/03/20 20:38:40 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/20 20:38:40 aunthenticate.go:38:  0001-01-01 00:00:00 +0000 UTC
=======
>>>>>>> 18705118fb062920bb265ed2a6de83022e614ba3
TRACE: 2017/03/20 12:06:53 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 12:06:53 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 12:06:53 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 12:06:53 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 12:06:53 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 12:06:53 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 12:06:53 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 12:06:53 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 12:06:53 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 12:06:53 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 12:06:53 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 12:06:53 debug.go:45: [GIN-debug] [ERROR] listen tcp :8082: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
>>>>>>> a3feecc5d30378336fc8c7e14413ed46e876d668
TRACE: 2017/03/20 12:25:41 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 12:25:41 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 12:25:41 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 12:25:41 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 12:25:41 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 12:25:41 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 12:25:41 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 12:25:41 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 12:25:41 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 12:25:41 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 12:25:41 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 13:06:15 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 13:06:15 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 13:06:15 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 13:06:15 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 13:06:15 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 13:06:15 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 13:06:15 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 13:06:15 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 13:06:15 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 13:06:15 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 13:06:15 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 15:15:01 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 15:15:33 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 15:15:43 questionimpl.go:40: totalquestions: []
TRACE: 2017/03/20 15:15:43 questionimpl.go:40: totalquestions: []
TRACE: 2017/03/20 15:23:24 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 15:24:07 questionimpl.go:40: totalquestions: []
TRACE: 2017/03/20 15:27:07 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 15:27:35 questionimpl.go:40: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/20 15:29:44 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 15:29:44 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 15:29:44 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 15:29:44 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 15:29:44 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 15:29:44 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 15:29:44 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 15:29:44 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 15:29:44 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 15:29:44 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 15:29:44 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 15:32:21 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 15:32:21 questionimpl.go:25: dial onlinetestuser:Rpqb_123: unknown network onlinetestuser:Rpqb_123
TRACE: 2017/03/20 15:43:24 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 15:43:24 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 15:43:24 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 15:43:24 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 15:43:24 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 15:43:24 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 15:43:24 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 15:43:24 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 15:43:24 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 15:43:24 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 15:43:24 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 15:43:24 debug.go:45: [GIN-debug] [ERROR] listen tcp :8082: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
TRACE: 2017/03/20 15:48:02 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 15:48:02 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 15:48:02 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 15:48:02 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 15:48:02 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 15:48:02 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 15:48:02 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 15:48:02 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 15:48:02 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 15:48:02 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 15:48:02 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 15:48:02 debug.go:45: [GIN-debug] [ERROR] listen tcp :8082: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
TRACE: 2017/03/20 17:59:12 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 17:59:12 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 17:59:12 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 17:59:12 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 17:59:12 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 17:59:12 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 17:59:12 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 17:59:12 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 17:59:12 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 17:59:12 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 17:59:12 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 18:00:26 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/20 18:00:29 questionimpl.go:25: ssh: unexpected packet in response to channel open: <nil>
TRACE: 2017/03/20 18:12:24 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:12:24 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 18:12:24 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 18:12:24 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:12:24 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 18:12:24 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 18:12:24 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 18:12:24 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 18:12:24 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 18:12:24 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 18:12:24 debug.go:45: [GIN-debug] Listening and serving HTTP on :8082
TRACE: 2017/03/20 18:12:24 debug.go:45: [GIN-debug] [ERROR] listen tcp :8082: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
TRACE: 2017/03/20 18:15:06 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:15:06 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 18:15:06 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 18:15:06 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:15:06 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 18:15:06 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 18:15:06 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 18:15:06 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 18:15:06 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 18:15:06 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 18:15:06 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/20 18:31:51 register.go:17: calling register manager
TRACE: 2017/03/20 18:31:54 userimpl.go:50: ssh: unexpected packet in response to channel open: <nil>
TRACE: 2017/03/20 18:36:07 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:36:07 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 18:36:07 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 18:36:07 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:36:07 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 18:36:07 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 18:36:07 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 18:36:07 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 18:36:07 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 18:36:07 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 18:36:07 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/20 18:36:11 register.go:17: calling register manager
TRACE: 2017/03/20 18:36:15 userimpl.go:50: ssh: unexpected packet in response to channel open: <nil>
TRACE: 2017/03/20 18:45:24 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 18:45:24 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 18:45:24 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 18:45:24 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 18:45:24 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 18:45:24 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 18:45:24 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 18:45:24 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 18:45:24 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 18:45:24 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 18:45:24 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/20 18:45:30 register.go:17: calling register manager
TRACE: 2017/03/20 18:45:34 userimpl.go:50: write tcp 192.168.0.8:56870->54.218.55.72:22: use of closed network connection
TRACE: 2017/03/20 19:52:16 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 19:52:16 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 19:52:16 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 19:52:16 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 19:52:16 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 19:52:16 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 19:52:16 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 19:52:16 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 19:52:16 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 19:52:16 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 19:52:16 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/20 19:52:21 register.go:17: calling register manager
TRACE: 2017/03/20 19:52:25 userimpl.go:50: write tcp 192.168.0.8:59063->54.218.55.72:22: use of closed network connection
TRACE: 2017/03/20 20:09:32 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 20:09:32 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 20:09:32 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 20:09:32 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 20:09:32 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 20:09:32 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 20:09:32 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 20:09:32 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 20:09:32 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 20:09:32 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 20:09:32 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/20 20:09:47 register.go:17: calling register manager
TRACE: 2017/03/20 20:09:49 userimpl.go:50: read tcp 192.168.0.8:60513->54.218.55.72:22: use of closed network connection
TRACE: 2017/03/20 20:11:53 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 20:11:53 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 20:11:53 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 20:11:53 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 20:11:53 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 20:11:53 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 20:11:53 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 20:11:53 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 20:11:53 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 20:11:53 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 20:11:53 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/20 20:11:56 register.go:17: calling register manager
TRACE: 2017/03/20 20:11:58 userimpl.go:50: read tcp 192.168.0.8:60701->54.218.55.72:22: use of closed network connection
TRACE: 2017/03/20 20:14:13 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 20:14:13 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 20:14:13 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 20:14:13 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 20:14:13 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 20:14:13 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 20:14:13 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 20:14:13 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 20:14:13 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 20:14:13 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 20:14:13 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/20 20:14:20 register.go:17: calling register manager
TRACE: 2017/03/20 20:14:22 userimpl.go:50: ssh: unexpected packet in response to channel open: <nil>
TRACE: 2017/03/20 20:18:34 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/20 20:18:34 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/20 20:18:34 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/20 20:18:34 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/20 20:18:34 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/20 20:18:34 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/20 20:18:34 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/20 20:18:34 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/20 20:18:34 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/20 20:18:34 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/20 20:18:34 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/20 20:18:39 register.go:17: calling register manager
TRACE: 2017/03/20 20:18:41 userimpl.go:50: read tcp 192.168.0.8:61461->54.218.55.72:22: use of closed network connection
<<<<<<< HEAD
TRACE: 2017/03/21 10:19:17 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 10:19:17 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 10:19:17 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 10:19:17 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 10:19:17 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 10:19:17 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 10:19:17 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 10:19:17 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/21 10:19:17 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/21 10:19:17 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 10:19:17 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/21 10:20:53 register.go:17: calling register manager
TRACE: 2017/03/21 10:20:55 userimpl.go:50: read tcp 192.168.0.8:54543->54.218.55.72:22: use of closed network connection
TRACE: 2017/03/21 10:24:37 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 10:24:37 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 10:24:37 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 10:24:37 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 10:24:37 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 10:24:37 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 10:24:37 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 10:24:37 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/21 10:24:37 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/21 10:24:37 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 10:24:37 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/21 10:24:40 register.go:17: calling register manager
TRACE: 2017/03/21 10:24:42 userimpl.go:50: read tcp 192.168.0.8:54861->54.218.55.72:22: use of closed network connection
=======
>>>>>>> bf457ed1017c64a30df4e6a82766ab44507bbaa9
<<<<<<< HEAD
TRACE: 2017/03/21 09:35:14 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 09:35:14 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 09:35:14 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 09:35:14 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 09:35:14 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 09:35:14 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 09:35:14 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 09:35:14 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/21 09:35:14 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/21 09:35:14 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 09:35:14 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/21 09:36:40 QuestionList.go:16: 
TRACE: 2017/03/21 09:36:40 QuestionList.go:17: uigsdoiaf7
TRACE: 2017/03/21 09:36:40 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/21 09:36:40 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 09:36:40 aunthenticate.go:32: uigsdoiaf7
TRACE: 2017/03/21 09:36:40 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/21 09:36:40 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/21 09:36:43 authenticatetokenimpl.go:58: Type is uigsdoiaf7
TRACE: 2017/03/21 09:36:43 authenticatetokenimpl.go:60: 2017-03-20 18:57:20
TRACE: 2017/03/21 09:36:43 authenticatetokenimpl.go:63: 2017-03-20 18:57:20 +0000 UTC
TRACE: 2017/03/21 09:36:43 aunthenticate.go:38: uigsdoiaf7 2017-03-20 18:57:20 +0000 UTC
TRACE: 2017/03/21 09:36:43 aunthenticate.go:44: 2017-03-21 09:36:43
TRACE: 2017/03/21 09:36:43 aunthenticate.go:51: 2017-03-21 09:36:43 +0000 UTC
TRACE: 2017/03/21 09:36:43 aunthenticate.go:53: 14h39m23s
TRACE: 2017/03/21 09:36:43 aunthenticate.go:55: 20
TRACE: 2017/03/21 09:36:43 aunthenticate.go:58: calling modifyfunction
TRACE: 2017/03/21 09:36:43 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/21 09:36:43 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/21 09:36:44 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/21 09:36:45 authenticatetokenimpl.go:33: {0xc0420320e0 0xc042004380}
TRACE: 2017/03/21 09:36:45 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/21 09:36:45 aunthenticate.go:60: 2017-03-21 09:36:43 +0000 UTC
TRACE: 2017/03/21 09:36:45 aunthenticate.go:64: calling delete token function
TRACE: 2017/03/21 09:36:45 authenticatetokenimpl.go:71: calling DeleteToken function
TRACE: 2017/03/21 09:36:45 authenticatetokenimpl.go:73: after query execution
TRACE: 2017/03/21 09:37:05 authenticatetokenimpl.go:82: reached to execution
TRACE: 2017/03/21 09:37:06 authenticatetokenimpl.go:84: {0xc0421fe070 0xc0421fc080}
TRACE: 2017/03/21 09:37:06 aunthenticate.go:66: true
TRACE: 2017/03/21 09:37:06 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/21 09:37:15 QuestionList.go:16: 
TRACE: 2017/03/21 09:37:15 QuestionList.go:17: uigsdoiaf7
TRACE: 2017/03/21 09:37:15 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/21 09:37:15 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 09:37:15 aunthenticate.go:32: uigsdoiaf7
TRACE: 2017/03/21 09:37:15 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/21 09:37:15 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/21 09:37:20 questionimpl.go:40: totalquestions: []
TRACE: 2017/03/21 09:37:20 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/21 09:37:20 authenticatetokenimpl.go:60: 
TRACE: 2017/03/21 09:37:20 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/21 09:37:20 aunthenticate.go:38:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/21 09:42:03 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 09:42:03 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 09:42:03 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 09:42:03 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 09:42:03 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 09:42:03 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 09:42:03 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 09:42:03 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/21 09:42:03 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/21 09:42:03 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 09:42:03 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/21 09:42:20 QuestionList.go:16: 
TRACE: 2017/03/21 09:42:20 QuestionList.go:17: uigsdoiaf
TRACE: 2017/03/21 09:42:20 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/21 09:42:20 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 09:42:20 aunthenticate.go:32: uigsdoiaf
TRACE: 2017/03/21 09:42:20 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/21 09:42:20 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/21 09:42:21 authenticatetokenimpl.go:58: Type is uigsdoiaf
TRACE: 2017/03/21 09:42:21 authenticatetokenimpl.go:60: 2017-03-20 18:57:20
TRACE: 2017/03/21 09:42:21 authenticatetokenimpl.go:63: 2017-03-20 18:57:20 +0000 UTC
TRACE: 2017/03/21 09:42:21 aunthenticate.go:38: uigsdoiaf 2017-03-20 18:57:20 +0000 UTC
TRACE: 2017/03/21 09:42:21 aunthenticate.go:44: 2017-03-21 09:42:21
TRACE: 2017/03/21 09:42:21 aunthenticate.go:51: 2017-03-21 09:42:21 +0000 UTC
TRACE: 2017/03/21 09:42:21 aunthenticate.go:53: 14.750277777777779
TRACE: 2017/03/21 09:42:21 aunthenticate.go:55: 21
TRACE: 2017/03/21 09:42:21 aunthenticate.go:58: calling modifyfunction
TRACE: 2017/03/21 09:42:21 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/21 09:42:21 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/21 09:42:21 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/21 09:42:22 authenticatetokenimpl.go:33: {0xc0420322a0 0xc042004580}
TRACE: 2017/03/21 09:42:22 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/21 09:42:22 aunthenticate.go:60: 2017-03-21 09:42:21 +0000 UTC
TRACE: 2017/03/21 09:42:22 aunthenticate.go:64: calling delete token function
TRACE: 2017/03/21 09:42:22 authenticatetokenimpl.go:71: calling DeleteToken function
TRACE: 2017/03/21 09:42:22 authenticatetokenimpl.go:73: after query execution
TRACE: 2017/03/21 09:42:22 authenticatetokenimpl.go:82: reached to execution
TRACE: 2017/03/21 09:42:23 authenticatetokenimpl.go:84: {0xc0420323f0 0xc0420046c0}
TRACE: 2017/03/21 09:42:23 aunthenticate.go:66: true
TRACE: 2017/03/21 09:42:23 FetchQuestion.go:16: calling Question manager
TRACE: 2017/03/21 09:42:23 questionimpl.go:40: totalquestions: []
TRACE: 2017/03/21 09:42:38 QuestionList.go:16: 
TRACE: 2017/03/21 09:42:38 QuestionList.go:17: uigsdoiaf
TRACE: 2017/03/21 09:42:38 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/21 09:42:38 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 09:42:38 aunthenticate.go:32: uigsdoiaf
TRACE: 2017/03/21 09:42:38 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/21 09:42:38 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/21 09:42:39 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/21 09:42:39 authenticatetokenimpl.go:60: 
TRACE: 2017/03/21 09:42:39 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/21 09:42:39 aunthenticate.go:38:  0001-01-01 00:00:00 +0000 UTC
=======
>>>>>>> 4a89b0d9b07c31b88debbb2b33a3bdd69a907690
>>>>>>> 332019f49b651335537543b2acdb1504f471980c
<<<<<<< HEAD
TRACE: 2017/03/21 15:14:29 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 15:14:29 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 15:14:29 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 15:14:29 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 15:14:29 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 15:14:29 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 15:14:29 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 15:14:29 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/21 15:14:29 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/21 15:14:29 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/21 15:14:29 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 15:14:29 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/21 15:14:29 debug.go:45: [GIN-debug] [ERROR] listen tcp :8083: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
TRACE: 2017/03/23 18:59:34 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/23 18:59:34 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/23 18:59:34 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/23 18:59:34 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/23 18:59:34 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/23 18:59:34 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/23 18:59:34 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/23 18:59:34 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/23 18:59:34 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/23 18:59:34 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/23 18:59:34 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/23 18:59:34 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/23 18:59:54 QuestionList.go:17: java
TRACE: 2017/03/23 18:59:54 QuestionList.go:18: 
TRACE: 2017/03/23 18:59:54 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/23 18:59:54 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/23 18:59:54 aunthenticate.go:32: 
TRACE: 2017/03/23 18:59:54 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/23 18:59:54 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/23 19:00:18 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/23 19:00:18 authenticatetokenimpl.go:60: 
TRACE: 2017/03/23 19:00:18 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/23 19:00:18 aunthenticate.go:38:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/23 19:02:12 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/23 19:02:12 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/23 19:02:12 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/23 19:02:12 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/23 19:02:12 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/23 19:02:12 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/23 19:02:12 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/23 19:02:12 debug.go:45: [GIN-debug] POST   /mocklogin                --> OnlineTestGo/webservice.Mocklogin (3 handlers)
TRACE: 2017/03/23 19:02:12 debug.go:45: [GIN-debug] GET    /mocklogout               --> OnlineTestGo/webservice.Mocklogout (3 handlers)
TRACE: 2017/03/23 19:02:12 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/23 19:02:12 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/23 19:02:12 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/23 19:02:14 QuestionList.go:17: java
TRACE: 2017/03/23 19:02:14 QuestionList.go:18: ZURryxSOzVMSAFboiwix
TRACE: 2017/03/23 19:02:14 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/23 19:02:14 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/23 19:02:14 aunthenticate.go:32: ZURryxSOzVMSAFboiwix
TRACE: 2017/03/23 19:02:14 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/23 19:02:14 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/23 19:02:47 QuestionList.go:17: java
TRACE: 2017/03/23 19:02:47 QuestionList.go:18: ZURryxSOzVMSAFboiwix
TRACE: 2017/03/23 19:02:47 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/23 19:02:47 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/23 19:02:47 aunthenticate.go:32: ZURryxSOzVMSAFboiwix
TRACE: 2017/03/23 19:02:47 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/23 19:02:47 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/23 19:03:04 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/23 19:03:04 authenticatetokenimpl.go:60: 
TRACE: 2017/03/23 19:03:04 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/23 19:03:04 aunthenticate.go:38:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/23 19:03:04 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/23 19:03:04 authenticatetokenimpl.go:60: 
TRACE: 2017/03/23 19:03:04 authenticatetokenimpl.go:63: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/23 19:03:04 aunthenticate.go:38:  0001-01-01 00:00:00 +0000 UTC
=======
>>>>>>> 04a60f8fa27a4ae5d87172e7440c035b48ada607
<<<<<<< HEAD
TRACE: 2017/03/21 15:18:29 QuestionList.go:16: 
TRACE: 2017/03/21 15:18:29 QuestionList.go:17: uigsdoiaf
TRACE: 2017/03/21 15:18:29 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/21 15:18:29 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 15:18:29 aunthenticate.go:32: uigsdoiaf
TRACE: 2017/03/21 15:18:29 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/21 15:18:29 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/21 15:19:06 QuestionList.go:16: 
TRACE: 2017/03/21 15:19:06 QuestionList.go:17: uigsdoiaf
TRACE: 2017/03/21 15:19:06 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/21 15:19:06 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 15:19:06 aunthenticate.go:32: uigsdoiaf
TRACE: 2017/03/21 15:19:06 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/21 15:19:06 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/21 15:19:24 authenticatetokenimpl.go:58: Type is uigsdoiaf
TRACE: 2017/03/21 15:19:24 authenticatetokenimpl.go:60: 2017-03-21 12:36:43
TRACE: 2017/03/21 15:19:24 authenticatetokenimpl.go:63: 2017-03-21 12:36:43 +0000 UTC
TRACE: 2017/03/21 15:19:24 aunthenticate.go:38: uigsdoiaf 2017-03-21 12:36:43 +0000 UTC
TRACE: 2017/03/21 15:19:24 aunthenticate.go:44: 2017-03-21 15:19:24
TRACE: 2017/03/21 15:19:24 aunthenticate.go:51: 2017-03-21 15:19:24 +0000 UTC
TRACE: 2017/03/21 15:19:24 authenticatetokenimpl.go:58: Type is uigsdoiaf
TRACE: 2017/03/21 15:19:24 authenticatetokenimpl.go:60: 2017-03-21 12:36:43
TRACE: 2017/03/21 15:19:24 authenticatetokenimpl.go:63: 2017-03-21 12:36:43 +0000 UTC
TRACE: 2017/03/21 15:19:24 aunthenticate.go:38: uigsdoiaf 2017-03-21 12:36:43 +0000 UTC
TRACE: 2017/03/21 15:19:24 aunthenticate.go:44: 2017-03-21 15:19:24
TRACE: 2017/03/21 15:19:24 aunthenticate.go:51: 2017-03-21 15:19:24 +0000 UTC
TRACE: 2017/03/21 15:19:24 aunthenticate.go:53: 2.711388888888889
TRACE: 2017/03/21 15:19:24 aunthenticate.go:58: calling modifyfunction
TRACE: 2017/03/21 15:19:24 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/21 15:19:24 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/21 15:19:24 aunthenticate.go:53: 2.711388888888889
TRACE: 2017/03/21 15:19:24 aunthenticate.go:58: calling modifyfunction
TRACE: 2017/03/21 15:19:24 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/21 15:19:24 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/21 15:19:53 QuestionList.go:16: 
TRACE: 2017/03/21 15:19:53 QuestionList.go:17: uigsdoiaf
TRACE: 2017/03/21 15:19:53 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/21 15:19:53 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 15:19:53 aunthenticate.go:32: uigsdoiaf
TRACE: 2017/03/21 15:19:53 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/21 15:19:53 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/21 15:20:26 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/21 15:20:26 authenticatetokenimpl.go:33: {0xc042330150 0xc04232e0e0}
TRACE: 2017/03/21 15:20:26 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/21 15:20:26 aunthenticate.go:60: 2017-03-21 15:19:24 +0000 UTC
TRACE: 2017/03/21 15:20:26 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 15:20:27 authenticatetokenimpl.go:58: Type is uigsdoiaf
TRACE: 2017/03/21 15:20:27 authenticatetokenimpl.go:60: 2017-03-21 15:19:24
TRACE: 2017/03/21 15:20:27 authenticatetokenimpl.go:63: 2017-03-21 15:19:24 +0000 UTC
TRACE: 2017/03/21 15:20:27 aunthenticate.go:38: uigsdoiaf 2017-03-21 15:19:24 +0000 UTC
TRACE: 2017/03/21 15:20:27 aunthenticate.go:44: 2017-03-21 15:20:27
TRACE: 2017/03/21 15:20:27 aunthenticate.go:51: 2017-03-21 15:20:27 +0000 UTC
TRACE: 2017/03/21 15:20:27 aunthenticate.go:53: 0.0175
TRACE: 2017/03/21 15:20:27 aunthenticate.go:58: calling modifyfunction
TRACE: 2017/03/21 15:20:27 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/21 15:20:27 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/21 15:20:27 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/21 15:20:27 authenticatetokenimpl.go:33: {0xc042312150 0xc0422f25d0}
TRACE: 2017/03/21 15:20:27 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/21 15:20:27 aunthenticate.go:60: 2017-03-21 15:19:24 +0000 UTC
TRACE: 2017/03/21 15:20:27 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 15:20:27 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/21 15:20:28 questionimpl.go:39: totalquestions: []
TRACE: 2017/03/21 15:20:28 questionimpl.go:39: totalquestions: []
TRACE: 2017/03/21 15:20:28 authenticatetokenimpl.go:33: {0xc0421beee0 0xc0422f2660}
TRACE: 2017/03/21 15:20:28 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/21 15:20:28 aunthenticate.go:60: 2017-03-21 15:20:27 +0000 UTC
TRACE: 2017/03/21 15:20:28 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 15:20:29 questionimpl.go:39: totalquestions: []
TRACE: 2017/03/21 15:21:20 QuestionList.go:16: 
TRACE: 2017/03/21 15:21:20 QuestionList.go:17: uigsdoiaf
TRACE: 2017/03/21 15:21:20 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/21 15:21:20 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 15:21:20 aunthenticate.go:32: uigsdoiaf
TRACE: 2017/03/21 15:21:20 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/21 15:21:20 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/21 15:21:37 authenticatetokenimpl.go:58: Type is uigsdoiaf
TRACE: 2017/03/21 15:21:37 authenticatetokenimpl.go:60: 2017-03-21 15:20:27
TRACE: 2017/03/21 15:21:37 authenticatetokenimpl.go:63: 2017-03-21 15:20:27 +0000 UTC
TRACE: 2017/03/21 15:21:37 aunthenticate.go:38: uigsdoiaf 2017-03-21 15:20:27 +0000 UTC
TRACE: 2017/03/21 15:21:37 aunthenticate.go:44: 2017-03-21 15:21:37
TRACE: 2017/03/21 15:21:37 aunthenticate.go:51: 2017-03-21 15:21:37 +0000 UTC
TRACE: 2017/03/21 15:21:37 aunthenticate.go:53: 0.019444444444444445
TRACE: 2017/03/21 15:21:37 aunthenticate.go:58: calling modifyfunction
TRACE: 2017/03/21 15:21:37 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/21 15:21:37 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/21 15:21:38 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/21 15:21:38 authenticatetokenimpl.go:33: {0xc0421282a0 0xc0420042d0}
TRACE: 2017/03/21 15:21:38 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/21 15:21:38 aunthenticate.go:60: 2017-03-21 15:21:37 +0000 UTC
TRACE: 2017/03/21 15:21:38 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 15:21:54 questionimpl.go:39: totalquestions: []
TRACE: 2017/03/21 15:23:14 QuestionList.go:16: java
TRACE: 2017/03/21 15:23:14 QuestionList.go:17: uigsdoiaf
TRACE: 2017/03/21 15:23:14 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/21 15:23:14 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 15:23:14 aunthenticate.go:32: uigsdoiaf
TRACE: 2017/03/21 15:23:14 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/21 15:23:14 authenticatetokenimpl.go:49: in AunthenticateToken function
TRACE: 2017/03/21 15:23:20 authenticatetokenimpl.go:58: Type is uigsdoiaf
TRACE: 2017/03/21 15:23:20 authenticatetokenimpl.go:60: 2017-03-21 15:21:37
TRACE: 2017/03/21 15:23:20 authenticatetokenimpl.go:63: 2017-03-21 15:21:37 +0000 UTC
TRACE: 2017/03/21 15:23:20 aunthenticate.go:38: uigsdoiaf 2017-03-21 15:21:37 +0000 UTC
TRACE: 2017/03/21 15:23:20 aunthenticate.go:44: 2017-03-21 15:23:20
TRACE: 2017/03/21 15:23:20 aunthenticate.go:51: 2017-03-21 15:23:20 +0000 UTC
TRACE: 2017/03/21 15:23:20 aunthenticate.go:53: 0.02861111111111111
TRACE: 2017/03/21 15:23:20 aunthenticate.go:58: calling modifyfunction
TRACE: 2017/03/21 15:23:20 authenticatetokenimpl.go:20: In modifyfunction
TRACE: 2017/03/21 15:23:20 authenticatetokenimpl.go:22: after query execution
TRACE: 2017/03/21 15:23:37 authenticatetokenimpl.go:31: reached to modifyexecution
TRACE: 2017/03/21 15:23:38 authenticatetokenimpl.go:33: {0xc042148310 0xc042136a40}
TRACE: 2017/03/21 15:23:38 authenticatetokenimpl.go:38: 0 <nil>
TRACE: 2017/03/21 15:23:38 aunthenticate.go:60: 2017-03-21 15:23:20 +0000 UTC
TRACE: 2017/03/21 15:23:38 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 15:23:39 questionimpl.go:39: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {29 which of these access specifier can be used for an interface? public} {29 which of these access specifier can be used for an interface? protected} {29 which of these access specifier can be used for an interface? private} {29 which of these access specifier can be used for an interface? all of the mentioned} {30 which of these access specifier can be used for an interface? public} {30 which of these access specifier can be used for an interface? protected} {30 which of these access specifier can be used for an interface? private} {30 which of these access specifier can be used for an interface? all of the mentioned} {31 which of these access specifier can be used for an interface? public} {31 which of these access specifier can be used for an interface? protected} {31 which of these access specifier can be used for an interface? private} {31 which of these access specifier can be used for an interface? all of the mentioned} {32 which of these access specifier can be used for an interface? public} {32 which of these access specifier can be used for an interface? protected} {32 which of these access specifier can be used for an interface? private} {32 which of these access specifier can be used for an interface? all of the mentioned}]
TRACE: 2017/03/21 15:34:39 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 200 with 500
TRACE: 2017/03/21 15:46:31 QuestionList.go:16: 
TRACE: 2017/03/21 15:46:31 QuestionList.go:17: 
TRACE: 2017/03/21 15:46:31 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/21 15:46:31 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 15:46:31 aunthenticate.go:32: 
TRACE: 2017/03/21 15:46:31 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/21 15:46:33 authenticatetokenimpl.go:51: in AunthenticateToken function
TRACE: 2017/03/21 15:46:36 authenticatetokenimpl.go:56: No uid with that token.
TRACE: 2017/03/21 15:46:36 authenticatetokenimpl.go:62: 
TRACE: 2017/03/21 15:46:36 authenticatetokenimpl.go:65: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/21 15:46:36 aunthenticate.go:38:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/21 15:47:54 logoutimpl.go:22: 
TRACE: 2017/03/21 15:47:54 logoutimpl.go:32: 0
TRACE: 2017/03/21 15:48:58 Login.go:16: entering login manager...
TRACE: 2017/03/21 15:48:58 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 15:48:58 userimpl.go:75: Executing query..
TRACE: 2017/03/21 15:49:31 Login.go:16: entering login manager...
TRACE: 2017/03/21 15:49:31 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 15:49:31 userimpl.go:75: Executing query..
TRACE: 2017/03/21 15:51:06 Login.go:16: entering login manager...
TRACE: 2017/03/21 15:51:06 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 15:51:06 userimpl.go:75: Executing query..
TRACE: 2017/03/21 15:52:55 Login.go:16: entering login manager...
TRACE: 2017/03/21 15:52:56 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 15:52:56 userimpl.go:75: Executing query..
TRACE: 2017/03/21 15:54:37 Login.go:16: entering login manager...
TRACE: 2017/03/21 15:54:37 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 15:54:37 userimpl.go:75: Executing query..
TRACE: 2017/03/21 15:57:02 Login.go:16: entering login manager...
TRACE: 2017/03/21 15:57:02 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 15:57:02 userimpl.go:75: Executing query..
TRACE: 2017/03/21 15:57:35 Login.go:16: entering login manager...
TRACE: 2017/03/21 15:57:35 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 15:57:35 userimpl.go:75: Executing query..
TRACE: 2017/03/21 15:58:24 Login.go:16: entering login manager...
TRACE: 2017/03/21 15:58:24 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 15:58:24 userimpl.go:75: Executing query..
TRACE: 2017/03/21 15:59:26 Login.go:16: entering login manager...
TRACE: 2017/03/21 15:59:26 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 15:59:26 userimpl.go:75: Executing query..
TRACE: 2017/03/21 16:00:11 userimpl.go:98: Response user Obj :  {0    r.s@r.com 123 }
TRACE: 2017/03/21 16:00:11 userimpl.go:98: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 16:00:11 userimpl.go:98: Response user Obj :  {0    r.s@r.com 123 }
TRACE: 2017/03/21 16:00:11 userimpl.go:98: Response user Obj :  {0    r.s@r.com 123 }
TRACE: 2017/03/21 16:00:11 userimpl.go:98: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 16:00:11 userimpl.go:98: Response user Obj :  {0    r.s@r.com 123 }
TRACE: 2017/03/21 16:00:11 userimpl.go:98: Response user Obj :  {0    r.s@r.com 123 }
TRACE: 2017/03/21 16:00:11 userimpl.go:98: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 16:00:11 userimpl.go:98: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 16:00:16 Login.go:37: Error 1146: Table 'onlinetestdb.Token' doesn't exist
TRACE: 2017/03/21 16:00:16 Login.go:48: {1 Sweta kDaCbGiRvncjyxMeUTIi admin}
TRACE: 2017/03/21 16:00:17 Login.go:37: Error 1146: Table 'onlinetestdb.Token' doesn't exist
TRACE: 2017/03/21 16:00:17 Login.go:48: {1 Sweta lVuXxDdfaJkKlJbryumF admin}
TRACE: 2017/03/21 16:00:17 Login.go:37: Error 1146: Table 'onlinetestdb.Token' doesn't exist
TRACE: 2017/03/21 16:00:17 Login.go:48: {1 Sweta rFruMdyufesgTaASqKrh admin}
TRACE: 2017/03/21 16:00:17 Login.go:37: Error 1146: Table 'onlinetestdb.Token' doesn't exist
TRACE: 2017/03/21 16:00:17 Login.go:48: {1 Sweta hKWNcbMDYBaeREsLiSCX admin}
TRACE: 2017/03/21 16:00:43 Login.go:16: entering login manager...
TRACE: 2017/03/21 16:00:43 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 16:00:43 userimpl.go:75: Executing query..
TRACE: 2017/03/21 16:00:47 userimpl.go:98: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 16:00:51 Login.go:37: Error 1146: Table 'onlinetestdb.Token' doesn't exist
TRACE: 2017/03/21 16:00:51 Login.go:48: {1 Sweta pmitSNDkjjNjcszoFtdB admin}
TRACE: 2017/03/21 16:04:22 Login.go:16: entering login manager...
TRACE: 2017/03/21 16:04:22 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 16:04:22 userimpl.go:75: Executing query..
TRACE: 2017/03/21 16:04:26 userimpl.go:98: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 16:04:30 Login.go:37: Error 1146: Table 'onlinetestdb.Token' doesn't exist
TRACE: 2017/03/21 16:04:30 Login.go:48: {1 Sweta MUSrYmvwtnteGTnqHLEN admin}
TRACE: 2017/03/21 16:04:44 logoutimpl.go:22: pmitSNDkjjNjcszoFtdB
TRACE: 2017/03/21 16:04:44 logoutimpl.go:32: 0
TRACE: 2017/03/21 16:09:17 QuestionList.go:16: java
TRACE: 2017/03/21 16:09:17 QuestionList.go:17: uigsdoiaf
TRACE: 2017/03/21 16:09:17 aunthenticate.go:22: 2014-12-29 06:00:00 +0000 SGT
TRACE: 2017/03/21 16:09:17 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 16:09:17 aunthenticate.go:32: uigsdoiaf
TRACE: 2017/03/21 16:09:17 aunthenticate.go:36: calling  daoimpl
TRACE: 2017/03/21 16:09:19 authenticatetokenimpl.go:51: in AunthenticateToken function
TRACE: 2017/03/21 16:09:22 authenticatetokenimpl.go:56: No uid with that token.
TRACE: 2017/03/21 16:09:22 authenticatetokenimpl.go:62: 
TRACE: 2017/03/21 16:09:22 authenticatetokenimpl.go:65: 0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/21 16:09:22 aunthenticate.go:38:  0001-01-01 00:00:00 +0000 UTC
TRACE: 2017/03/21 16:09:51 Login.go:16: entering login manager...
TRACE: 2017/03/21 16:09:51 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 16:09:51 userimpl.go:75: Executing query..
TRACE: 2017/03/21 16:09:55 userimpl.go:98: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 16:09:57 loginimpl.go:15: token inserted
TRACE: 2017/03/21 16:09:57 loginimpl.go:16: {0 1 oypeCjserkHcmqrQQoVG 2017-03-21 16:09:55.4776218 +0530 IST}
TRACE: 2017/03/21 16:09:59 Login.go:37: Error 1146: Table 'onlinetestdb.Token' doesn't exist
TRACE: 2017/03/21 16:09:59 Login.go:48: {1 Sweta oypeCjserkHcmqrQQoVG admin}
TRACE: 2017/03/21 16:11:35 Login.go:16: entering login manager...
TRACE: 2017/03/21 16:11:35 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 16:11:35 userimpl.go:75: Executing query..
TRACE: 2017/03/21 16:11:39 userimpl.go:98: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 16:11:44 Login.go:37: Error 1146: Table 'onlinetestdb.Token' doesn't exist
TRACE: 2017/03/21 16:11:44 Login.go:48: {1 Sweta SajDCbBbukNpzAoEMHJn admin}
TRACE: 2017/03/21 16:21:52 Login.go:16: entering login manager...
TRACE: 2017/03/21 16:21:52 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 16:21:52 userimpl.go:75: Executing query..
TRACE: 2017/03/21 16:21:58 userimpl.go:98: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 16:22:02 Login.go:48: {0   }
TRACE: 2017/03/21 16:22:09 Login.go:16: entering login manager...
TRACE: 2017/03/21 16:22:09 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 16:22:09 userimpl.go:75: Executing query..
TRACE: 2017/03/21 16:22:14 userimpl.go:98: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 16:22:19 Login.go:48: {0   }
TRACE: 2017/03/21 16:28:51 Login.go:16: entering login manager...
TRACE: 2017/03/21 16:28:51 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 16:28:51 userimpl.go:75: Executing query..
TRACE: 2017/03/21 16:28:55 userimpl.go:98: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 16:28:59 Login.go:48: {0   }
TRACE: 2017/03/21 16:30:31 Login.go:16: entering login manager...
TRACE: 2017/03/21 16:30:31 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 16:30:31 userimpl.go:75: Executing query..
TRACE: 2017/03/21 16:30:35 userimpl.go:98: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 16:30:39 Login.go:48: {0   }
TRACE: 2017/03/21 16:31:22 Login.go:16: entering login manager...
TRACE: 2017/03/21 16:31:22 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 16:31:22 userimpl.go:75: Executing query..
TRACE: 2017/03/21 16:33:50 Login.go:16: entering login manager...
TRACE: 2017/03/21 16:33:50 userimpl.go:73: entering AuthenticateUser Impl
TRACE: 2017/03/21 16:33:50 userimpl.go:75: Executing query..
TRACE: 2017/03/21 16:33:54 userimpl.go:98: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/21 16:33:57 Login.go:37: Error 1146: Table 'onlinetestdb.Token' doesn't exist
TRACE: 2017/03/21 16:33:57 Login.go:48: {2 rakesh VSmRHxscjNZjDngSrTVi user}
=======
TRACE: 2017/03/21 15:21:07 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 15:21:07 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 15:21:07 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 15:21:07 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/21 15:21:07 debug.go:45: [GIN-debug] [ERROR] listen tcp :8083: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
TRACE: 2017/03/21 16:09:10 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 16:09:10 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 16:09:10 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 16:09:10 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/21 16:09:10 debug.go:45: [GIN-debug] [ERROR] listen tcp :8083: bind: Only one usage of each socket address (protocol/network address/port) is normally permitted.
TRACE: 2017/03/21 16:15:59 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 16:15:59 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 16:15:59 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 16:15:59 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/21 16:16:08 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 16:16:08 QuestionList.go:18: java
TRACE: 2017/03/21 16:16:08 QuestionList.go:19: uigsdoiaf
TRACE: 2017/03/21 16:16:08 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 16:16:08 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 16:16:08 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 16:16:08 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 16:16:08 authenticatetokenimpl.go:45: entering in AunthenticateToken() function
TRACE: 2017/03/21 16:16:08 authenticatetokenimpl.go:46: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 16:16:26 authenticatetokenimpl.go:55: Type is uigsdoiaf
TRACE: 2017/03/21 16:16:26 aunthenticate.go:42: 2017-03-21 16:16:26
TRACE: 2017/03/21 16:16:26 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/21 16:16:26 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/21 16:16:26 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/21 16:16:41 authenticatetokenimpl.go:30: {0xc042032230 0xc042004470}
TRACE: 2017/03/21 16:16:41 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/21 16:16:41 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/21 16:16:41 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/21 16:16:41 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 16:16:41 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/21 16:16:41 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/21 16:16:41 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/21 16:16:50 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 16:16:50 QuestionList.go:18: java
TRACE: 2017/03/21 16:16:50 QuestionList.go:19: uigsdoiaf
TRACE: 2017/03/21 16:16:50 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 16:16:50 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 16:16:50 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 16:16:50 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 16:16:50 authenticatetokenimpl.go:45: entering in AunthenticateToken() function
TRACE: 2017/03/21 16:16:50 authenticatetokenimpl.go:46: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 16:17:01 authenticatetokenimpl.go:55: Type is uigsdoiaf
TRACE: 2017/03/21 16:17:01 aunthenticate.go:42: 2017-03-21 16:17:01
TRACE: 2017/03/21 16:17:01 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/21 16:17:01 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/21 16:17:01 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/21 16:17:02 authenticatetokenimpl.go:30: {0xc0421bad90 0xc0421fe340}
TRACE: 2017/03/21 16:17:02 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/21 16:17:02 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/21 16:17:02 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/21 16:17:02 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 16:17:02 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/21 16:17:02 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/21 16:17:02 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/21 16:26:07 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 16:26:07 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 16:26:07 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 16:26:07 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/21 16:28:00 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 16:28:00 QuestionList.go:18: fundamental
TRACE: 2017/03/21 16:28:00 QuestionList.go:19: uigsdoiaf
TRACE: 2017/03/21 16:28:00 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 16:28:00 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 16:28:00 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 16:28:00 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 16:28:00 authenticatetokenimpl.go:45: entering in AunthenticateToken() function
TRACE: 2017/03/21 16:28:00 authenticatetokenimpl.go:46: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 16:28:18 authenticatetokenimpl.go:55: Type is uigsdoiaf
TRACE: 2017/03/21 16:28:18 aunthenticate.go:42: 2017-03-21 16:28:18
TRACE: 2017/03/21 16:28:18 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/21 16:28:18 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/21 16:28:18 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/21 16:28:34 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 16:28:34 QuestionList.go:18: fundamental
TRACE: 2017/03/21 16:28:34 QuestionList.go:19: uigsdoiaf
TRACE: 2017/03/21 16:28:34 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 16:28:34 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 16:28:34 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 16:28:34 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 16:28:34 authenticatetokenimpl.go:45: entering in AunthenticateToken() function
TRACE: 2017/03/21 16:28:34 authenticatetokenimpl.go:46: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 16:29:09 authenticatetokenimpl.go:55: Type is uigsdoiaf
TRACE: 2017/03/21 16:29:09 aunthenticate.go:42: 2017-03-21 16:29:09
TRACE: 2017/03/21 16:29:09 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/21 16:29:09 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/21 16:29:09 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/21 16:29:09 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 16:29:09 QuestionList.go:18: fundamental
TRACE: 2017/03/21 16:29:09 QuestionList.go:19: uigsdoiaf
TRACE: 2017/03/21 16:29:09 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 16:29:09 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 16:29:09 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 16:29:09 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 16:29:09 authenticatetokenimpl.go:45: entering in AunthenticateToken() function
TRACE: 2017/03/21 16:29:09 authenticatetokenimpl.go:46: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 16:29:09 authenticatetokenimpl.go:30: {0xc04220e1c0 0xc042004120}
TRACE: 2017/03/21 16:29:09 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/21 16:29:09 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/21 16:29:09 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/21 16:29:09 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 16:29:09 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/21 16:29:09 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/21 16:29:09 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/21 16:29:10 authenticatetokenimpl.go:30: {0xc04220e460 0xc0422360a0}
TRACE: 2017/03/21 16:29:10 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/21 16:29:10 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/21 16:29:10 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/21 16:29:10 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 16:29:10 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/21 16:29:10 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/21 16:29:10 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/21 16:29:10 authenticatetokenimpl.go:55: Type is uigsdoiaf
TRACE: 2017/03/21 16:29:10 aunthenticate.go:42: 2017-03-21 16:29:10
TRACE: 2017/03/21 16:29:10 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/21 16:29:10 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/21 16:29:10 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/21 16:29:11 authenticatetokenimpl.go:30: {0xc0421babd0 0xc042137f90}
TRACE: 2017/03/21 16:29:11 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/21 16:29:11 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/21 16:29:11 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/21 16:29:11 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 16:29:11 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/21 16:29:11 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/21 16:29:11 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/21 16:29:48 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 16:29:48 QuestionList.go:18: fundamental
TRACE: 2017/03/21 16:29:48 QuestionList.go:19: uigsdoiaf
TRACE: 2017/03/21 16:29:48 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 16:29:48 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 16:29:48 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 16:29:48 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 16:29:48 authenticatetokenimpl.go:45: entering in AunthenticateToken() function
TRACE: 2017/03/21 16:29:48 authenticatetokenimpl.go:46: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 16:29:51 authenticatetokenimpl.go:55: Type is uigsdoiaf
TRACE: 2017/03/21 16:29:51 aunthenticate.go:42: 2017-03-21 16:29:51
TRACE: 2017/03/21 16:29:51 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/21 16:29:51 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/21 16:29:51 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/21 16:29:53 authenticatetokenimpl.go:30: {0xc04220e620 0xc0421debf0}
TRACE: 2017/03/21 16:29:53 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/21 16:29:53 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/21 16:29:53 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/21 16:29:53 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 16:29:53 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/21 16:29:53 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/21 16:29:53 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/21 16:41:22 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 16:41:22 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 16:41:22 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 16:41:22 debug.go:45: [GIN-debug] Listening and serving HTTP on :8083
TRACE: 2017/03/21 16:41:27 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 16:41:27 QuestionList.go:18: fundamental
TRACE: 2017/03/21 16:41:27 QuestionList.go:19: uigsdoiaf
TRACE: 2017/03/21 16:41:27 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 16:41:27 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 16:41:27 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 16:41:27 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 16:41:27 authenticatetokenimpl.go:45: entering in AunthenticateToken() function
TRACE: 2017/03/21 16:41:27 authenticatetokenimpl.go:46: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 16:41:46 authenticatetokenimpl.go:55: Type is uigsdoiaf
TRACE: 2017/03/21 16:41:46 aunthenticate.go:42: 2017-03-21 16:41:46
TRACE: 2017/03/21 16:41:46 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/21 16:41:46 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/21 16:41:46 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/21 16:42:00 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 16:42:00 QuestionList.go:18: fundamental
TRACE: 2017/03/21 16:42:00 QuestionList.go:19: uigsdoiaf
TRACE: 2017/03/21 16:42:00 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 16:42:00 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 16:42:00 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 16:42:00 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 16:42:00 authenticatetokenimpl.go:45: entering in AunthenticateToken() function
TRACE: 2017/03/21 16:42:00 authenticatetokenimpl.go:46: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 16:42:30 authenticatetokenimpl.go:30: {0xc0421baaf0 0xc042135b70}
TRACE: 2017/03/21 16:42:30 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/21 16:42:30 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/21 16:42:30 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/21 16:42:30 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 16:42:30 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/21 16:42:30 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/21 16:42:30 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/21 16:42:38 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 16:42:38 QuestionList.go:18: fundamental
TRACE: 2017/03/21 16:42:38 QuestionList.go:19: uigsdoiaf
TRACE: 2017/03/21 16:42:38 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 16:42:38 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 16:42:38 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 16:42:38 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 16:42:38 authenticatetokenimpl.go:45: entering in AunthenticateToken() function
TRACE: 2017/03/21 16:42:38 authenticatetokenimpl.go:46: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 16:42:45 authenticatetokenimpl.go:55: Type is uigsdoiaf
TRACE: 2017/03/21 16:42:45 aunthenticate.go:42: 2017-03-21 16:42:45
TRACE: 2017/03/21 16:42:45 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/21 16:42:45 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/21 16:42:45 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/21 16:42:46 authenticatetokenimpl.go:55: Type is uigsdoiaf
TRACE: 2017/03/21 16:42:46 aunthenticate.go:42: 2017-03-21 16:42:46
TRACE: 2017/03/21 16:42:46 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/21 16:42:46 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/21 16:42:46 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/21 16:42:46 authenticatetokenimpl.go:30: {0xc0420322a0 0xc042004900}
TRACE: 2017/03/21 16:42:46 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/21 16:42:46 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/21 16:42:46 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/21 16:42:46 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 16:42:46 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/21 16:42:46 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/21 16:42:46 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/21 16:42:53 authenticatetokenimpl.go:30: {0xc0421bac40 0xc042135f70}
TRACE: 2017/03/21 16:42:53 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/21 16:42:53 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/21 16:42:53 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/21 16:42:53 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 16:42:53 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/21 16:42:53 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/21 16:42:53 questionimpl.go:18: executing query and Fetching Questions By Type 
>>>>>>> 1b875ee58b327bd2edf8fcbad534c3eb3e0a7982
TRACE: 2017/03/21 16:59:54 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 16:59:54 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 16:59:54 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 16:59:54 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/21 17:04:53 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 17:04:53 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 17:04:53 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 17:04:53 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/21 17:26:38 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 17:26:38 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 17:26:38 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 17:26:38 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/21 17:26:38 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 17:26:38 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 17:26:38 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 17:26:38 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 17:26:38 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 17:26:38 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/21 18:47:04 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 18:47:04 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 18:47:04 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 18:47:04 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/21 18:47:04 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 18:47:04 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 18:47:04 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 18:47:04 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 18:47:04 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 18:47:04 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/21 18:48:26 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 18:48:26 QuestionList.go:18: java
TRACE: 2017/03/21 18:48:26 QuestionList.go:19: WtydjzEpItekHzcLzpeq
TRACE: 2017/03/21 18:48:26 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 18:48:26 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 18:48:27 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 18:48:27 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 18:48:29 authenticatetokenimpl.go:47: entering in AunthenticateToken() function
TRACE: 2017/03/21 18:48:29 authenticatetokenimpl.go:48: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 18:48:30 authenticatetokenimpl.go:53: No uid with that token.
TRACE: 2017/03/21 19:00:32 Login.go:14: entering webservice.Login()
TRACE: 2017/03/21 19:00:32 Login.go:19: calling manager.Login()
TRACE: 2017/03/21 19:00:32 Login.go:16: entering manager.login
TRACE: 2017/03/21 19:00:32 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/21 19:00:32 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/21 19:00:32 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/21 19:00:36 userimpl.go:102: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 19:00:36 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/21 19:00:36 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/21 19:00:36 loginimpl.go:15: exntering in SaveToken() function
TRACE: 2017/03/21 19:00:36 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/21 19:00:39 Login.go:37: Error 1146: Table 'onlinetestdb.Token' doesn't exist
TRACE: 2017/03/21 19:00:39 Login.go:48: {1 Sweta SZZvapNJUiSZwKMMfiUS admin}
TRACE: 2017/03/21 19:02:11 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 19:02:11 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 19:02:11 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 19:02:11 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/21 19:02:11 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 19:02:11 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 19:02:11 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 19:02:11 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 19:02:11 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 19:02:11 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/21 19:02:22 Login.go:14: entering webservice.Login()
TRACE: 2017/03/21 19:02:22 Login.go:19: calling manager.Login()
TRACE: 2017/03/21 19:02:22 Login.go:16: entering manager.login
TRACE: 2017/03/21 19:02:22 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/21 19:02:22 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/21 19:02:22 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/21 19:02:26 userimpl.go:102: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 19:02:26 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/21 19:02:26 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/21 19:02:26 loginimpl.go:15: exntering in SaveToken() function
TRACE: 2017/03/21 19:02:26 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/21 19:02:29 Login.go:48: {0   }
TRACE: 2017/03/21 19:02:48 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 19:02:48 QuestionList.go:18: fundamental
TRACE: 2017/03/21 19:02:48 QuestionList.go:19: 
TRACE: 2017/03/21 19:02:48 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 19:02:48 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 19:02:48 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 19:02:48 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 19:02:50 authenticatetokenimpl.go:47: entering in AunthenticateToken() function
TRACE: 2017/03/21 19:02:50 authenticatetokenimpl.go:48: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 19:02:52 authenticatetokenimpl.go:53: No uid with that token.
TRACE: 2017/03/21 19:03:41 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 19:03:41 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 19:03:41 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 19:03:41 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/21 19:03:41 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 19:03:41 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 19:03:41 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 19:03:41 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 19:03:41 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 19:03:41 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/21 19:03:56 Login.go:14: entering webservice.Login()
TRACE: 2017/03/21 19:03:56 Login.go:19: calling manager.Login()
TRACE: 2017/03/21 19:03:56 Login.go:16: entering manager.login
TRACE: 2017/03/21 19:03:56 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/21 19:03:56 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/21 19:03:56 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/21 19:04:00 userimpl.go:102: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 19:04:00 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/21 19:04:00 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/21 19:04:00 loginimpl.go:15: exntering in SaveToken() function {0 1 gYLoSAFIioHRZsqWpNVv 2017-03-21 19:04:00.2093231 +0530 IST}
TRACE: 2017/03/21 19:04:00 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/21 19:04:03 Login.go:48: {0   }
TRACE: 2017/03/21 19:04:13 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 19:04:13 QuestionList.go:18: fundamental
TRACE: 2017/03/21 19:04:13 QuestionList.go:19: 
TRACE: 2017/03/21 19:04:13 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 19:04:13 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 19:04:13 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 19:04:13 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 19:04:15 authenticatetokenimpl.go:47: entering in AunthenticateToken() function
TRACE: 2017/03/21 19:04:15 authenticatetokenimpl.go:48: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 19:04:17 authenticatetokenimpl.go:53: No uid with that token.
TRACE: 2017/03/21 19:05:18 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 19:05:18 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 19:05:18 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 19:05:18 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/21 19:05:18 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 19:05:18 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 19:05:18 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 19:05:18 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 19:05:18 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 19:05:18 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/21 19:05:34 Login.go:14: entering webservice.Login()
TRACE: 2017/03/21 19:05:34 Login.go:19: calling manager.Login()
TRACE: 2017/03/21 19:05:34 Login.go:16: entering manager.login
TRACE: 2017/03/21 19:05:34 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/21 19:05:34 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/21 19:05:34 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/21 19:05:38 userimpl.go:102: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 19:05:38 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/21 19:05:38 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/21 19:05:38 loginimpl.go:15: exntering in SaveToken() function {0 1 aGqIURBgesBdCdHRTgMm 2017-03-21 19:05:38.4619196 +0530 IST}
TRACE: 2017/03/21 19:05:38 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/21 19:05:42 Login.go:48: {0   }
TRACE: 2017/03/21 19:05:51 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 19:05:51 QuestionList.go:18: fundamental
TRACE: 2017/03/21 19:05:51 QuestionList.go:19: 
TRACE: 2017/03/21 19:05:51 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 19:05:51 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 19:05:51 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 19:05:51 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 19:05:53 authenticatetokenimpl.go:47: entering in AunthenticateToken() function
TRACE: 2017/03/21 19:05:53 authenticatetokenimpl.go:48: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 19:05:55 authenticatetokenimpl.go:53: No uid with that token.
TRACE: 2017/03/21 19:10:12 Login.go:14: entering webservice.Login()
TRACE: 2017/03/21 19:10:12 Login.go:19: calling manager.Login()
TRACE: 2017/03/21 19:10:12 Login.go:16: entering manager.login
TRACE: 2017/03/21 19:10:12 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/21 19:10:12 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/21 19:10:12 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/21 19:10:16 userimpl.go:102: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 19:10:16 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/21 19:10:16 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/21 19:10:16 loginimpl.go:15: exntering in SaveToken() function {0 1 GhNpsWnLGFdmyaknzqyX 2017-03-21 19:10:16.6527194 +0530 IST}
TRACE: 2017/03/21 19:10:16 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/21 19:10:20 Login.go:48: {0   }
TRACE: 2017/03/21 19:10:27 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 19:10:27 QuestionList.go:18: java
TRACE: 2017/03/21 19:10:27 QuestionList.go:19: 
TRACE: 2017/03/21 19:10:27 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 19:10:27 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 19:10:27 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 19:10:27 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 19:10:29 authenticatetokenimpl.go:47: entering in AunthenticateToken() function
TRACE: 2017/03/21 19:10:29 authenticatetokenimpl.go:48: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 19:10:31 authenticatetokenimpl.go:53: No uid with that token.
TRACE: 2017/03/21 19:10:59 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 19:10:59 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 19:10:59 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 19:10:59 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/21 19:10:59 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 19:10:59 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 19:10:59 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 19:10:59 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 19:10:59 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 19:10:59 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/21 19:11:24 Login.go:14: entering webservice.Login()
TRACE: 2017/03/21 19:11:24 Login.go:19: calling manager.Login()
TRACE: 2017/03/21 19:11:24 Login.go:16: entering manager.login
TRACE: 2017/03/21 19:11:24 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/21 19:11:24 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/21 19:11:24 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/21 19:11:28 userimpl.go:102: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 19:11:28 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/21 19:11:28 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/21 19:11:28 loginimpl.go:15: exntering in SaveToken() function {0 1 QHXrCwKCwsWdNnHeFIKe 2017-03-21 19:11:28.2465813 +0530 IST}
TRACE: 2017/03/21 19:11:28 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/21 19:11:30 loginimpl.go:19: token inserted
TRACE: 2017/03/21 19:11:30 loginimpl.go:20: {0 1 QHXrCwKCwsWdNnHeFIKe 2017-03-21 19:11:28.2465813 +0530 IST}
TRACE: 2017/03/21 19:11:32 loginimpl.go:38: last inserted id: 2
TRACE: 2017/03/21 19:11:32 Login.go:48: {0   }
TRACE: 2017/03/21 19:11:40 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 19:11:40 QuestionList.go:18: java
TRACE: 2017/03/21 19:11:40 QuestionList.go:19: 
TRACE: 2017/03/21 19:11:40 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 19:11:40 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 19:11:40 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 19:11:40 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 19:11:42 authenticatetokenimpl.go:47: entering in AunthenticateToken() function
TRACE: 2017/03/21 19:11:42 authenticatetokenimpl.go:48: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 19:11:44 authenticatetokenimpl.go:53: No uid with that token.
TRACE: 2017/03/21 19:12:32 Login.go:14: entering webservice.Login()
TRACE: 2017/03/21 19:12:32 Login.go:19: calling manager.Login()
TRACE: 2017/03/21 19:12:32 Login.go:16: entering manager.login
TRACE: 2017/03/21 19:12:32 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/21 19:12:32 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/21 19:12:32 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/21 19:12:36 userimpl.go:102: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 19:12:36 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/21 19:12:36 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/21 19:12:36 loginimpl.go:15: exntering in SaveToken() function {0 1 wAyUMClzSPeJrINdWltf 2017-03-21 19:12:36.4243803 +0530 IST}
TRACE: 2017/03/21 19:12:36 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/21 19:12:36 Login.go:14: entering webservice.Login()
TRACE: 2017/03/21 19:12:36 Login.go:19: calling manager.Login()
TRACE: 2017/03/21 19:12:36 Login.go:16: entering manager.login
TRACE: 2017/03/21 19:12:36 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/21 19:12:36 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/21 19:12:36 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/21 19:12:38 loginimpl.go:19: token inserted
TRACE: 2017/03/21 19:12:38 loginimpl.go:20: {0 1 wAyUMClzSPeJrINdWltf 2017-03-21 19:12:36.4243803 +0530 IST}
TRACE: 2017/03/21 19:12:40 userimpl.go:102: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 19:12:40 loginimpl.go:38: last inserted id: 3
TRACE: 2017/03/21 19:12:40 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/21 19:12:40 Login.go:48: {0   }
TRACE: 2017/03/21 19:12:40 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/21 19:12:40 loginimpl.go:15: exntering in SaveToken() function {0 1 jqbfQChuTkDXMGavvPMO 2017-03-21 19:12:40.2394437 +0530 IST}
TRACE: 2017/03/21 19:12:40 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/21 19:12:42 loginimpl.go:19: token inserted
TRACE: 2017/03/21 19:12:42 loginimpl.go:20: {0 1 jqbfQChuTkDXMGavvPMO 2017-03-21 19:12:40.2394437 +0530 IST}
TRACE: 2017/03/21 19:12:43 loginimpl.go:38: last inserted id: 4
TRACE: 2017/03/21 19:12:43 Login.go:48: {0   }
TRACE: 2017/03/21 19:12:58 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 19:12:58 QuestionList.go:18: java
TRACE: 2017/03/21 19:12:58 QuestionList.go:19: 
TRACE: 2017/03/21 19:12:58 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 19:12:58 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 19:12:58 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 19:12:58 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 19:13:00 authenticatetokenimpl.go:47: entering in AunthenticateToken() function
TRACE: 2017/03/21 19:13:00 authenticatetokenimpl.go:48: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 19:13:01 authenticatetokenimpl.go:53: No uid with that token.
TRACE: 2017/03/21 19:14:34 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 19:14:34 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 19:14:34 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 19:14:34 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/21 19:14:34 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 19:14:34 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 19:14:34 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 19:14:34 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 19:14:34 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 19:14:34 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/21 19:14:47 Login.go:14: entering webservice.Login()
TRACE: 2017/03/21 19:14:47 Login.go:19: calling manager.Login()
TRACE: 2017/03/21 19:14:47 Login.go:16: entering manager.login
TRACE: 2017/03/21 19:14:47 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/21 19:14:47 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/21 19:14:47 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/21 19:14:51 userimpl.go:102: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 19:14:51 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/21 19:14:51 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/21 19:14:51 loginimpl.go:15: exntering in SaveToken() function {0 1 DMYPqVWYaTZQPOYxstou 2017-03-21 19:14:51.4329475 +0530 IST}
TRACE: 2017/03/21 19:14:51 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/21 19:14:53 loginimpl.go:19: token inserted
TRACE: 2017/03/21 19:14:53 loginimpl.go:20: {0 1 DMYPqVWYaTZQPOYxstou 2017-03-21 19:14:51.4329475 +0530 IST}
TRACE: 2017/03/21 19:14:55 loginimpl.go:38: last inserted id: 5
TRACE: 2017/03/21 19:14:55 Login.go:48: {0   }
TRACE: 2017/03/21 19:15:03 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 19:15:03 QuestionList.go:18: fundamental
TRACE: 2017/03/21 19:15:03 QuestionList.go:19: 
TRACE: 2017/03/21 19:15:03 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 19:15:03 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 19:15:03 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 19:15:03 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 19:15:05 authenticatetokenimpl.go:47: 
TRACE: 2017/03/21 19:15:05 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/21 19:15:05 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 19:15:07 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/21 19:15:36 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 19:15:36 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 19:15:36 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 19:15:36 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/21 19:15:36 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 19:15:36 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 19:15:36 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 19:15:36 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 19:15:36 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 19:15:36 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/21 19:15:37 Login.go:14: entering webservice.Login()
TRACE: 2017/03/21 19:15:37 Login.go:19: calling manager.Login()
TRACE: 2017/03/21 19:15:37 Login.go:16: entering manager.login
TRACE: 2017/03/21 19:15:37 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/21 19:15:37 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/21 19:15:37 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/21 19:15:40 userimpl.go:102: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 19:15:40 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/21 19:15:40 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/21 19:15:40 loginimpl.go:15: exntering in SaveToken() function {0 1 YsfaWxDjsKygJojaAwCz 2017-03-21 19:15:40.8984541 +0530 IST}
TRACE: 2017/03/21 19:15:40 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/21 19:15:42 loginimpl.go:19: token inserted
TRACE: 2017/03/21 19:15:42 loginimpl.go:20: {0 1 YsfaWxDjsKygJojaAwCz 2017-03-21 19:15:40.8984541 +0530 IST}
TRACE: 2017/03/21 19:15:44 loginimpl.go:38: last inserted id: 6
TRACE: 2017/03/21 19:15:44 Login.go:48: {0   }
TRACE: 2017/03/21 19:17:41 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 19:17:41 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 19:17:41 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 19:17:41 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/21 19:17:41 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 19:17:41 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 19:17:41 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 19:17:41 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 19:17:41 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 19:17:41 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/21 19:17:57 Login.go:14: entering webservice.Login()
TRACE: 2017/03/21 19:17:57 Login.go:19: calling manager.Login()
TRACE: 2017/03/21 19:17:57 Login.go:16: entering manager.login
TRACE: 2017/03/21 19:17:57 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/21 19:17:57 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/21 19:17:57 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/21 19:18:01 userimpl.go:102: Response user Obj :  {0    test@t.com 123 }
TRACE: 2017/03/21 19:18:01 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/21 19:18:01 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/21 19:18:01 loginimpl.go:15: exntering in SaveToken() function {0 1 lxzBZdFdmSYDOobVSXiW 2017-03-21 19:18:01.6418544 +0530 IST}
TRACE: 2017/03/21 19:18:01 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/21 19:18:03 loginimpl.go:19: token inserted
TRACE: 2017/03/21 19:18:03 loginimpl.go:20: {0 1 lxzBZdFdmSYDOobVSXiW 2017-03-21 19:18:01.6418544 +0530 IST}
TRACE: 2017/03/21 19:18:05 loginimpl.go:38: last inserted id: 7
TRACE: 2017/03/21 19:18:05 Login.go:48: {1 Sweta lxzBZdFdmSYDOobVSXiW admin}
TRACE: 2017/03/21 19:18:57 Login.go:14: entering webservice.Login()
TRACE: 2017/03/21 19:18:57 Login.go:19: calling manager.Login()
TRACE: 2017/03/21 19:18:57 Login.go:16: entering manager.login
TRACE: 2017/03/21 19:18:57 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/21 19:18:57 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/21 19:18:57 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/21 19:19:00 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/21 19:19:00 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/21 19:19:00 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/21 19:19:00 loginimpl.go:15: exntering in SaveToken() function {0 2 oVyCRTOUdLiwuDwyuJWx 2017-03-21 19:19:00.9223404 +0530 IST}
TRACE: 2017/03/21 19:19:00 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/21 19:19:02 loginimpl.go:19: token inserted
TRACE: 2017/03/21 19:19:02 loginimpl.go:20: {0 2 oVyCRTOUdLiwuDwyuJWx 2017-03-21 19:19:00.9223404 +0530 IST}
TRACE: 2017/03/21 19:19:04 loginimpl.go:38: last inserted id: 1
TRACE: 2017/03/21 19:19:04 Login.go:48: {2 rakesh oVyCRTOUdLiwuDwyuJWx user}
TRACE: 2017/03/21 19:19:17 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 19:19:17 QuestionList.go:18: java
TRACE: 2017/03/21 19:19:17 QuestionList.go:19: 
TRACE: 2017/03/21 19:19:17 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 19:19:17 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 19:19:17 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 19:19:17 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 19:19:19 authenticatetokenimpl.go:47: 
TRACE: 2017/03/21 19:19:19 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/21 19:19:19 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 19:19:21 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/21 19:22:16 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 19:22:16 QuestionList.go:18: java
TRACE: 2017/03/21 19:22:16 QuestionList.go:19: oVyCRTOUdLiwuDwyuJWx
TRACE: 2017/03/21 19:22:16 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 19:22:16 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 19:22:16 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 19:22:16 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 19:22:18 authenticatetokenimpl.go:47: oVyCRTOUdLiwuDwyuJWx
TRACE: 2017/03/21 19:22:18 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/21 19:22:18 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 19:22:20 authenticatetokenimpl.go:58: Type is oVyCRTOUdLiwuDwyuJWx
TRACE: 2017/03/21 19:22:20 aunthenticate.go:42: 2017-03-21 19:22:20
TRACE: 2017/03/21 19:22:20 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/21 19:22:22 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/21 19:22:22 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/21 19:22:24 authenticatetokenimpl.go:30: {0xc0422b6e70 0xc0422a9cc0}
TRACE: 2017/03/21 19:22:24 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/21 19:22:24 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/21 19:22:24 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/21 19:22:24 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 19:22:24 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/21 19:22:24 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/21 19:22:24 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/21 19:22:27 questionimpl.go:29: Error 1142: SELECT command denied to user 'onlinetestuser'@'localhost' for table 'questions'
TRACE: 2017/03/21 19:22:54 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 19:22:54 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 19:22:54 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 19:22:54 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/21 19:22:54 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 19:22:54 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 19:22:54 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 19:22:54 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 19:22:54 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 19:22:54 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/21 19:23:01 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 19:23:01 QuestionList.go:18: java
TRACE: 2017/03/21 19:23:01 QuestionList.go:19: oVyCRTOUdLiwuDwyuJWx
TRACE: 2017/03/21 19:23:01 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 19:23:01 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 19:23:01 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 19:23:01 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 19:23:03 authenticatetokenimpl.go:47: oVyCRTOUdLiwuDwyuJWx
TRACE: 2017/03/21 19:23:03 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/21 19:23:03 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 19:23:05 authenticatetokenimpl.go:58: Type is oVyCRTOUdLiwuDwyuJWx
TRACE: 2017/03/21 19:23:05 aunthenticate.go:42: 2017-03-21 19:23:05
TRACE: 2017/03/21 19:23:05 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/21 19:23:07 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/21 19:23:07 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/21 19:23:08 authenticatetokenimpl.go:30: {0xc0420325b0 0xc0421f65b0}
TRACE: 2017/03/21 19:23:08 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/21 19:23:08 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/21 19:23:08 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/21 19:23:08 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 19:23:08 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/21 19:23:08 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/21 19:23:08 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/21 19:23:12 questionimpl.go:29: Error 1142: SELECT command denied to user 'onlinetestuser'@'localhost' for table 'questions'
TRACE: 2017/03/21 19:23:31 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 19:23:31 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 19:23:31 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 19:23:31 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/21 19:23:31 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 19:23:31 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 19:23:31 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 19:23:31 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 19:23:31 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 19:23:31 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/21 19:24:01 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 19:24:01 QuestionList.go:18: java
TRACE: 2017/03/21 19:24:01 QuestionList.go:19: oVyCRTOUdLiwuDwyuJWx
TRACE: 2017/03/21 19:24:01 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 19:24:01 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 19:24:01 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 19:24:01 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 19:24:03 authenticatetokenimpl.go:47: oVyCRTOUdLiwuDwyuJWx
TRACE: 2017/03/21 19:24:03 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/21 19:24:03 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 19:24:05 authenticatetokenimpl.go:58: Type is oVyCRTOUdLiwuDwyuJWx
TRACE: 2017/03/21 19:24:05 aunthenticate.go:42: 2017-03-21 19:24:05
TRACE: 2017/03/21 19:24:05 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/21 19:24:43 Login.go:14: entering webservice.Login()
TRACE: 2017/03/21 19:24:43 Login.go:19: calling manager.Login()
TRACE: 2017/03/21 19:24:43 Login.go:16: entering manager.login
TRACE: 2017/03/21 19:24:43 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/21 19:24:43 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/21 19:24:43 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/21 19:24:46 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/21 19:24:46 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/21 19:24:46 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/21 19:24:46 loginimpl.go:15: exntering in SaveToken() function {0 2 qgKhTAymDNbIFNvRKufL 2017-03-21 19:24:46.8662943 +0530 IST}
TRACE: 2017/03/21 19:24:46 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/21 19:24:48 loginimpl.go:19: token inserted
TRACE: 2017/03/21 19:24:48 loginimpl.go:20: {0 2 qgKhTAymDNbIFNvRKufL 2017-03-21 19:24:46.8662943 +0530 IST}
TRACE: 2017/03/21 19:24:50 loginimpl.go:38: last inserted id: 2
TRACE: 2017/03/21 19:24:50 Login.go:48: {2 rakesh qgKhTAymDNbIFNvRKufL user}
TRACE: 2017/03/21 19:24:57 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 19:24:57 QuestionList.go:18: java
TRACE: 2017/03/21 19:24:57 QuestionList.go:19: 
TRACE: 2017/03/21 19:24:57 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 19:24:57 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 19:24:57 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 19:24:57 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 19:24:59 authenticatetokenimpl.go:47: 
TRACE: 2017/03/21 19:24:59 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/21 19:24:59 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 19:25:01 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/21 19:25:35 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 19:25:35 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 19:25:35 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 19:25:35 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/21 19:25:35 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 19:25:35 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 19:25:35 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 19:25:35 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 19:25:35 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 19:25:35 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/21 19:25:41 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 19:25:41 QuestionList.go:18: java
TRACE: 2017/03/21 19:25:41 QuestionList.go:19: oVyCRTOUdLiwuDwyuJWx
TRACE: 2017/03/21 19:25:41 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 19:25:41 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 19:25:41 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 19:25:41 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 19:25:43 authenticatetokenimpl.go:47: oVyCRTOUdLiwuDwyuJWx
TRACE: 2017/03/21 19:25:43 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/21 19:25:43 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 19:25:44 authenticatetokenimpl.go:58: Type is oVyCRTOUdLiwuDwyuJWx
TRACE: 2017/03/21 19:25:44 aunthenticate.go:42: 2017-03-21 19:25:44
TRACE: 2017/03/21 19:25:44 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/21 19:25:46 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/21 19:25:46 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/21 19:25:48 authenticatetokenimpl.go:30: {0xc0422d00e0 0xc0422cc1b0}
TRACE: 2017/03/21 19:25:48 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/21 19:25:48 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/21 19:25:48 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/21 19:25:48 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 19:25:48 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/21 19:25:48 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/21 19:25:48 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/21 19:25:52 questionimpl.go:29: Error 1142: SELECT command denied to user 'onlinetestuser'@'localhost' for table 'questions'
TRACE: 2017/03/21 19:26:12 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/21 19:26:12 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/21 19:26:12 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/21 19:26:12 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/21 19:26:12 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/21 19:26:12 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/21 19:26:12 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/21 19:26:12 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/21 19:26:12 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/21 19:26:12 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/21 19:27:41 Login.go:14: entering webservice.Login()
TRACE: 2017/03/21 19:27:41 Login.go:19: calling manager.Login()
TRACE: 2017/03/21 19:27:41 Login.go:16: entering manager.login
TRACE: 2017/03/21 19:27:41 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/21 19:27:41 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/21 19:27:41 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/21 19:27:45 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/21 19:27:45 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/21 19:27:45 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/21 19:27:45 loginimpl.go:15: exntering in SaveToken() function {0 2 ZDlxrBXHGazCuliiknVQ 2017-03-21 19:27:45.6754472 +0530 IST}
TRACE: 2017/03/21 19:27:45 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/21 19:27:47 loginimpl.go:19: token inserted
TRACE: 2017/03/21 19:27:47 loginimpl.go:20: {0 2 ZDlxrBXHGazCuliiknVQ 2017-03-21 19:27:45.6754472 +0530 IST}
TRACE: 2017/03/21 19:27:49 loginimpl.go:38: last inserted id: 1
TRACE: 2017/03/21 19:27:49 Login.go:48: {2 rakesh ZDlxrBXHGazCuliiknVQ user}
TRACE: 2017/03/21 19:28:28 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/21 19:28:28 QuestionList.go:18: java
TRACE: 2017/03/21 19:28:28 QuestionList.go:19: ZDlxrBXHGazCuliiknVQ
TRACE: 2017/03/21 19:28:28 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/21 19:28:28 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/21 19:28:28 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/21 19:28:28 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/21 19:28:30 authenticatetokenimpl.go:47: ZDlxrBXHGazCuliiknVQ
TRACE: 2017/03/21 19:28:30 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/21 19:28:30 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/21 19:28:32 authenticatetokenimpl.go:58: Type is ZDlxrBXHGazCuliiknVQ
TRACE: 2017/03/21 19:28:32 aunthenticate.go:42: 2017-03-21 19:28:32
TRACE: 2017/03/21 19:28:32 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/21 19:28:34 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/21 19:28:34 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/21 19:28:36 authenticatetokenimpl.go:30: {0xc0422de540 0xc0421ee920}
TRACE: 2017/03/21 19:28:36 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/21 19:28:36 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/21 19:28:36 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/21 19:28:36 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/21 19:28:36 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/21 19:28:36 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/21 19:28:36 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/21 19:28:39 questionimpl.go:29: Error 1142: SELECT command denied to user 'onlinetestuser'@'localhost' for table 'questions'
TRACE: 2017/03/22 09:14:42 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/22 09:14:42 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/22 09:14:42 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/22 09:14:42 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/22 09:14:42 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/22 09:14:42 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/22 09:14:42 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/22 09:14:42 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/22 09:14:42 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/22 09:14:42 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/22 09:20:11 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/22 09:20:11 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/22 09:20:11 register.go:16: entering in  manager.Register() function
TRACE: 2017/03/22 09:20:11 register.go:18: calling register manager
TRACE: 2017/03/22 09:20:11 register.go:20: calling userDao.CheckUser function
TRACE: 2017/03/22 09:20:11 userimpl.go:46: entering in userDao.CheckUser()...
TRACE: 2017/03/22 09:20:11 userimpl.go:49: executing query and checking user exists
TRACE: 2017/03/22 09:20:15 register.go:30: calling userDao.SaveNewUser() function
TRACE: 2017/03/22 09:20:15 userimpl.go:14: entering in SaveNewUser() function
TRACE: 2017/03/22 09:20:15 userimpl.go:15: executing query and storing registration details
TRACE: 2017/03/22 09:20:18 register.go:35: 153
TRACE: 2017/03/22 09:22:45 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 09:22:45 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 09:22:45 Login.go:16: entering manager.login
TRACE: 2017/03/22 09:22:45 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 09:22:45 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 09:22:45 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 09:22:49 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/22 09:22:49 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 09:22:49 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 09:22:49 loginimpl.go:15: exntering in SaveToken() function {0 2 OWDotiHkqNyaDrONMKGg 2017-03-22 09:22:49.6801004 +0530 IST}
TRACE: 2017/03/22 09:22:49 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 09:22:51 loginimpl.go:19: token inserted
TRACE: 2017/03/22 09:22:51 loginimpl.go:20: {0 2 OWDotiHkqNyaDrONMKGg 2017-03-22 09:22:49.6801004 +0530 IST}
TRACE: 2017/03/22 09:22:53 loginimpl.go:38: last inserted id: 2
TRACE: 2017/03/22 09:22:53 Login.go:48: {2 rakesh OWDotiHkqNyaDrONMKGg user}
TRACE: 2017/03/22 09:24:15 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 09:24:15 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 09:24:15 Login.go:16: entering manager.login
TRACE: 2017/03/22 09:24:15 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 09:24:15 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 09:24:15 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 09:24:19 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/22 09:24:19 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 09:24:19 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 09:24:19 loginimpl.go:15: exntering in SaveToken() function {0 2 ZsUmfgYqZoRDgydFzQdL 2017-03-22 09:24:19.7127718 +0530 IST}
TRACE: 2017/03/22 09:24:19 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 09:24:21 loginimpl.go:19: token inserted
TRACE: 2017/03/22 09:24:21 loginimpl.go:20: {0 2 ZsUmfgYqZoRDgydFzQdL 2017-03-22 09:24:19.7127718 +0530 IST}
TRACE: 2017/03/22 09:24:23 loginimpl.go:38: last inserted id: 3
TRACE: 2017/03/22 09:24:23 Login.go:48: {2 rakesh ZsUmfgYqZoRDgydFzQdL user}
TRACE: 2017/03/22 09:25:47 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 09:25:47 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 09:25:47 Login.go:16: entering manager.login
TRACE: 2017/03/22 09:25:47 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 09:25:47 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 09:25:47 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 09:25:51 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/22 09:25:51 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 09:25:51 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 09:25:51 loginimpl.go:15: exntering in SaveToken() function {0 2 knqMaYLpwsLPNdXVdpTq 2017-03-22 09:25:51.0576509 +0530 IST}
TRACE: 2017/03/22 09:25:51 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 09:25:53 loginimpl.go:19: token inserted
TRACE: 2017/03/22 09:25:53 loginimpl.go:20: {0 2 knqMaYLpwsLPNdXVdpTq 2017-03-22 09:25:51.0576509 +0530 IST}
TRACE: 2017/03/22 09:25:54 loginimpl.go:38: last inserted id: 4
TRACE: 2017/03/22 09:25:54 Login.go:48: {2 rakesh knqMaYLpwsLPNdXVdpTq user}
TRACE: 2017/03/22 09:27:19 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 09:27:19 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 09:27:19 Login.go:16: entering manager.login
TRACE: 2017/03/22 09:27:19 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 09:27:19 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 09:27:19 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 09:27:23 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/22 09:27:23 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 09:27:23 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 09:27:23 loginimpl.go:15: exntering in SaveToken() function {0 2 eXpDgmkbAoJSGIvwULfB 2017-03-22 09:27:23.1264039 +0530 IST}
TRACE: 2017/03/22 09:27:23 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 09:27:25 loginimpl.go:19: token inserted
TRACE: 2017/03/22 09:27:25 loginimpl.go:20: {0 2 eXpDgmkbAoJSGIvwULfB 2017-03-22 09:27:23.1264039 +0530 IST}
TRACE: 2017/03/22 09:27:26 loginimpl.go:38: last inserted id: 5
TRACE: 2017/03/22 09:27:26 Login.go:48: {2 rakesh eXpDgmkbAoJSGIvwULfB user}
TRACE: 2017/03/22 09:28:25 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 09:28:25 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 09:28:25 Login.go:16: entering manager.login
TRACE: 2017/03/22 09:28:25 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 09:28:25 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 09:28:25 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 09:28:29 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/22 09:28:29 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 09:28:29 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 09:28:29 loginimpl.go:15: exntering in SaveToken() function {0 2 HbTrWFwFweJSAYySycfG 2017-03-22 09:28:29.3407683 +0530 IST}
TRACE: 2017/03/22 09:28:29 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 09:28:31 loginimpl.go:19: token inserted
TRACE: 2017/03/22 09:28:31 loginimpl.go:20: {0 2 HbTrWFwFweJSAYySycfG 2017-03-22 09:28:29.3407683 +0530 IST}
TRACE: 2017/03/22 09:28:33 loginimpl.go:38: last inserted id: 6
TRACE: 2017/03/22 09:28:33 Login.go:48: {2 rakesh HbTrWFwFweJSAYySycfG user}
TRACE: 2017/03/22 09:30:21 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 09:30:21 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 09:30:21 Login.go:16: entering manager.login
TRACE: 2017/03/22 09:30:21 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 09:30:21 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 09:30:21 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 09:30:25 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/22 09:30:25 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 09:30:25 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 09:30:25 loginimpl.go:15: exntering in SaveToken() function {0 2 gIyHQzeeWSmGOdupSpfn 2017-03-22 09:30:25.0186034 +0530 IST}
TRACE: 2017/03/22 09:30:25 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 09:30:27 loginimpl.go:19: token inserted
TRACE: 2017/03/22 09:30:27 loginimpl.go:20: {0 2 gIyHQzeeWSmGOdupSpfn 2017-03-22 09:30:25.0186034 +0530 IST}
TRACE: 2017/03/22 09:30:28 loginimpl.go:38: last inserted id: 7
TRACE: 2017/03/22 09:30:28 Login.go:48: {2 rakesh gIyHQzeeWSmGOdupSpfn user}
TRACE: 2017/03/22 09:30:49 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/22 09:30:49 QuestionList.go:18: java
TRACE: 2017/03/22 09:30:49 QuestionList.go:19: 
TRACE: 2017/03/22 09:30:49 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/22 09:30:49 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/22 09:30:49 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/22 09:30:49 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/22 09:30:51 authenticatetokenimpl.go:47: 
TRACE: 2017/03/22 09:30:51 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/22 09:30:51 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/22 09:30:53 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/22 09:38:48 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 09:38:48 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 09:38:48 Login.go:16: entering manager.login
TRACE: 2017/03/22 09:38:48 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 09:38:48 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 09:38:48 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 09:38:52 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/22 09:38:52 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 09:38:52 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 09:38:52 loginimpl.go:15: exntering in SaveToken() function {0 2 BBfJgCvxLUPpNHbftlAe 2017-03-22 09:38:52.2315292 +0530 IST}
TRACE: 2017/03/22 09:38:52 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 09:38:54 loginimpl.go:19: token inserted
TRACE: 2017/03/22 09:38:54 loginimpl.go:20: {0 2 BBfJgCvxLUPpNHbftlAe 2017-03-22 09:38:52.2315292 +0530 IST}
TRACE: 2017/03/22 09:38:56 loginimpl.go:38: last inserted id: 8
TRACE: 2017/03/22 09:38:56 Login.go:48: {2 rakesh BBfJgCvxLUPpNHbftlAe user}
TRACE: 2017/03/22 09:40:36 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 09:40:37 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 09:40:37 Login.go:16: entering manager.login
TRACE: 2017/03/22 09:40:37 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 09:40:37 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 09:40:37 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 09:40:40 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/22 09:40:40 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 09:40:40 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 09:40:40 loginimpl.go:15: exntering in SaveToken() function {0 2 YwBHbgOaGxKMbnKtpDVL 2017-03-22 09:40:40.7502529 +0530 IST}
TRACE: 2017/03/22 09:40:40 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 09:40:42 loginimpl.go:19: token inserted
TRACE: 2017/03/22 09:40:42 loginimpl.go:20: {0 2 YwBHbgOaGxKMbnKtpDVL 2017-03-22 09:40:40.7502529 +0530 IST}
TRACE: 2017/03/22 09:40:44 loginimpl.go:38: last inserted id: 9
TRACE: 2017/03/22 09:40:44 Login.go:48: {2 rakesh YwBHbgOaGxKMbnKtpDVL user}
TRACE: 2017/03/22 09:42:15 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 09:42:15 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 09:42:15 Login.go:16: entering manager.login
TRACE: 2017/03/22 09:42:15 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 09:42:15 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 09:42:15 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 09:42:19 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/22 09:42:19 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 09:42:19 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 09:42:19 loginimpl.go:15: exntering in SaveToken() function {0 2 vLwSvVdjXdpUcaSVfuUg 2017-03-22 09:42:19.5537375 +0530 IST}
TRACE: 2017/03/22 09:42:19 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 09:42:21 loginimpl.go:19: token inserted
TRACE: 2017/03/22 09:42:21 loginimpl.go:20: {0 2 vLwSvVdjXdpUcaSVfuUg 2017-03-22 09:42:19.5537375 +0530 IST}
TRACE: 2017/03/22 09:42:23 loginimpl.go:38: last inserted id: 10
TRACE: 2017/03/22 09:42:23 Login.go:48: {2 rakesh vLwSvVdjXdpUcaSVfuUg user}
TRACE: 2017/03/22 09:43:14 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 09:43:14 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 09:43:14 Login.go:16: entering manager.login
TRACE: 2017/03/22 09:43:14 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 09:43:14 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 09:43:14 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 09:43:18 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/22 09:43:18 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 09:43:18 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 09:43:18 loginimpl.go:15: exntering in SaveToken() function {0 2 rkEpuPrTOjsQNjElwVLa 2017-03-22 09:43:18.2301566 +0530 IST}
TRACE: 2017/03/22 09:43:18 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 09:43:20 loginimpl.go:19: token inserted
TRACE: 2017/03/22 09:43:20 loginimpl.go:20: {0 2 rkEpuPrTOjsQNjElwVLa 2017-03-22 09:43:18.2301566 +0530 IST}
TRACE: 2017/03/22 09:43:22 loginimpl.go:38: last inserted id: 11
TRACE: 2017/03/22 09:43:22 Login.go:48: {2 rakesh rkEpuPrTOjsQNjElwVLa user}
TRACE: 2017/03/22 09:44:01 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/22 09:44:01 QuestionList.go:18: fundamental
TRACE: 2017/03/22 09:44:01 QuestionList.go:19: 
TRACE: 2017/03/22 09:44:01 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/22 09:44:01 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/22 09:44:01 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/22 09:44:01 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/22 09:44:03 authenticatetokenimpl.go:47: 
TRACE: 2017/03/22 09:44:03 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/22 09:44:03 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/22 09:44:05 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/22 09:46:19 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 09:46:19 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 09:46:19 Login.go:16: entering manager.login
TRACE: 2017/03/22 09:46:19 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 09:46:19 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 09:46:19 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 09:46:23 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/22 09:46:23 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 09:46:23 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 09:46:23 loginimpl.go:15: exntering in SaveToken() function {0 2 pnlToSKboeoDnyWsYAFt 2017-03-22 09:46:23.5573559 +0530 IST}
TRACE: 2017/03/22 09:46:23 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 09:46:25 loginimpl.go:19: token inserted
TRACE: 2017/03/22 09:46:25 loginimpl.go:20: {0 2 pnlToSKboeoDnyWsYAFt 2017-03-22 09:46:23.5573559 +0530 IST}
TRACE: 2017/03/22 09:46:27 loginimpl.go:38: last inserted id: 12
TRACE: 2017/03/22 09:46:27 Login.go:48: {2 rakesh pnlToSKboeoDnyWsYAFt user}
TRACE: 2017/03/22 10:04:46 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 10:04:46 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 10:04:46 Login.go:16: entering manager.login
TRACE: 2017/03/22 10:04:46 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 10:04:46 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 10:04:46 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 10:04:50 userimpl.go:102: Response user Obj :  {0    r@r.com D@d12 }
TRACE: 2017/03/22 10:04:50 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 10:04:50 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 10:04:50 loginimpl.go:15: exntering in SaveToken() function {0 149 MULkoMOGEttCTkxAadqk 2017-03-22 10:04:50.4125246 +0530 IST}
TRACE: 2017/03/22 10:04:50 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 10:04:52 loginimpl.go:19: token inserted
TRACE: 2017/03/22 10:04:52 loginimpl.go:20: {0 149 MULkoMOGEttCTkxAadqk 2017-03-22 10:04:50.4125246 +0530 IST}
TRACE: 2017/03/22 10:04:54 loginimpl.go:38: last inserted id: 13
TRACE: 2017/03/22 10:04:54 Login.go:48: {149  MULkoMOGEttCTkxAadqk }
TRACE: 2017/03/22 10:05:27 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/22 10:05:27 QuestionList.go:18: java
TRACE: 2017/03/22 10:05:27 QuestionList.go:19: 
TRACE: 2017/03/22 10:05:27 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/22 10:05:27 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/22 10:05:27 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/22 10:05:27 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/22 10:05:29 authenticatetokenimpl.go:47: 
TRACE: 2017/03/22 10:05:29 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/22 10:05:29 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/22 10:05:31 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/22 10:07:52 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 10:07:52 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 10:07:52 Login.go:16: entering manager.login
TRACE: 2017/03/22 10:07:52 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 10:07:52 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 10:07:52 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 10:07:56 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/22 10:07:56 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 10:07:56 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 10:07:56 loginimpl.go:15: exntering in SaveToken() function {0 2 bKzQBBikkkLdhQAcMjZv 2017-03-22 10:07:56.1736392 +0530 IST}
TRACE: 2017/03/22 10:07:56 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 10:07:58 loginimpl.go:19: token inserted
TRACE: 2017/03/22 10:07:58 loginimpl.go:20: {0 2 bKzQBBikkkLdhQAcMjZv 2017-03-22 10:07:56.1736392 +0530 IST}
TRACE: 2017/03/22 10:07:59 loginimpl.go:38: last inserted id: 1
TRACE: 2017/03/22 10:07:59 Login.go:48: {2 rakesh bKzQBBikkkLdhQAcMjZv user}
TRACE: 2017/03/22 10:08:46 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 10:08:46 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 10:08:46 Login.go:16: entering manager.login
TRACE: 2017/03/22 10:08:46 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 10:08:46 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 10:08:46 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 10:08:50 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/22 10:08:50 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 10:08:50 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 10:08:50 loginimpl.go:15: exntering in SaveToken() function {0 2 eNxXgCvOAIZuVvLpaJGF 2017-03-22 10:08:50.5024931 +0530 IST}
TRACE: 2017/03/22 10:08:50 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 10:08:52 loginimpl.go:19: token inserted
TRACE: 2017/03/22 10:08:52 loginimpl.go:20: {0 2 eNxXgCvOAIZuVvLpaJGF 2017-03-22 10:08:50.5024931 +0530 IST}
TRACE: 2017/03/22 10:08:54 loginimpl.go:38: last inserted id: 2
TRACE: 2017/03/22 10:08:54 Login.go:48: {2 rakesh eNxXgCvOAIZuVvLpaJGF user}
TRACE: 2017/03/22 10:11:01 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 10:11:01 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 10:11:01 Login.go:16: entering manager.login
TRACE: 2017/03/22 10:11:01 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 10:11:01 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 10:11:01 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 10:12:20 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 10:12:20 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 10:12:20 Login.go:16: entering manager.login
TRACE: 2017/03/22 10:12:20 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 10:12:20 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 10:12:20 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 10:12:35 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/22 10:12:35 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 10:12:35 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 10:12:35 loginimpl.go:15: exntering in SaveToken() function {0 2 khMObptEOmhyTgCMGOfs 2017-03-22 10:12:35.8909238 +0530 IST}
TRACE: 2017/03/22 10:12:35 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 10:12:35 userimpl.go:88: write tcp 192.168.0.8:64704->54.218.55.72:22: use of closed network connection
TRACE: 2017/03/22 10:13:11 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/22 10:13:11 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/22 10:13:11 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/22 10:13:11 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/22 10:13:11 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/22 10:13:11 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/22 10:13:11 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/22 10:13:11 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/22 10:13:11 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/22 10:13:11 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/22 10:13:15 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 10:13:15 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 10:13:15 Login.go:16: entering manager.login
TRACE: 2017/03/22 10:13:15 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 10:13:15 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 10:13:15 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 10:13:19 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/22 10:13:19 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 10:13:19 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 10:13:19 loginimpl.go:15: exntering in SaveToken() function {0 2 SIjEmdNdKOFsoeoHnoOm 2017-03-22 10:13:19.701149 +0530 IST}
TRACE: 2017/03/22 10:13:19 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 10:13:21 loginimpl.go:19: token inserted
TRACE: 2017/03/22 10:13:21 loginimpl.go:20: {0 2 SIjEmdNdKOFsoeoHnoOm 2017-03-22 10:13:19.701149 +0530 IST}
TRACE: 2017/03/22 10:13:23 loginimpl.go:38: last inserted id: 3
TRACE: 2017/03/22 10:13:23 Login.go:48: {2 rakesh SIjEmdNdKOFsoeoHnoOm user}
TRACE: 2017/03/22 10:13:35 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/22 10:13:35 QuestionList.go:18: fundamental
TRACE: 2017/03/22 10:13:35 QuestionList.go:19: 
TRACE: 2017/03/22 10:13:35 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/22 10:13:35 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/22 10:13:35 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/22 10:13:35 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/22 10:13:37 authenticatetokenimpl.go:47: 
TRACE: 2017/03/22 10:13:37 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/22 10:13:37 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/22 10:13:39 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/22 10:15:21 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 10:15:21 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 10:15:21 Login.go:16: entering manager.login
TRACE: 2017/03/22 10:15:21 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 10:15:21 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 10:15:21 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 10:15:25 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/22 10:15:25 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 10:15:25 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 10:15:25 loginimpl.go:15: exntering in SaveToken() function {0 2 sVsRZMDfXZMuqszcDiCw 2017-03-22 10:15:25.0264919 +0530 IST}
TRACE: 2017/03/22 10:15:25 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 10:15:26 loginimpl.go:19: token inserted
TRACE: 2017/03/22 10:15:26 loginimpl.go:20: {0 2 sVsRZMDfXZMuqszcDiCw 2017-03-22 10:15:25.0264919 +0530 IST}
TRACE: 2017/03/22 10:15:28 loginimpl.go:38: last inserted id: 4
TRACE: 2017/03/22 10:15:28 Login.go:48: {2 rakesh sVsRZMDfXZMuqszcDiCw user}
TRACE: 2017/03/22 10:16:35 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 10:16:35 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 10:16:35 Login.go:16: entering manager.login
TRACE: 2017/03/22 10:16:35 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 10:16:35 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 10:16:35 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 10:16:38 userimpl.go:102: Response user Obj :  {0    test@1.com 123 }
TRACE: 2017/03/22 10:16:38 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 10:16:38 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 10:16:38 loginimpl.go:15: exntering in SaveToken() function {0 2 xbgSGyyDuFjTNYhZXuzF 2017-03-22 10:16:38.724682 +0530 IST}
TRACE: 2017/03/22 10:16:38 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 10:16:40 loginimpl.go:19: token inserted
TRACE: 2017/03/22 10:16:40 loginimpl.go:20: {0 2 xbgSGyyDuFjTNYhZXuzF 2017-03-22 10:16:38.724682 +0530 IST}
TRACE: 2017/03/22 10:16:42 loginimpl.go:38: last inserted id: 5
TRACE: 2017/03/22 10:16:42 Login.go:48: {2 rakesh xbgSGyyDuFjTNYhZXuzF user}
TRACE: 2017/03/22 10:21:01 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 10:21:01 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 10:21:01 Login.go:16: entering manager.login
TRACE: 2017/03/22 10:21:01 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 10:21:01 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 10:21:01 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 10:21:04 userimpl.go:102: Response user Obj :  {0    test@4.com 123 }
TRACE: 2017/03/22 10:21:04 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 10:21:04 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 10:21:04 loginimpl.go:15: exntering in SaveToken() function {0 5 XAHXYgNJCWnMsHNfUFkZ 2017-03-22 10:21:04.9854245 +0530 IST}
TRACE: 2017/03/22 10:21:04 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 10:21:06 loginimpl.go:19: token inserted
TRACE: 2017/03/22 10:21:06 loginimpl.go:20: {0 5 XAHXYgNJCWnMsHNfUFkZ 2017-03-22 10:21:04.9854245 +0530 IST}
TRACE: 2017/03/22 10:21:08 loginimpl.go:38: last inserted id: 1
TRACE: 2017/03/22 10:21:08 Login.go:48: {5 risabh XAHXYgNJCWnMsHNfUFkZ user}
TRACE: 2017/03/22 10:21:23 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/22 10:21:23 QuestionList.go:18: java
TRACE: 2017/03/22 10:21:23 QuestionList.go:19: 
TRACE: 2017/03/22 10:21:23 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/22 10:21:23 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/22 10:21:23 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/22 10:21:23 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/22 10:21:25 authenticatetokenimpl.go:47: 
TRACE: 2017/03/22 10:21:25 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/22 10:21:25 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/22 10:21:27 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/22 10:26:02 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 10:26:02 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 10:26:02 Login.go:16: entering manager.login
TRACE: 2017/03/22 10:26:02 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 10:26:02 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 10:26:02 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 10:26:05 userimpl.go:102: Response user Obj :  {0    test@4.com 123 }
TRACE: 2017/03/22 10:26:05 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 10:26:05 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 10:26:05 loginimpl.go:15: exntering in SaveToken() function {0 5 OPJEkcUhjFFGYvidQcrO 2017-03-22 10:26:05.9240074 +0530 IST}
TRACE: 2017/03/22 10:26:05 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 10:26:07 loginimpl.go:19: token inserted
TRACE: 2017/03/22 10:26:07 loginimpl.go:20: {0 5 OPJEkcUhjFFGYvidQcrO 2017-03-22 10:26:05.9240074 +0530 IST}
TRACE: 2017/03/22 10:26:09 loginimpl.go:38: last inserted id: 1
TRACE: 2017/03/22 10:26:09 Login.go:48: {5 risabh OPJEkcUhjFFGYvidQcrO user}
TRACE: 2017/03/22 10:26:19 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/22 10:26:19 QuestionList.go:18: fundamental
TRACE: 2017/03/22 10:26:19 QuestionList.go:19: 
TRACE: 2017/03/22 10:26:19 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/22 10:26:19 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/22 10:26:19 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/22 10:26:19 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/22 10:26:21 authenticatetokenimpl.go:47: 
TRACE: 2017/03/22 10:26:21 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/22 10:26:21 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/22 10:26:23 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/22 10:28:22 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/22 10:28:22 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/22 10:28:22 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/22 10:28:22 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/22 10:28:22 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/22 10:28:22 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/22 10:28:22 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/22 10:28:22 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/22 10:28:22 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/22 10:28:22 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/22 10:29:19 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 10:29:19 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 10:29:19 Login.go:16: entering manager.login
TRACE: 2017/03/22 10:29:19 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 10:29:19 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 10:29:19 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 10:29:22 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 10:29:22 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 10:29:22 Login.go:16: entering manager.login
TRACE: 2017/03/22 10:29:22 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 10:29:22 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 10:29:22 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 10:29:23 userimpl.go:102: Response user Obj :  {0    test@4.com 123 }
TRACE: 2017/03/22 10:29:23 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 10:29:23 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 10:29:23 loginimpl.go:15: exntering in SaveToken() function {0 5 lhyMttpwYSshiWJZUkVx 2017-03-22 10:29:23.1394365 +0530 IST}
TRACE: 2017/03/22 10:29:23 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 10:29:25 loginimpl.go:19: token inserted
TRACE: 2017/03/22 10:29:25 loginimpl.go:20: {0 5 lhyMttpwYSshiWJZUkVx 2017-03-22 10:29:23.1394365 +0530 IST}
TRACE: 2017/03/22 10:29:26 userimpl.go:102: Response user Obj :  {0    test@4.com 123 }
TRACE: 2017/03/22 10:29:26 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 10:29:26 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 10:29:26 loginimpl.go:15: exntering in SaveToken() function {0 5 llFUPJmCZRKfvsyrevVw 2017-03-22 10:29:26.4058353 +0530 IST}
TRACE: 2017/03/22 10:29:26 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 10:29:26 loginimpl.go:38: last inserted id: 1
TRACE: 2017/03/22 10:29:26 Login.go:48: {5 risabh lhyMttpwYSshiWJZUkVx user}
TRACE: 2017/03/22 10:29:28 loginimpl.go:19: token inserted
TRACE: 2017/03/22 10:29:28 loginimpl.go:20: {0 5 llFUPJmCZRKfvsyrevVw 2017-03-22 10:29:26.4058353 +0530 IST}
TRACE: 2017/03/22 10:29:30 loginimpl.go:38: last inserted id: 2
TRACE: 2017/03/22 10:29:30 Login.go:48: {5 risabh llFUPJmCZRKfvsyrevVw user}
TRACE: 2017/03/22 10:29:37 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/22 10:29:37 QuestionList.go:18: java
TRACE: 2017/03/22 10:29:37 QuestionList.go:19: 
TRACE: 2017/03/22 10:29:37 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/22 10:29:37 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/22 10:29:37 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/22 10:29:37 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/22 10:29:39 authenticatetokenimpl.go:47: 
TRACE: 2017/03/22 10:29:39 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/22 10:29:39 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/22 10:29:40 authenticatetokenimpl.go:51: 
TRACE: 2017/03/22 10:29:40 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/22 10:36:36 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 10:36:36 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 10:36:36 Login.go:16: entering manager.login
TRACE: 2017/03/22 10:36:36 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 10:36:36 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 10:36:36 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 10:36:40 userimpl.go:102: Response user Obj :  {0    test@4.com 123 }
TRACE: 2017/03/22 10:36:40 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 10:36:40 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 10:36:40 loginimpl.go:15: exntering in SaveToken() function {0 5 KhqIRwdiaYMzdWGtAMcx 2017-03-22 10:36:40.5683547 +0530 IST}
TRACE: 2017/03/22 10:36:40 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 10:36:42 loginimpl.go:19: token inserted
TRACE: 2017/03/22 10:36:42 loginimpl.go:20: {0 5 KhqIRwdiaYMzdWGtAMcx 2017-03-22 10:36:40.5683547 +0530 IST}
TRACE: 2017/03/22 10:36:44 loginimpl.go:38: last inserted id: 1
TRACE: 2017/03/22 10:36:44 Login.go:48: {5 risabh KhqIRwdiaYMzdWGtAMcx user}
TRACE: 2017/03/22 10:37:06 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/22 10:37:06 QuestionList.go:18: fundamental
TRACE: 2017/03/22 10:37:06 QuestionList.go:19: 
TRACE: 2017/03/22 10:37:06 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/22 10:37:06 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/22 10:37:06 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/22 10:37:06 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/22 10:37:08 authenticatetokenimpl.go:47: 
TRACE: 2017/03/22 10:37:08 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/22 10:37:08 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/22 10:37:10 authenticatetokenimpl.go:51: 
TRACE: 2017/03/22 10:37:10 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/22 10:58:07 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 10:58:07 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 10:58:07 Login.go:16: entering manager.login
TRACE: 2017/03/22 10:58:07 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 10:58:07 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 10:58:07 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 10:58:11 userimpl.go:102: Response user Obj :  {0    test@4.com 123 }
TRACE: 2017/03/22 10:58:11 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 10:58:11 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 10:58:11 loginimpl.go:15: exntering in SaveToken() function {0 5 tCGUOkjFhAGxuLYqFhLi 2017-03-22 10:58:11.533861 +0530 IST}
TRACE: 2017/03/22 10:58:11 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 10:58:13 loginimpl.go:19: token inserted
TRACE: 2017/03/22 10:58:13 loginimpl.go:20: {0 5 tCGUOkjFhAGxuLYqFhLi 2017-03-22 10:58:11.533861 +0530 IST}
TRACE: 2017/03/22 10:58:15 loginimpl.go:38: last inserted id: 2
TRACE: 2017/03/22 10:58:15 Login.go:48: {5 risabh tCGUOkjFhAGxuLYqFhLi user}
TRACE: 2017/03/22 10:59:28 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/22 10:59:28 QuestionList.go:18: java
TRACE: 2017/03/22 10:59:28 QuestionList.go:19: tCGUOkjFhAGxuLYqFhLi
TRACE: 2017/03/22 10:59:28 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/22 10:59:28 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/22 10:59:28 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/22 10:59:28 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/22 10:59:30 authenticatetokenimpl.go:47: tCGUOkjFhAGxuLYqFhLi
TRACE: 2017/03/22 10:59:30 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/22 10:59:30 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/22 10:59:31 authenticatetokenimpl.go:51: tCGUOkjFhAGxuLYqFhLi
TRACE: 2017/03/22 10:59:31 authenticatetokenimpl.go:59: Type is tCGUOkjFhAGxuLYqFhLi
TRACE: 2017/03/22 10:59:31 aunthenticate.go:42: 2017-03-22 10:59:31
TRACE: 2017/03/22 10:59:31 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/22 10:59:33 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/22 10:59:33 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/22 10:59:35 authenticatetokenimpl.go:30: {0xc0422a9ab0 0xc0421d1890}
TRACE: 2017/03/22 10:59:35 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/22 10:59:35 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/22 10:59:35 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/22 10:59:35 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/22 10:59:35 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/22 10:59:35 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/22 10:59:35 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/22 10:59:39 questionimpl.go:29: Error 1142: SELECT command denied to user 'onlinetestuser'@'localhost' for table 'questions'
TRACE: 2017/03/22 11:06:35 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/22 11:06:35 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/22 11:06:35 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/22 11:06:35 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/22 11:06:35 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/22 11:06:35 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/22 11:06:35 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/22 11:06:35 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/22 11:06:35 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/22 11:06:35 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/22 11:07:16 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/22 11:07:16 QuestionList.go:18: java
TRACE: 2017/03/22 11:07:16 QuestionList.go:19: tCGUOkjFhAGxuLYqFhLi
TRACE: 2017/03/22 11:07:16 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/22 11:07:16 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/22 11:07:16 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/22 11:07:16 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/22 11:07:18 authenticatetokenimpl.go:47: tCGUOkjFhAGxuLYqFhLi
TRACE: 2017/03/22 11:07:18 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/22 11:07:18 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/22 11:07:20 authenticatetokenimpl.go:51: tCGUOkjFhAGxuLYqFhLi
TRACE: 2017/03/22 11:07:20 authenticatetokenimpl.go:59: Type is tCGUOkjFhAGxuLYqFhLi
TRACE: 2017/03/22 11:07:20 aunthenticate.go:42: 2017-03-22 11:07:20
TRACE: 2017/03/22 11:07:20 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/22 11:07:22 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/22 11:07:22 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/22 11:07:24 authenticatetokenimpl.go:30: {0xc0421beaf0 0xc0422bc430}
TRACE: 2017/03/22 11:07:24 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/22 11:07:24 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/22 11:07:24 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/22 11:07:24 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/22 11:07:24 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/22 11:07:24 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/22 11:07:24 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/22 11:07:26 questionimpl.go:25: &{0xae1660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042322180 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/03/22 11:07:27 questionimpl.go:27: <nil>
TRACE: 2017/03/22 11:07:27 questionimpl.go:29: Error 1142: SELECT command denied to user 'onlinetestuser'@'localhost' for table 'questions'
TRACE: 2017/03/22 11:13:10 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/22 11:13:10 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/22 11:13:10 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/22 11:13:10 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/22 11:13:10 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/22 11:13:10 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/22 11:13:10 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/22 11:13:10 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/22 11:13:10 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/22 11:13:10 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/22 11:13:18 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/22 11:13:18 QuestionList.go:18: java
TRACE: 2017/03/22 11:13:18 QuestionList.go:19: tCGUOkjFhAGxuLYqFhLi
TRACE: 2017/03/22 11:13:18 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/22 11:13:18 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/22 11:13:18 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/22 11:13:18 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/22 11:13:21 authenticatetokenimpl.go:47: tCGUOkjFhAGxuLYqFhLi
TRACE: 2017/03/22 11:13:21 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/22 11:13:21 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/22 11:13:22 authenticatetokenimpl.go:51: tCGUOkjFhAGxuLYqFhLi
TRACE: 2017/03/22 11:13:22 authenticatetokenimpl.go:59: Type is tCGUOkjFhAGxuLYqFhLi
TRACE: 2017/03/22 11:13:22 aunthenticate.go:42: 2017-03-22 11:13:22
TRACE: 2017/03/22 11:13:22 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/22 11:13:24 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/22 11:13:24 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/22 11:13:26 authenticatetokenimpl.go:30: {0xc0422a40e0 0xc0421f02d0}
TRACE: 2017/03/22 11:13:26 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/22 11:13:26 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/22 11:13:26 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/22 11:13:26 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/22 11:13:26 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/22 11:13:26 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/22 11:13:26 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/22 11:13:28 questionimpl.go:25: &{0xae1660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421c5080 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/03/22 11:13:30 questionimpl.go:27: &{0xc0421a4e70 0x701830 0xc0421bb2a0 false [] <nil> 0xc04212d950}
TRACE: 2017/03/22 11:17:22 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/22 11:17:22 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/22 11:17:22 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/22 11:17:22 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/22 11:17:22 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/22 11:17:22 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/22 11:17:22 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/22 11:17:22 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/22 11:17:22 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/22 11:17:22 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/22 11:17:42 Login.go:14: entering webservice.Login()
TRACE: 2017/03/22 11:17:42 Login.go:19: calling manager.Login()
TRACE: 2017/03/22 11:17:42 Login.go:16: entering manager.login
TRACE: 2017/03/22 11:17:42 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/22 11:17:42 userimpl.go:77: entering in AuthenticateUser()
TRACE: 2017/03/22 11:17:42 userimpl.go:79: Executing query and authenticating user exist
TRACE: 2017/03/22 11:17:46 userimpl.go:102: Response user Obj :  {0    test@3.com 123 }
TRACE: 2017/03/22 11:17:46 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/22 11:17:46 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/22 11:17:46 loginimpl.go:15: exntering in SaveToken() function {0 4 GCVmUkXMNiVzlckxifzu 2017-03-22 11:17:46.1550963 +0530 IST}
TRACE: 2017/03/22 11:17:46 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/22 11:17:48 loginimpl.go:19: token inserted
TRACE: 2017/03/22 11:17:48 loginimpl.go:20: {0 4 GCVmUkXMNiVzlckxifzu 2017-03-22 11:17:46.1550963 +0530 IST}
TRACE: 2017/03/22 11:17:50 loginimpl.go:38: last inserted id: 3
TRACE: 2017/03/22 11:17:50 Login.go:48: {4 arun GCVmUkXMNiVzlckxifzu user}
TRACE: 2017/03/22 11:18:00 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/22 11:18:00 QuestionList.go:18: java
TRACE: 2017/03/22 11:18:00 QuestionList.go:19: 
TRACE: 2017/03/22 11:18:00 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/22 11:18:00 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/22 11:18:00 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/22 11:18:00 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/22 11:18:02 authenticatetokenimpl.go:47: 
TRACE: 2017/03/22 11:18:02 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/22 11:18:02 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/22 11:18:04 authenticatetokenimpl.go:51: 
TRACE: 2017/03/22 11:18:04 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/23 14:11:21 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/23 14:11:21 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/23 14:11:21 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/23 14:11:21 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/23 14:11:21 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/23 14:11:21 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/23 14:11:21 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/23 14:11:21 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/23 14:11:21 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/23 14:11:21 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/23 14:13:07 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/23 14:13:07 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/23 14:13:07 register.go:16: entering in  manager.Register() function
TRACE: 2017/03/23 14:13:07 register.go:18: calling register manager
TRACE: 2017/03/23 14:13:07 register.go:20: calling userDao.CheckUser function
TRACE: 2017/03/23 14:13:07 userimpl.go:46: entering in userDao.CheckUser()...
TRACE: 2017/03/23 14:13:07 userimpl.go:49: executing query and checking user exists
TRACE: 2017/03/23 14:13:11 register.go:30: calling userDao.SaveNewUser() function
TRACE: 2017/03/23 14:13:11 userimpl.go:14: entering in SaveNewUser() function
TRACE: 2017/03/23 14:13:11 userimpl.go:15: executing query and storing registration details
TRACE: 2017/03/23 14:13:16 register.go:35: 163
TRACE: 2017/03/23 14:13:16 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/23 14:15:30 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/23 14:15:30 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/23 14:15:30 register.go:16: entering in  manager.Register() function
TRACE: 2017/03/23 14:15:30 register.go:18: calling register manager
TRACE: 2017/03/23 14:15:30 register.go:20: calling userDao.CheckUser function
TRACE: 2017/03/23 14:15:30 userimpl.go:46: entering in userDao.CheckUser()...
TRACE: 2017/03/23 14:15:30 userimpl.go:49: executing query and checking user exists
TRACE: 2017/03/23 14:15:34 register.go:30: calling userDao.SaveNewUser() function
TRACE: 2017/03/23 14:15:34 userimpl.go:14: entering in SaveNewUser() function
TRACE: 2017/03/23 14:15:34 userimpl.go:15: executing query and storing registration details
TRACE: 2017/03/23 14:15:38 register.go:35: 164
TRACE: 2017/03/23 14:15:38 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/23 14:17:29 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/23 14:17:29 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/23 14:17:29 register.go:16: entering in  manager.Register() function
TRACE: 2017/03/23 14:17:29 register.go:18: calling register manager
TRACE: 2017/03/23 14:17:29 register.go:20: calling userDao.CheckUser function
TRACE: 2017/03/23 14:17:29 userimpl.go:46: entering in userDao.CheckUser()...
TRACE: 2017/03/23 14:17:29 userimpl.go:49: executing query and checking user exists
TRACE: 2017/03/23 14:20:00 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/23 14:20:00 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/23 14:20:00 register.go:16: entering in  manager.Register() function
TRACE: 2017/03/23 14:20:00 register.go:18: calling register manager
TRACE: 2017/03/23 14:20:00 register.go:20: calling userDao.CheckUser function
TRACE: 2017/03/23 14:20:00 userimpl.go:46: entering in userDao.CheckUser()...
TRACE: 2017/03/23 14:20:00 userimpl.go:49: executing query and checking user exists
TRACE: 2017/03/23 14:20:04 register.go:30: calling userDao.SaveNewUser() function
TRACE: 2017/03/23 14:20:04 userimpl.go:14: entering in SaveNewUser() function
TRACE: 2017/03/23 14:20:04 userimpl.go:15: executing query and storing registration details
TRACE: 2017/03/23 14:20:09 register.go:35: 165
TRACE: 2017/03/23 14:22:06 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/23 14:22:06 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/23 14:22:06 register.go:16: entering in  manager.Register() function
TRACE: 2017/03/23 14:22:06 register.go:18: calling register manager
TRACE: 2017/03/23 14:22:06 register.go:20: calling userDao.CheckUser function
TRACE: 2017/03/23 14:22:06 userimpl.go:46: entering in userDao.CheckUser()...
TRACE: 2017/03/23 14:22:06 userimpl.go:49: executing query and checking user exists
TRACE: 2017/03/23 14:22:10 register.go:30: calling userDao.SaveNewUser() function
TRACE: 2017/03/23 14:22:10 userimpl.go:14: entering in SaveNewUser() function
TRACE: 2017/03/23 14:22:10 userimpl.go:15: executing query and storing registration details
TRACE: 2017/03/23 14:22:15 register.go:35: 166
TRACE: 2017/03/23 14:22:15 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/23 15:30:25 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/23 15:30:25 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/23 15:30:25 register.go:16: entering in  manager.Register() function
TRACE: 2017/03/23 15:30:25 register.go:18: calling register manager
TRACE: 2017/03/23 15:30:25 register.go:20: calling userDao.CheckUser function
TRACE: 2017/03/23 15:30:25 userimpl.go:46: entering in userDao.CheckUser()...
TRACE: 2017/03/23 15:30:25 userimpl.go:49: executing query and checking user exists
TRACE: 2017/03/23 15:30:31 register.go:30: calling userDao.SaveNewUser() function
TRACE: 2017/03/23 15:30:31 userimpl.go:14: entering in SaveNewUser() function
TRACE: 2017/03/23 15:30:31 userimpl.go:15: executing query and storing registration details
TRACE: 2017/03/23 15:30:36 register.go:35: 172
TRACE: 2017/03/23 15:30:36 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/23 15:32:25 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/23 15:32:25 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/23 15:32:25 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/23 15:32:25 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/23 15:32:25 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/23 15:32:25 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/23 15:32:25 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/23 15:32:25 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/23 15:32:25 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/23 15:32:25 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/23 15:32:27 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/23 15:32:27 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/23 15:32:27 register.go:16: entering in  manager.Register() function
TRACE: 2017/03/23 15:32:27 register.go:18: calling register manager
TRACE: 2017/03/23 15:32:27 register.go:20: calling userDao.CheckUser function
TRACE: 2017/03/23 15:32:27 userimpl.go:46: entering in userDao.CheckUser()...
TRACE: 2017/03/23 15:32:27 userimpl.go:49: executing query and checking user exists
TRACE: 2017/03/23 15:32:42 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/23 15:32:42 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/23 15:32:42 register.go:16: entering in  manager.Register() function
TRACE: 2017/03/23 15:32:42 register.go:18: calling register manager
TRACE: 2017/03/23 15:32:42 register.go:20: calling userDao.CheckUser function
TRACE: 2017/03/23 15:32:42 userimpl.go:46: entering in userDao.CheckUser()...
TRACE: 2017/03/23 15:32:42 userimpl.go:49: executing query and checking user exists
TRACE: 2017/03/23 15:32:47 register.go:30: calling userDao.SaveNewUser() function
TRACE: 2017/03/23 15:32:47 userimpl.go:14: entering in SaveNewUser() function
TRACE: 2017/03/23 15:32:47 userimpl.go:15: executing query and storing registration details
TRACE: 2017/03/23 15:32:48 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 500
TRACE: 2017/03/23 15:32:51 register.go:35: 173
TRACE: 2017/03/23 15:34:02 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/23 15:34:02 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/23 15:34:02 register.go:16: entering in  manager.Register() function
TRACE: 2017/03/23 15:34:02 register.go:18: calling register manager
TRACE: 2017/03/23 15:34:02 register.go:20: calling userDao.CheckUser function
TRACE: 2017/03/23 15:34:02 userimpl.go:46: entering in userDao.CheckUser()...
TRACE: 2017/03/23 15:34:02 userimpl.go:49: executing query and checking user exists
TRACE: 2017/03/23 15:34:07 register.go:30: calling userDao.SaveNewUser() function
TRACE: 2017/03/23 15:34:07 userimpl.go:14: entering in SaveNewUser() function
TRACE: 2017/03/23 15:34:07 userimpl.go:15: executing query and storing registration details
TRACE: 2017/03/23 15:34:11 register.go:35: 174
TRACE: 2017/03/23 16:08:33 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/23 16:08:33 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/23 16:08:33 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/23 16:08:33 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/23 16:08:33 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/23 16:08:33 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/23 16:08:33 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/23 16:08:33 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/23 16:08:33 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/23 16:08:33 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/23 16:10:31 RegisterUser.go:14: entering in webservice.RegisterUser
TRACE: 2017/03/23 16:10:31 RegisterUser.go:18: calling manager.Register function
TRACE: 2017/03/23 16:10:31 register.go:16: entering in  manager.Register() function
TRACE: 2017/03/23 16:10:31 register.go:18: calling register manager
TRACE: 2017/03/23 16:10:31 register.go:20: calling userDao.CheckUser function
TRACE: 2017/03/23 16:10:31 userimpl.go:48: entering in userDao.CheckUser()...
TRACE: 2017/03/23 16:10:31 userimpl.go:51: executing query and checking user exists
TRACE: 2017/03/23 16:10:36 register.go:30: calling userDao.SaveNewUser() function
TRACE: 2017/03/23 16:10:36 userimpl.go:16: entering in SaveNewUser() function
TRACE: 2017/03/23 16:10:36 userimpl.go:17: executing query and storing registration details
TRACE: 2017/03/23 16:10:41 register.go:35: 175
TRACE: 2017/03/23 16:11:52 Login.go:14: entering webservice.Login()
TRACE: 2017/03/23 16:11:52 Login.go:19: calling manager.Login()
TRACE: 2017/03/23 16:11:52 Login.go:16: entering manager.login
TRACE: 2017/03/23 16:11:52 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/23 16:11:52 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/23 16:11:52 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/23 16:11:57 userimpl.go:104: Response user Obj :  {0    rpqb@rpqb.com 123 }
TRACE: 2017/03/23 16:11:57 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/23 16:11:57 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/23 16:11:57 loginimpl.go:15: exntering in SaveToken() function {0 175 NljoQDkhOJGTcpTxccFy 2017-03-23 16:11:57.5862917 +0530 IST}
TRACE: 2017/03/23 16:11:57 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/23 16:11:59 loginimpl.go:19: token inserted
TRACE: 2017/03/23 16:11:59 loginimpl.go:20: {0 175 NljoQDkhOJGTcpTxccFy 2017-03-23 16:11:57.5862917 +0530 IST}
TRACE: 2017/03/23 16:12:02 loginimpl.go:38: last inserted id: 1
TRACE: 2017/03/23 16:12:02 Login.go:48: {175 llam NljoQDkhOJGTcpTxccFy user}
TRACE: 2017/03/23 16:33:57 Login.go:14: entering webservice.Login()
TRACE: 2017/03/23 16:33:57 Login.go:19: calling manager.Login()
TRACE: 2017/03/23 16:33:57 Login.go:16: entering manager.login
TRACE: 2017/03/23 16:33:57 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/23 16:33:57 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/23 16:33:57 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/23 16:34:01 userimpl.go:104: Response user Obj :  {0    rpqb@rpqb.com 123 }
TRACE: 2017/03/23 16:34:01 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/23 16:34:01 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/23 16:34:01 loginimpl.go:15: exntering in SaveToken() function {0 175 rPUcsuKpKOgAtMmziAkm 2017-03-23 16:34:01.8081549 +0530 IST}
TRACE: 2017/03/23 16:34:01 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/23 16:34:03 loginimpl.go:19: token inserted
TRACE: 2017/03/23 16:34:03 loginimpl.go:20: {0 175 rPUcsuKpKOgAtMmziAkm 2017-03-23 16:34:01.8081549 +0530 IST}
TRACE: 2017/03/23 16:34:05 loginimpl.go:38: last inserted id: 2
TRACE: 2017/03/23 16:34:05 Login.go:48: {175 llam rPUcsuKpKOgAtMmziAkm user}
TRACE: 2017/03/23 16:34:28 Login.go:14: entering webservice.Login()
TRACE: 2017/03/23 16:34:28 Login.go:19: calling manager.Login()
TRACE: 2017/03/23 16:34:28 Login.go:16: entering manager.login
TRACE: 2017/03/23 16:34:28 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/23 16:34:28 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/23 16:34:28 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/23 16:34:32 userimpl.go:104: Response user Obj :  {0    rpqb@rpqb.com 123 }
TRACE: 2017/03/23 16:34:32 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/23 16:34:32 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/23 16:34:32 loginimpl.go:15: exntering in SaveToken() function {0 175 JkuHBdFcYeKnIsxNAJyJ 2017-03-23 16:34:32.3353543 +0530 IST}
TRACE: 2017/03/23 16:34:32 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/23 16:34:34 loginimpl.go:19: token inserted
TRACE: 2017/03/23 16:34:34 loginimpl.go:20: {0 175 JkuHBdFcYeKnIsxNAJyJ 2017-03-23 16:34:32.3353543 +0530 IST}
TRACE: 2017/03/23 16:34:36 loginimpl.go:38: last inserted id: 3
TRACE: 2017/03/23 16:34:36 Login.go:48: {175 llam JkuHBdFcYeKnIsxNAJyJ user}
TRACE: 2017/03/23 17:14:56 Login.go:14: entering webservice.Login()
TRACE: 2017/03/23 17:14:56 Login.go:19: calling manager.Login()
TRACE: 2017/03/23 17:14:56 Login.go:16: entering manager.login
TRACE: 2017/03/23 17:14:56 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/23 17:14:56 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/23 17:14:56 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/23 17:15:01 userimpl.go:104: Response user Obj :  {0    rpqb@rpqb.com 123 }
TRACE: 2017/03/23 17:15:01 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/23 17:15:01 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/23 17:15:01 loginimpl.go:15: exntering in SaveToken() function {0 175 eaStojTTUghAMOicXIXM 2017-03-23 17:15:01.6499185 +0530 IST}
TRACE: 2017/03/23 17:15:01 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/23 17:15:04 loginimpl.go:19: token inserted
TRACE: 2017/03/23 17:15:04 loginimpl.go:20: {0 175 eaStojTTUghAMOicXIXM 2017-03-23 17:15:01.6499185 +0530 IST}
TRACE: 2017/03/23 17:15:07 loginimpl.go:38: last inserted id: 5
TRACE: 2017/03/23 17:15:07 Login.go:48: {175 llam eaStojTTUghAMOicXIXM user}
TRACE: 2017/03/23 17:15:10 Login.go:14: entering webservice.Login()
TRACE: 2017/03/23 17:15:10 Login.go:19: calling manager.Login()
TRACE: 2017/03/23 17:15:10 Login.go:16: entering manager.login
TRACE: 2017/03/23 17:15:10 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/23 17:15:10 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/23 17:15:10 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/23 17:15:15 userimpl.go:104: Response user Obj :  {0    rpqb@rpqb.com 123 }
TRACE: 2017/03/23 17:15:15 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/23 17:15:15 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/23 17:15:15 loginimpl.go:15: exntering in SaveToken() function {0 175 EzGZPyPSsUrCAICwVVAF 2017-03-23 17:15:15.5154161 +0530 IST}
TRACE: 2017/03/23 17:15:15 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/23 17:15:18 loginimpl.go:19: token inserted
TRACE: 2017/03/23 17:15:18 loginimpl.go:20: {0 175 EzGZPyPSsUrCAICwVVAF 2017-03-23 17:15:15.5154161 +0530 IST}
TRACE: 2017/03/23 17:15:21 loginimpl.go:38: last inserted id: 6
TRACE: 2017/03/23 17:15:21 Login.go:48: {175 llam EzGZPyPSsUrCAICwVVAF user}
TRACE: 2017/03/23 17:15:57 Login.go:14: entering webservice.Login()
TRACE: 2017/03/23 17:15:57 Login.go:19: calling manager.Login()
TRACE: 2017/03/23 17:15:57 Login.go:16: entering manager.login
TRACE: 2017/03/23 17:15:57 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/23 17:15:57 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/23 17:15:57 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/23 17:16:03 userimpl.go:104: Response user Obj :  {0    rpqb@rpqb.com 123 }
TRACE: 2017/03/23 17:16:03 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/23 17:16:03 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/23 17:16:03 loginimpl.go:15: exntering in SaveToken() function {0 175 tulwbrMLeGEkSCSSYwcC 2017-03-23 17:16:03.1965232 +0530 IST}
TRACE: 2017/03/23 17:16:03 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/23 17:16:06 loginimpl.go:19: token inserted
TRACE: 2017/03/23 17:16:06 loginimpl.go:20: {0 175 tulwbrMLeGEkSCSSYwcC 2017-03-23 17:16:03.1965232 +0530 IST}
TRACE: 2017/03/23 17:16:09 loginimpl.go:38: last inserted id: 7
TRACE: 2017/03/23 17:16:09 Login.go:48: {175 llam tulwbrMLeGEkSCSSYwcC user}
TRACE: 2017/03/23 17:47:03 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/23 17:47:03 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/23 17:47:03 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/23 17:47:03 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/23 17:47:03 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/23 17:47:03 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/23 17:47:03 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/23 17:47:03 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/23 17:47:03 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/23 17:47:03 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/23 17:47:46 Login.go:14: entering webservice.Login()
TRACE: 2017/03/23 17:47:46 Login.go:19: calling manager.Login()
TRACE: 2017/03/23 17:47:46 Login.go:16: entering manager.login
TRACE: 2017/03/23 17:47:46 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/23 17:47:46 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/23 17:47:46 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/23 17:47:50 userimpl.go:104: Response user Obj :  {0    rpqb@rpqb.com 123 }
TRACE: 2017/03/23 17:47:50 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/23 17:47:50 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/23 17:47:50 loginimpl.go:15: exntering in SaveToken() function {0 175 cEOGZePSidDCrxZajLtb 2017-03-23 17:47:50.9399173 +0530 IST}
TRACE: 2017/03/23 17:47:50 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/23 17:47:53 loginimpl.go:19: token inserted
TRACE: 2017/03/23 17:47:53 loginimpl.go:20: {0 175 cEOGZePSidDCrxZajLtb 2017-03-23 17:47:50.9399173 +0530 IST}
TRACE: 2017/03/23 17:47:55 loginimpl.go:38: last inserted id: 8
TRACE: 2017/03/23 17:47:57 loginimpl.go:51: entering In DeleteDuplicateUid()
TRACE: 2017/03/23 17:47:57 loginimpl.go:52: executing query updating deleting duplicate uid
TRACE: 2017/03/23 17:47:58 loginimpl.go:58: Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '? = e2.uid AND e1.id > e2.id' at line 1
TRACE: 2017/03/23 17:48:34 Login.go:14: entering webservice.Login()
TRACE: 2017/03/23 17:48:34 Login.go:19: calling manager.Login()
TRACE: 2017/03/23 17:48:34 Login.go:16: entering manager.login
TRACE: 2017/03/23 17:48:34 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/23 17:48:34 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/23 17:48:34 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/23 17:48:38 userimpl.go:104: Response user Obj :  {0    rpqb@rpqb.com 123 }
TRACE: 2017/03/23 17:48:38 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/23 17:48:38 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/23 17:48:38 loginimpl.go:15: exntering in SaveToken() function {0 175 JhbbGWyjFmoYmQqRxvef 2017-03-23 17:48:38.5274577 +0530 IST}
TRACE: 2017/03/23 17:48:38 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/23 17:48:40 loginimpl.go:19: token inserted
TRACE: 2017/03/23 17:48:40 loginimpl.go:20: {0 175 JhbbGWyjFmoYmQqRxvef 2017-03-23 17:48:38.5274577 +0530 IST}
TRACE: 2017/03/23 17:48:42 loginimpl.go:38: last inserted id: 9
TRACE: 2017/03/23 17:48:44 loginimpl.go:51: entering In DeleteDuplicateUid()
TRACE: 2017/03/23 17:48:44 loginimpl.go:52: executing query updating deleting duplicate uid
TRACE: 2017/03/23 17:48:46 loginimpl.go:58: Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '? = e2.uid AND e1.id > e2.id' at line 1
TRACE: 2017/03/23 17:53:55 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/23 17:53:55 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/23 17:53:55 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/23 17:53:55 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/23 17:53:55 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/23 17:53:55 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/23 17:53:55 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/23 17:53:55 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/23 17:53:55 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/23 17:53:55 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/23 17:54:00 Login.go:14: entering webservice.Login()
TRACE: 2017/03/23 17:54:00 Login.go:19: calling manager.Login()
TRACE: 2017/03/23 17:54:00 Login.go:16: entering manager.login
TRACE: 2017/03/23 17:54:00 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/23 17:54:00 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/23 17:54:00 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/23 17:54:04 userimpl.go:104: Response user Obj :  {0    rpqb@rpqb.com 123 }
TRACE: 2017/03/23 17:54:04 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/23 17:54:04 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/23 17:54:04 loginimpl.go:15: exntering in SaveToken() function {0 175 TFQYEFETtMXuAlYcHjlZ 2017-03-23 17:54:04.7958199 +0530 IST}
TRACE: 2017/03/23 17:54:04 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/23 17:54:06 loginimpl.go:19: token inserted
TRACE: 2017/03/23 17:54:06 loginimpl.go:20: {0 175 TFQYEFETtMXuAlYcHjlZ 2017-03-23 17:54:04.7958199 +0530 IST}
TRACE: 2017/03/23 17:54:08 loginimpl.go:38: last inserted id: 10
TRACE: 2017/03/23 17:54:10 loginimpl.go:51: entering In DeleteDuplicateUid()
TRACE: 2017/03/23 17:54:10 loginimpl.go:52: executing query updating deleting duplicate uid
TRACE: 2017/03/23 17:54:12 loginimpl.go:58: Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '? AND e1.id > e2.id' at line 1
TRACE: 2017/03/23 18:48:11 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/23 18:48:11 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/23 18:48:11 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/23 18:48:11 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/23 18:48:11 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/23 18:48:11 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/23 18:48:11 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/23 18:48:11 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/23 18:48:11 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/23 18:48:11 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/23 18:48:15 Login.go:14: entering webservice.Login()
TRACE: 2017/03/23 18:48:16 Login.go:19: calling manager.Login()
TRACE: 2017/03/23 18:48:16 Login.go:16: entering manager.login
TRACE: 2017/03/23 18:48:16 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/23 18:48:16 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/23 18:48:16 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/23 18:48:23 userimpl.go:104: Response user Obj :  {0    rpqb@rpqb.com 123 }
TRACE: 2017/03/23 18:48:23 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/23 18:48:23 Login.go:34: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/03/23 18:48:25 loginimpl.go:51: entering In DeleteDuplicateUid()
TRACE: 2017/03/23 18:48:25 loginimpl.go:52: executing query updating deleting duplicate uid
TRACE: 2017/03/23 18:48:29 loginimpl.go:58: Error 1146: Table 'onlinetestdb.TOKEN' doesn't exist
TRACE: 2017/03/23 18:50:22 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/23 18:50:22 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/23 18:50:22 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/23 18:50:22 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/23 18:50:22 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/23 18:50:22 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/23 18:50:22 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/23 18:50:22 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/23 18:50:22 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/23 18:50:22 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/23 18:50:24 Login.go:14: entering webservice.Login()
TRACE: 2017/03/23 18:50:24 Login.go:19: calling manager.Login()
TRACE: 2017/03/23 18:50:24 Login.go:16: entering manager.login
TRACE: 2017/03/23 18:50:24 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/23 18:50:24 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/23 18:50:24 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/23 18:50:29 userimpl.go:104: Response user Obj :  {0    rpqb@rpqb.com 123 }
TRACE: 2017/03/23 18:50:29 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/23 18:50:29 Login.go:34: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/03/23 18:50:32 loginimpl.go:51: entering In DeleteDuplicateUid()
TRACE: 2017/03/23 18:50:32 loginimpl.go:52: executing query.....
TRACE: 2017/03/23 18:50:36 loginimpl.go:64: {0xc0421de460 0xc0422d8320}
TRACE: 2017/03/23 18:50:36 loginimpl.go:69: 0 <nil>
TRACE: 2017/03/23 18:50:36 Login.go:36: calling tokenDao.SaveToken()
TRACE: 2017/03/23 18:50:36 loginimpl.go:15: exntering in SaveToken() function {0 175 UALJpRVJXXYIHCxMFipH 2017-03-23 18:50:29.9472006 +0530 IST}
TRACE: 2017/03/23 18:50:36 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/23 18:50:57 loginimpl.go:19: token inserted
TRACE: 2017/03/23 18:50:57 loginimpl.go:20: {0 175 UALJpRVJXXYIHCxMFipH 2017-03-23 18:50:29.9472006 +0530 IST}
TRACE: 2017/03/23 18:51:00 Login.go:14: entering webservice.Login()
TRACE: 2017/03/23 18:51:00 Login.go:19: calling manager.Login()
TRACE: 2017/03/23 18:51:00 Login.go:16: entering manager.login
TRACE: 2017/03/23 18:51:00 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/23 18:51:00 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/23 18:51:00 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/23 18:51:06 userimpl.go:104: Response user Obj :  {0    rpqb@rpqb.com 123 }
TRACE: 2017/03/23 18:51:06 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/23 18:51:06 Login.go:34: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/03/23 18:51:09 loginimpl.go:51: entering In DeleteDuplicateUid()
TRACE: 2017/03/23 18:51:09 loginimpl.go:52: executing query.....
TRACE: 2017/03/23 18:51:12 loginimpl.go:64: {0xc0421480e0 0xc042106170}
TRACE: 2017/03/23 18:51:12 loginimpl.go:69: 0 <nil>
TRACE: 2017/03/23 18:51:12 Login.go:36: calling tokenDao.SaveToken()
TRACE: 2017/03/23 18:51:12 loginimpl.go:15: exntering in SaveToken() function {0 175 BoGibDmzssGhhdllEDES 2017-03-23 18:51:06.8374079 +0530 IST}
TRACE: 2017/03/23 18:51:12 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/23 18:51:15 loginimpl.go:19: token inserted
TRACE: 2017/03/23 18:51:15 loginimpl.go:20: {0 175 BoGibDmzssGhhdllEDES 2017-03-23 18:51:06.8374079 +0530 IST}
TRACE: 2017/03/23 18:51:18 loginimpl.go:38: last inserted id: 11
TRACE: 2017/03/23 18:51:18 Login.go:51: {175 llam BoGibDmzssGhhdllEDES user}
TRACE: 2017/03/23 18:51:49 Login.go:14: entering webservice.Login()
TRACE: 2017/03/23 18:51:49 Login.go:19: calling manager.Login()
TRACE: 2017/03/23 18:51:49 Login.go:16: entering manager.login
TRACE: 2017/03/23 18:51:49 Login.go:23: calling userDao.AuthenticateUser()
TRACE: 2017/03/23 18:51:49 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/23 18:51:49 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/23 18:51:56 userimpl.go:104: Response user Obj :  {0    rpqb@rpqb.com 123 }
TRACE: 2017/03/23 18:51:56 Login.go:27: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/23 18:51:56 Login.go:34: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/03/23 18:51:59 loginimpl.go:51: entering In DeleteDuplicateUid()
TRACE: 2017/03/23 18:51:59 loginimpl.go:52: executing query.....
TRACE: 2017/03/23 18:52:02 loginimpl.go:64: {0xc042148bd0 0xc042045e70}
TRACE: 2017/03/23 18:52:02 loginimpl.go:69: 0 <nil>
TRACE: 2017/03/23 18:52:02 Login.go:36: calling tokenDao.SaveToken()
TRACE: 2017/03/23 18:52:02 loginimpl.go:15: exntering in SaveToken() function {0 175 iOmrMnJtQfFgDOZxCvMg 2017-03-23 18:51:56.837236 +0530 IST}
TRACE: 2017/03/23 18:52:02 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/23 18:52:05 loginimpl.go:19: token inserted
TRACE: 2017/03/23 18:52:05 loginimpl.go:20: {0 175 iOmrMnJtQfFgDOZxCvMg 2017-03-23 18:51:56.837236 +0530 IST}
TRACE: 2017/03/23 18:52:09 loginimpl.go:38: last inserted id: 12
TRACE: 2017/03/23 18:52:09 Login.go:51: {175 llam iOmrMnJtQfFgDOZxCvMg user}
>>>>>>> 7ddb6d476e06b8b506b700bc2300ad97df495150
TRACE: 2017/03/23 19:16:51 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/23 19:16:51 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/23 19:16:51 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/23 19:16:51 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/23 19:16:51 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/23 19:16:51 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/23 19:16:51 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/23 19:16:51 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/23 19:16:51 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/23 19:16:51 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/23 19:17:04 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/23 19:17:04 QuestionList.go:18: java
TRACE: 2017/03/23 19:17:04 QuestionList.go:19: ZURryxSOzVMSAFboiwix
TRACE: 2017/03/23 19:17:04 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/23 19:17:04 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/23 19:17:04 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/23 19:17:04 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/23 19:17:06 authenticatetokenimpl.go:47: ZURryxSOzVMSAFboiwix
TRACE: 2017/03/23 19:17:06 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/23 19:17:06 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/23 19:17:09 authenticatetokenimpl.go:51: ZURryxSOzVMSAFboiwix
TRACE: 2017/03/23 19:17:09 authenticatetokenimpl.go:59: Type is ZURryxSOzVMSAFboiwix
TRACE: 2017/03/23 19:17:09 aunthenticate.go:42: 2017-03-23 19:17:09
TRACE: 2017/03/23 19:17:09 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/23 19:17:11 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/23 19:17:11 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/23 19:17:14 authenticatetokenimpl.go:30: {0xc0422fc2a0 0xc0420085d0}
TRACE: 2017/03/23 19:17:14 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/23 19:17:14 aunthenticate.go:60: calling DeleteToken() function
TRACE: 2017/03/23 19:17:17 authenticatetokenimpl.go:75: entering DeleteToken() function
TRACE: 2017/03/23 19:17:17 authenticatetokenimpl.go:76: executing query and delete token 
TRACE: 2017/03/23 19:17:20 authenticatetokenimpl.go:88: {0xc0420323f0 0xc042008a00}
TRACE: 2017/03/23 19:17:20 aunthenticate.go:62: true
TRACE: 2017/03/23 19:17:20 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/23 19:17:20 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/23 19:17:20 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/23 19:17:20 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/23 19:17:20 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/23 19:17:20 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/23 19:17:23 questionimpl.go:25: &{0xae1660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0421d5d40 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/03/23 19:17:26 questionimpl.go:27: &{0xc0420327e0 0x702100 0xc0423283a0 false [] <nil> 0xc04200af90}
TRACE: 2017/03/23 19:18:49 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/23 19:18:49 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/23 19:18:49 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/23 19:18:49 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/23 19:18:49 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/23 19:18:49 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/23 19:18:49 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/23 19:18:49 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/23 19:18:49 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/23 19:18:49 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/23 19:18:54 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/23 19:18:54 QuestionList.go:18: java
TRACE: 2017/03/23 19:18:54 QuestionList.go:19: ZURryxSOzVMSAFboiwix
TRACE: 2017/03/23 19:18:54 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/23 19:18:54 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/23 19:18:54 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/23 19:18:54 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/23 19:18:56 authenticatetokenimpl.go:47: ZURryxSOzVMSAFboiwix
TRACE: 2017/03/23 19:18:56 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/23 19:18:56 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/23 19:18:59 authenticatetokenimpl.go:51: 
TRACE: 2017/03/23 19:18:59 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/23 19:19:31 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/23 19:19:31 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/23 19:19:31 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/23 19:19:31 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/23 19:19:31 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/23 19:19:31 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/23 19:19:31 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/23 19:19:31 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/23 19:19:31 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/23 19:19:31 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/23 19:19:39 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/23 19:19:39 QuestionList.go:18: java
TRACE: 2017/03/23 19:19:39 QuestionList.go:19: ZURryxSOzVMSAFboiwix
TRACE: 2017/03/23 19:19:39 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/23 19:19:39 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/23 19:19:39 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/23 19:19:39 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/23 19:19:41 authenticatetokenimpl.go:47: ZURryxSOzVMSAFboiwix
TRACE: 2017/03/23 19:19:41 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/23 19:19:41 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/23 19:19:44 authenticatetokenimpl.go:51: 
TRACE: 2017/03/23 19:19:44 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/23 19:21:17 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/23 19:21:17 QuestionList.go:18: java
TRACE: 2017/03/23 19:21:17 QuestionList.go:19: iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/23 19:21:17 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/23 19:21:17 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/23 19:21:17 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/23 19:21:17 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/23 19:21:19 authenticatetokenimpl.go:47: iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/23 19:21:19 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/23 19:21:19 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/23 19:21:22 authenticatetokenimpl.go:51: iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/23 19:21:22 authenticatetokenimpl.go:59: Type is iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/23 19:21:22 aunthenticate.go:42: 2017-03-23 19:21:22
TRACE: 2017/03/23 19:21:22 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/23 19:21:24 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/23 19:21:24 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/23 19:21:26 authenticatetokenimpl.go:30: {0xc0422f2310 0xc0421f26c0}
TRACE: 2017/03/23 19:21:26 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/23 19:21:26 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/23 19:21:26 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/23 19:21:26 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/23 19:21:26 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/23 19:21:26 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/23 19:21:26 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/23 19:21:28 questionimpl.go:25: &{0xae1660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc04233e4e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/03/23 19:21:31 questionimpl.go:27: &{0xc0422aa070 0x702100 0xc0422a8360 false [] <nil> 0xc0422b8270}
TRACE: 2017/03/23 19:28:47 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/23 19:28:47 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/23 19:28:47 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/23 19:28:47 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/23 19:28:47 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/23 19:28:47 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/23 19:28:47 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/23 19:28:47 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/23 19:28:47 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/23 19:28:47 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/23 19:28:51 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/23 19:28:51 QuestionList.go:18: java
TRACE: 2017/03/23 19:28:51 QuestionList.go:19: iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/23 19:28:51 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/23 19:28:51 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/23 19:28:51 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/23 19:28:51 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/23 19:28:54 authenticatetokenimpl.go:47: iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/23 19:28:54 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/23 19:28:54 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/23 19:28:56 authenticatetokenimpl.go:51: iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/23 19:28:56 authenticatetokenimpl.go:59: Type is iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/23 19:28:56 aunthenticate.go:42: 2017-03-23 19:28:56
TRACE: 2017/03/23 19:28:56 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/23 19:28:58 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/23 19:28:58 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/23 19:29:00 authenticatetokenimpl.go:30: {0xc042032380 0xc042008690}
TRACE: 2017/03/23 19:29:00 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/23 19:29:00 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/23 19:29:00 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/23 19:29:00 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/23 19:29:00 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/23 19:29:00 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/23 19:29:00 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/23 19:29:02 questionimpl.go:25: &{0xae1660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042204f00 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/03/23 19:29:05 questionimpl.go:27: &{0xc0420325b0 0x702100 0xc0422eeb80 false [] <nil> 0xc04200aa80}
TRACE: 2017/03/23 19:29:53 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/23 19:29:53 QuestionList.go:18: java
TRACE: 2017/03/23 19:29:53 QuestionList.go:19: iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/23 19:29:53 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/23 19:29:53 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/23 19:29:53 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/23 19:29:53 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/23 19:29:55 authenticatetokenimpl.go:47: iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/23 19:29:55 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/23 19:29:55 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/23 19:29:57 authenticatetokenimpl.go:51: iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/23 19:29:57 authenticatetokenimpl.go:59: Type is iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/23 19:29:57 aunthenticate.go:42: 2017-03-23 19:29:57
TRACE: 2017/03/23 19:29:57 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/23 19:29:59 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/23 19:29:59 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/23 19:30:01 authenticatetokenimpl.go:30: {0xc0423167e0 0xc0422f7380}
TRACE: 2017/03/23 19:30:01 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/23 19:30:01 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/23 19:30:01 FetchQuestion.go:13: entering into manager.FetchQuestion
TRACE: 2017/03/23 19:30:01 FetchQuestion.go:15: calling Question manager
TRACE: 2017/03/23 19:30:01 FetchQuestion.go:18: calling FetchQuestionsByType()
TRACE: 2017/03/23 19:30:01 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/23 19:30:01 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/23 19:30:03 questionimpl.go:25: &{0xae1660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422ce900 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/03/23 19:30:06 questionimpl.go:27: &{0xc042316bd0 0x702100 0xc042347080 false [] <nil> 0xc0422f1620}
TRACE: 2017/03/23 20:47:57 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/23 20:47:57 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/23 20:47:57 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/23 20:47:57 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/23 20:47:57 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/23 20:47:57 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/23 20:47:57 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/23 20:47:57 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/23 20:47:57 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/23 20:47:57 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/23 20:48:07 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/23 20:48:07 QuestionList.go:18: java
TRACE: 2017/03/23 20:48:07 QuestionList.go:19: iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/23 20:48:07 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/23 20:48:07 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/23 20:48:07 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/23 20:48:07 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/23 20:48:09 authenticatetokenimpl.go:47: iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/23 20:48:09 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/23 20:48:09 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/23 20:48:14 authenticatetokenimpl.go:51: iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/23 20:48:14 authenticatetokenimpl.go:59: Type is iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/23 20:48:14 aunthenticate.go:42: 2017-03-23 20:48:14
TRACE: 2017/03/23 20:48:14 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/23 20:48:17 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/23 20:48:17 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/23 20:48:21 authenticatetokenimpl.go:30: {0xc04219ccb0 0xc0422c4160}
TRACE: 2017/03/23 20:48:21 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/23 20:48:21 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/23 20:48:21 FetchQuestion.go:15: entering into manager.FetchQuestion
TRACE: 2017/03/23 20:48:21 FetchQuestion.go:17: calling Question manager
TRACE: 2017/03/23 20:48:21 FetchQuestion.go:21: calling FetchQuestionsByType()
TRACE: 2017/03/23 20:48:21 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/23 20:48:21 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/23 20:48:23 questionimpl.go:25: &{0xae2660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0422cc7e0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/03/23 20:48:27 questionimpl.go:27: &{0xc0421fc770 0x702340 0xc0422e0040 false [] <nil> 0xc0421d2b70}
TRACE: 2017/03/24 08:59:44 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/24 08:59:44 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/24 08:59:44 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/24 08:59:44 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/24 08:59:44 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/24 08:59:44 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/24 08:59:44 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/24 08:59:44 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/24 08:59:44 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/24 08:59:44 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/24 09:00:55 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/24 09:00:55 QuestionList.go:18: java
TRACE: 2017/03/24 09:00:55 QuestionList.go:19: sidufoegHUIGUIDFH
TRACE: 2017/03/24 09:00:55 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/24 09:00:55 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/24 09:00:55 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/24 09:00:55 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/24 09:00:57 authenticatetokenimpl.go:47: sidufoegHUIGUIDFH
TRACE: 2017/03/24 09:00:57 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/24 09:00:57 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/24 09:00:59 authenticatetokenimpl.go:51: 
TRACE: 2017/03/24 09:00:59 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/24 09:02:17 Login.go:14: entering webservice.Login()
TRACE: 2017/03/24 09:02:17 Login.go:19: calling manager.Login()
TRACE: 2017/03/24 09:02:17 Login.go:16: entering manager.login
TRACE: 2017/03/24 09:02:17 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/03/24 09:02:17 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/24 09:02:17 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/24 09:02:21 userimpl.go:104: Response user Obj :  {0      }
TRACE: 2017/03/24 09:02:21 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/24 09:02:39 Login.go:14: entering webservice.Login()
TRACE: 2017/03/24 09:02:39 Login.go:19: calling manager.Login()
TRACE: 2017/03/24 09:02:39 Login.go:16: entering manager.login
TRACE: 2017/03/24 09:02:39 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/03/24 09:02:39 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/24 09:02:39 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/24 09:02:43 userimpl.go:104: Response user Obj :  {0      }
TRACE: 2017/03/24 09:02:43 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/24 09:03:43 Login.go:14: entering webservice.Login()
TRACE: 2017/03/24 09:03:43 Login.go:19: calling manager.Login()
TRACE: 2017/03/24 09:03:43 Login.go:16: entering manager.login
TRACE: 2017/03/24 09:03:43 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/03/24 09:03:43 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/24 09:03:43 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/24 09:03:46 userimpl.go:104: Response user Obj :  {0    test@3.com  }
TRACE: 2017/03/24 09:03:46 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/24 09:03:59 Login.go:14: entering webservice.Login()
TRACE: 2017/03/24 09:03:59 Login.go:19: calling manager.Login()
TRACE: 2017/03/24 09:03:59 Login.go:16: entering manager.login
TRACE: 2017/03/24 09:03:59 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/03/24 09:03:59 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/24 09:03:59 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/24 09:04:03 userimpl.go:104: Response user Obj :  {0    test@3.com 123 }
TRACE: 2017/03/24 09:04:03 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/24 09:04:03 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/03/24 09:04:05 loginimpl.go:51: entering In DeleteDuplicateUid()
TRACE: 2017/03/24 09:04:05 loginimpl.go:52: executing query.....
TRACE: 2017/03/24 09:04:07 loginimpl.go:64: {0xc042032930 0xc0420075d0}
TRACE: 2017/03/24 09:04:07 loginimpl.go:69: 0 <nil>
TRACE: 2017/03/24 09:04:07 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/24 09:04:07 loginimpl.go:15: exntering in SaveToken() function {0 4 WNchhiyMLaFTmZKdAQNA 2017-03-24 09:04:03.4846203 +0530 IST}
TRACE: 2017/03/24 09:04:07 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/24 09:04:09 loginimpl.go:19: token inserted
TRACE: 2017/03/24 09:04:09 loginimpl.go:20: {0 4 WNchhiyMLaFTmZKdAQNA 2017-03-24 09:04:03.4846203 +0530 IST}
TRACE: 2017/03/24 09:04:11 loginimpl.go:38: last inserted id: 13
TRACE: 2017/03/24 09:04:11 Login.go:48: {4 arun WNchhiyMLaFTmZKdAQNA user}
TRACE: 2017/03/24 09:04:21 Login.go:14: entering webservice.Login()
TRACE: 2017/03/24 09:04:21 Login.go:19: calling manager.Login()
TRACE: 2017/03/24 09:04:21 Login.go:16: entering manager.login
TRACE: 2017/03/24 09:04:21 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/03/24 09:04:21 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/24 09:04:21 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/24 09:04:25 userimpl.go:104: Response user Obj :  {0    test@3.com 123 }
TRACE: 2017/03/24 09:04:25 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/24 09:04:25 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/03/24 09:04:27 loginimpl.go:51: entering In DeleteDuplicateUid()
TRACE: 2017/03/24 09:04:27 loginimpl.go:52: executing query.....
TRACE: 2017/03/24 09:04:29 loginimpl.go:64: {0xc042033730 0xc0423b4ea0}
TRACE: 2017/03/24 09:04:29 loginimpl.go:69: 0 <nil>
TRACE: 2017/03/24 09:04:29 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/24 09:04:29 loginimpl.go:15: exntering in SaveToken() function {0 4 PxGCPoPnpvYKvOldoUgG 2017-03-24 09:04:25.6435768 +0530 IST}
TRACE: 2017/03/24 09:04:29 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/24 09:04:31 loginimpl.go:19: token inserted
TRACE: 2017/03/24 09:04:31 loginimpl.go:20: {0 4 PxGCPoPnpvYKvOldoUgG 2017-03-24 09:04:25.6435768 +0530 IST}
TRACE: 2017/03/24 09:04:33 loginimpl.go:38: last inserted id: 14
TRACE: 2017/03/24 09:04:33 Login.go:48: {4 arun PxGCPoPnpvYKvOldoUgG user}
TRACE: 2017/03/24 09:13:04 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/24 09:13:04 QuestionList.go:18: java
TRACE: 2017/03/24 09:13:04 QuestionList.go:19: 
TRACE: 2017/03/24 09:13:04 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/24 09:13:04 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/24 09:13:04 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/24 09:13:04 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/24 09:13:06 authenticatetokenimpl.go:47: 
TRACE: 2017/03/24 09:13:06 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/24 09:13:06 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/24 09:13:07 authenticatetokenimpl.go:51: 
TRACE: 2017/03/24 09:13:07 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/24 09:13:38 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/24 09:13:38 QuestionList.go:18: java
TRACE: 2017/03/24 09:13:38 QuestionList.go:19: 
TRACE: 2017/03/24 09:13:38 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/24 09:13:38 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/24 09:13:38 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/24 09:13:38 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/24 09:13:40 authenticatetokenimpl.go:47: 
TRACE: 2017/03/24 09:13:40 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/24 09:13:40 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/24 09:13:42 authenticatetokenimpl.go:51: 
TRACE: 2017/03/24 09:13:42 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/24 09:14:02 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/24 09:14:02 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/24 09:14:02 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/24 09:14:02 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/24 09:14:02 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/24 09:14:02 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/24 09:14:02 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/24 09:14:02 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/24 09:14:02 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/24 09:14:02 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/24 09:14:05 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/24 09:14:05 QuestionList.go:18: java
TRACE: 2017/03/24 09:14:05 QuestionList.go:19: iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/24 09:14:05 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/24 09:14:05 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/24 09:14:05 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/24 09:14:05 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/24 09:14:07 authenticatetokenimpl.go:47: iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/24 09:14:07 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/24 09:14:07 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/24 09:14:09 authenticatetokenimpl.go:51: iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/24 09:14:09 authenticatetokenimpl.go:59: Type is iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/24 09:14:09 aunthenticate.go:42: 2017-03-24 09:14:09
TRACE: 2017/03/24 09:14:09 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/24 09:14:11 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/24 09:14:11 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/24 09:14:12 authenticatetokenimpl.go:30: {0xc04229a460 0xc042294ae0}
TRACE: 2017/03/24 09:14:12 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/24 09:14:12 aunthenticate.go:60: calling DeleteToken() function
TRACE: 2017/03/24 09:14:14 authenticatetokenimpl.go:75: entering DeleteToken() function
TRACE: 2017/03/24 09:14:14 authenticatetokenimpl.go:76: executing query and delete token 
TRACE: 2017/03/24 09:14:16 authenticatetokenimpl.go:88: {0xc0421bec40 0xc042137f00}
TRACE: 2017/03/24 09:14:16 aunthenticate.go:62: true
TRACE: 2017/03/24 09:14:16 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/24 09:14:16 FetchQuestion.go:15: entering into manager.FetchQuestion
TRACE: 2017/03/24 09:14:16 FetchQuestion.go:17: calling Question manager
TRACE: 2017/03/24 09:14:16 FetchQuestion.go:21: calling FetchQuestionsByType()
TRACE: 2017/03/24 09:14:16 questionimpl.go:17: entering into FetchQuestionsByType()
TRACE: 2017/03/24 09:14:16 questionimpl.go:18: executing query and Fetching Questions By Type 
TRACE: 2017/03/24 09:14:18 questionimpl.go:25: &{0xae2660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423163c0 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/03/24 09:14:20 questionimpl.go:27: &{0xc0421bf030 0x702340 0xc0422e71e0 false [] <nil> 0xc0421458f0}
TRACE: 2017/03/24 09:34:25 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/24 09:34:25 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/24 09:34:25 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/24 09:34:25 debug.go:45: [GIN-debug] POST   /login                    --> OnlineTestGo/webservice.Login (3 handlers)
TRACE: 2017/03/24 09:34:25 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/24 09:34:25 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/24 09:34:25 debug.go:45: [GIN-debug] GET    /admin                    --> OnlineTestGo/webservice.Admin (3 handlers)
TRACE: 2017/03/24 09:34:25 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/24 09:34:25 debug.go:45: [GIN-debug] GET    /logout                   --> OnlineTestGo/webservice.Logout (3 handlers)
TRACE: 2017/03/24 09:34:25 debug.go:45: [GIN-debug] Listening and serving HTTP on :8085
TRACE: 2017/03/24 09:34:31 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/24 09:34:31 QuestionList.go:18: java
TRACE: 2017/03/24 09:34:31 QuestionList.go:19: iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/24 09:34:31 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/24 09:34:31 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/24 09:34:31 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/24 09:34:31 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/24 09:34:33 authenticatetokenimpl.go:47: iOmrMnJtQfFgDOZxCvMg
TRACE: 2017/03/24 09:34:33 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/24 09:34:33 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/24 09:34:36 authenticatetokenimpl.go:51: 
TRACE: 2017/03/24 09:34:36 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/24 09:35:26 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/24 09:35:26 QuestionList.go:18: java
TRACE: 2017/03/24 09:35:26 QuestionList.go:19: PxGCPoPnpvYKvOldoUgG
TRACE: 2017/03/24 09:35:26 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/24 09:35:26 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/24 09:35:26 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/24 09:35:26 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/24 09:35:28 authenticatetokenimpl.go:47: PxGCPoPnpvYKvOldoUgG
TRACE: 2017/03/24 09:35:28 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/24 09:35:28 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/24 09:35:31 authenticatetokenimpl.go:51: PxGCPoPnpvYKvOldoUgG
TRACE: 2017/03/24 09:35:31 authenticatetokenimpl.go:59: Type is PxGCPoPnpvYKvOldoUgG
TRACE: 2017/03/24 09:35:31 aunthenticate.go:42: 2017-03-24 09:35:31
TRACE: 2017/03/24 09:35:31 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/24 09:35:34 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/24 09:35:34 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/24 09:35:37 authenticatetokenimpl.go:30: {0xc0421a5030 0xc0421ca4a0}
TRACE: 2017/03/24 09:35:37 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/24 09:35:37 aunthenticate.go:60: calling DeleteToken() function
TRACE: 2017/03/24 09:35:40 authenticatetokenimpl.go:75: entering DeleteToken() function
TRACE: 2017/03/24 09:35:40 authenticatetokenimpl.go:76: executing query and delete token 
TRACE: 2017/03/24 09:35:43 authenticatetokenimpl.go:88: {0xc0421e8380 0xc0422f40a0}
TRACE: 2017/03/24 09:35:43 aunthenticate.go:62: true
TRACE: 2017/03/24 09:35:43 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/24 09:35:43 FetchQuestion.go:15: entering into manager.FetchQuestion
TRACE: 2017/03/24 09:35:43 FetchQuestion.go:17: calling Question manager
TRACE: 2017/03/24 09:35:43 FetchQuestion.go:21: calling FetchQuestionsByType()
TRACE: 2017/03/24 09:35:43 questionimpl.go:19: entering into FetchQuestionsByType()
TRACE: 2017/03/24 09:35:43 questionimpl.go:20: executing query and Fetching Questions By Type 
TRACE: 2017/03/24 09:35:46 questionimpl.go:27: &{0xae2660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042314d20 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/03/24 09:35:49 questionimpl.go:29: &{0xc0421a5180 0x7024c0 0xc0422f6fc0 false [] <nil> 0xc042342060}
TRACE: 2017/03/24 09:36:31 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/24 09:36:31 QuestionList.go:18: java
TRACE: 2017/03/24 09:36:31 QuestionList.go:19: PxGCPoPnpvYKvOldoUgG
TRACE: 2017/03/24 09:36:31 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/24 09:36:31 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/24 09:36:31 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/24 09:36:31 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/24 09:36:33 authenticatetokenimpl.go:47: PxGCPoPnpvYKvOldoUgG
TRACE: 2017/03/24 09:36:33 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/24 09:36:33 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/24 09:36:37 authenticatetokenimpl.go:51: 
TRACE: 2017/03/24 09:36:37 authenticatetokenimpl.go:54: No uid with that token.
TRACE: 2017/03/24 09:37:55 Login.go:14: entering webservice.Login()
TRACE: 2017/03/24 09:37:55 Login.go:19: calling manager.Login()
TRACE: 2017/03/24 09:37:55 Login.go:16: entering manager.login
TRACE: 2017/03/24 09:37:55 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/03/24 09:37:55 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/24 09:37:55 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/24 09:38:01 userimpl.go:104: Response user Obj :  {0    test@3.com 123 }
TRACE: 2017/03/24 09:38:01 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/24 09:38:01 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/03/24 09:38:03 loginimpl.go:51: entering In DeleteDuplicateUid()
TRACE: 2017/03/24 09:38:03 loginimpl.go:52: executing query.....
TRACE: 2017/03/24 09:38:07 loginimpl.go:64: {0xc0422f8b60 0xc0422f5720}
TRACE: 2017/03/24 09:38:07 loginimpl.go:69: 0 <nil>
TRACE: 2017/03/24 09:38:07 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/24 09:38:07 loginimpl.go:15: exntering in SaveToken() function {0 4 yoeempQBEuHcRPiehvSC 2017-03-24 09:38:01.011475 +0530 IST}
TRACE: 2017/03/24 09:38:07 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/24 09:38:09 loginimpl.go:19: token inserted
TRACE: 2017/03/24 09:38:09 loginimpl.go:20: {0 4 yoeempQBEuHcRPiehvSC 2017-03-24 09:38:01.011475 +0530 IST}
TRACE: 2017/03/24 09:38:13 loginimpl.go:38: last inserted id: 15
TRACE: 2017/03/24 09:38:13 Login.go:48: {4 arun yoeempQBEuHcRPiehvSC user}
TRACE: 2017/03/24 09:38:36 Login.go:14: entering webservice.Login()
TRACE: 2017/03/24 09:38:36 Login.go:19: calling manager.Login()
TRACE: 2017/03/24 09:38:36 Login.go:16: entering manager.login
TRACE: 2017/03/24 09:38:36 Login.go:22: calling userDao.AuthenticateUser()
TRACE: 2017/03/24 09:38:36 userimpl.go:79: entering in AuthenticateUser()
TRACE: 2017/03/24 09:38:36 userimpl.go:81: Executing query and authenticating user exist
TRACE: 2017/03/24 09:38:43 userimpl.go:104: Response user Obj :  {0    test@3.com 123 }
TRACE: 2017/03/24 09:38:43 Login.go:26: generates token if user exist by calling GenerateToken()  
TRACE: 2017/03/24 09:38:43 Login.go:32: calling tokenDao.DeleteDuplicateUid()
TRACE: 2017/03/24 09:38:45 loginimpl.go:51: entering In DeleteDuplicateUid()
TRACE: 2017/03/24 09:38:45 loginimpl.go:52: executing query.....
TRACE: 2017/03/24 09:38:49 loginimpl.go:64: {0xc0422f9180 0xc042392540}
TRACE: 2017/03/24 09:38:49 loginimpl.go:69: 0 <nil>
TRACE: 2017/03/24 09:38:49 Login.go:34: calling tokenDao.SaveToken()
TRACE: 2017/03/24 09:38:49 loginimpl.go:15: exntering in SaveToken() function {0 4 saiZIEgBmZqqXBxvlPNF 2017-03-24 09:38:43.0350064 +0530 IST}
TRACE: 2017/03/24 09:38:49 loginimpl.go:16: executing query and storing token in database for the user 
TRACE: 2017/03/24 09:38:52 loginimpl.go:19: token inserted
TRACE: 2017/03/24 09:38:52 loginimpl.go:20: {0 4 saiZIEgBmZqqXBxvlPNF 2017-03-24 09:38:43.0350064 +0530 IST}
TRACE: 2017/03/24 09:38:56 loginimpl.go:38: last inserted id: 16
TRACE: 2017/03/24 09:38:56 Login.go:48: {4 arun saiZIEgBmZqqXBxvlPNF user}
TRACE: 2017/03/24 09:39:49 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/24 09:39:49 QuestionList.go:18: java
TRACE: 2017/03/24 09:39:49 QuestionList.go:19: saiZIEgBmZqqXBxvlPNF
TRACE: 2017/03/24 09:39:49 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/24 09:39:49 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/24 09:39:49 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/24 09:39:49 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/24 09:39:51 authenticatetokenimpl.go:47: saiZIEgBmZqqXBxvlPNF
TRACE: 2017/03/24 09:39:51 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/24 09:39:51 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/24 09:39:54 authenticatetokenimpl.go:51: saiZIEgBmZqqXBxvlPNF
TRACE: 2017/03/24 09:39:54 authenticatetokenimpl.go:59: Type is saiZIEgBmZqqXBxvlPNF
TRACE: 2017/03/24 09:39:54 aunthenticate.go:42: 2017-03-24 09:39:54
TRACE: 2017/03/24 09:39:54 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/24 09:39:57 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/24 09:39:57 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/24 09:40:01 authenticatetokenimpl.go:30: {0xc0421a5f80 0xc0423b0850}
TRACE: 2017/03/24 09:40:01 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/24 09:40:01 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/24 09:40:01 FetchQuestion.go:15: entering into manager.FetchQuestion
TRACE: 2017/03/24 09:40:01 FetchQuestion.go:17: calling Question manager
TRACE: 2017/03/24 09:40:01 FetchQuestion.go:21: calling FetchQuestionsByType()
TRACE: 2017/03/24 09:40:01 questionimpl.go:19: entering into FetchQuestionsByType()
TRACE: 2017/03/24 09:40:01 questionimpl.go:20: executing query and Fetching Questions By Type 
TRACE: 2017/03/24 09:40:04 questionimpl.go:27: &{0xae2660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc0423f8300 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/03/24 09:40:08 questionimpl.go:29: &{0xc0421e89a0 0x7024c0 0xc0421df4c0 false [] <nil> 0xc0421c91a0}
TRACE: 2017/03/24 09:42:40 QuestionList.go:15: entering into manager.QuestionList()
TRACE: 2017/03/24 09:42:40 QuestionList.go:18: java
TRACE: 2017/03/24 09:42:40 QuestionList.go:19: saiZIEgBmZqqXBxvlPNF
TRACE: 2017/03/24 09:42:40 QuestionList.go:20: calling filter.AuntheticateToken()
TRACE: 2017/03/24 09:42:40 aunthenticate.go:13: entering into AuthenticateToken()
TRACE: 2017/03/24 09:42:40 aunthenticate.go:24: 6 0 0
TRACE: 2017/03/24 09:42:40 aunthenticate.go:34: calling  daoimpl tokenDao.AunthenticateToken()
TRACE: 2017/03/24 09:42:42 authenticatetokenimpl.go:47: saiZIEgBmZqqXBxvlPNF
TRACE: 2017/03/24 09:42:42 authenticatetokenimpl.go:48: entering in AunthenticateToken() function
TRACE: 2017/03/24 09:42:42 authenticatetokenimpl.go:49: executing query fetching and returning token,lastaccesstime
TRACE: 2017/03/24 09:42:47 authenticatetokenimpl.go:51: saiZIEgBmZqqXBxvlPNF
TRACE: 2017/03/24 09:42:47 authenticatetokenimpl.go:59: Type is saiZIEgBmZqqXBxvlPNF
TRACE: 2017/03/24 09:42:47 aunthenticate.go:42: 2017-03-24 09:42:47
TRACE: 2017/03/24 09:42:47 aunthenticate.go:54: calling ModifyLastAccessTime()
TRACE: 2017/03/24 09:42:50 authenticatetokenimpl.go:17: entering In ModifyLastAccessTime()
TRACE: 2017/03/24 09:42:50 authenticatetokenimpl.go:18: executing query updating lastaccesstime to currentime
TRACE: 2017/03/24 09:42:55 authenticatetokenimpl.go:30: {0xc0422f98f0 0xc0423939d0}
TRACE: 2017/03/24 09:42:55 authenticatetokenimpl.go:35: 0 <nil>
TRACE: 2017/03/24 09:42:55 QuestionList.go:24: calling manager.FetchQuestion()
TRACE: 2017/03/24 09:42:55 FetchQuestion.go:15: entering into manager.FetchQuestion
TRACE: 2017/03/24 09:42:55 FetchQuestion.go:17: calling Question manager
TRACE: 2017/03/24 09:42:55 FetchQuestion.go:21: calling FetchQuestionsByType()
TRACE: 2017/03/24 09:42:55 questionimpl.go:19: entering into FetchQuestionsByType()
TRACE: 2017/03/24 09:42:55 questionimpl.go:20: executing query and Fetching Questions By Type 
TRACE: 2017/03/24 09:42:57 questionimpl.go:27: &{0xae2660 onlinetestuser:Rpqb_123@mysql+tcp(127.0.0.1:3306)/onlinetestdb 0 {0 0} [] [] 0 0xc042436360 false map[] map[] 0 0 0 <nil>}
TRACE: 2017/03/24 09:43:02 questionimpl.go:29: &{0xc0421e8f50 0x7024c0 0xc042448000 false [] <nil> 0xc0421c9e30}
