TRACE: 2017/03/14 13:03:13 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/14 13:03:13 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/14 13:03:13 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/14 13:03:13 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/14 13:03:13 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/14 13:03:13 main.go:35: First log message!
TRACE: 2017/03/14 13:03:13 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/14 13:03:31 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/14 13:03:31 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/14 13:03:31 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/14 13:03:31 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/14 13:03:31 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/14 13:03:31 main.go:35: First log message!
TRACE: 2017/03/14 13:03:31 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/14 13:06:35 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/14 13:06:35 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/14 13:06:35 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/14 13:06:35 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/14 13:06:35 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/14 13:06:35 main.go:35: First log message!
TRACE: 2017/03/14 13:06:35 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/14 13:07:12 register.go:68: calling Question manager
TRACE: 2017/03/14 13:07:13 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()}]
TRACE: 2017/03/14 13:09:54 register.go:68: calling Question manager
TRACE: 2017/03/14 13:09:56 questionimpl.go:42: totalquestions: [{5 to be badgered is to be flattered} {5 to be badgered is to be tormented} {5 to be badgered is to be made angry} {5 to be badgered is to be null} {6 if you were inundated with work you would be very busy} {6 if you were inundated with work you would be not busy} {6 if you were inundated with work you would be irritated} {6 if you were inundated with work you would be null}]
TRACE: 2017/03/14 13:11:44 register.go:68: calling Question manager
TRACE: 2017/03/14 13:11:45 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()}]
TRACE: 2017/03/14 13:13:36 register.go:68: calling Question manager
TRACE: 2017/03/14 13:13:38 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()}]
TRACE: 2017/03/14 13:18:41 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/14 13:18:41 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/14 13:18:41 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/14 13:18:41 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/14 13:18:41 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/14 13:18:41 main.go:35: First log message!
TRACE: 2017/03/14 13:18:41 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/14 13:18:50 register.go:68: calling Question manager
TRACE: 2017/03/14 13:18:52 questionimpl.go:42: totalquestions: [{5 to be badgered is to be flattered} {5 to be badgered is to be tormented} {5 to be badgered is to be made angry} {5 to be badgered is to be null} {6 if you were inundated with work you would be very busy} {6 if you were inundated with work you would be not busy} {6 if you were inundated with work you would be irritated} {6 if you were inundated with work you would be null}]
TRACE: 2017/03/15 03:47:17 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/15 03:47:17 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/15 03:47:17 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/15 03:47:17 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/15 03:47:17 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/15 03:47:17 main.go:35: First log message!
TRACE: 2017/03/15 03:47:17 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/15 03:47:22 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:47:22 register.go:38: calling Answer manager
TRACE: 2017/03/15 03:47:22 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:47:22 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:47:25 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:47:25 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:47:25 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:47:27 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:47:29 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:47:29 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:47:29 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:47:51 register.go:68: calling Question manager
TRACE: 2017/03/15 03:47:53 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 03:48:02 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:48:02 register.go:38: calling Answer manager
TRACE: 2017/03/15 03:48:02 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:48:02 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:48:04 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:48:04 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:48:04 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:48:06 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:48:06 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:48:06 register.go:38: calling Answer manager
TRACE: 2017/03/15 03:48:06 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:48:06 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:48:07 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:48:07 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:48:07 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:48:07 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:48:07 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:48:07 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:48:10 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:48:11 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:48:11 register.go:38: calling Answer manager
TRACE: 2017/03/15 03:48:11 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:48:11 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:48:11 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:48:11 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:48:11 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:48:14 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:48:14 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:48:14 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:48:15 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:48:17 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:48:17 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:48:17 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:48:18 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:48:18 register.go:38: calling Answer manager
TRACE: 2017/03/15 03:48:18 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:48:18 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:48:21 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:48:21 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:48:21 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:48:22 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:48:22 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:48:22 register.go:38: calling Answer manager
TRACE: 2017/03/15 03:48:22 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:48:22 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:48:23 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:48:23 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:48:23 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:48:23 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:48:23 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:48:23 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:48:25 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:48:27 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:48:27 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:48:27 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:50:07 register.go:68: calling Question manager
TRACE: 2017/03/15 03:50:10 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 03:50:17 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:50:17 register.go:38: calling Answer manager
TRACE: 2017/03/15 03:50:17 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:50:17 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:50:18 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:50:18 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:50:18 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:50:19 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:50:20 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:50:20 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:50:20 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:53:39 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:53:39 register.go:38: calling Answer manager
TRACE: 2017/03/15 03:53:39 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:53:39 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:53:40 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:53:40 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:53:40 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:53:42 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:53:44 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:53:44 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:53:44 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:53:59 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:53:59 register.go:38: calling Answer manager
TRACE: 2017/03/15 03:53:59 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:53:59 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:54:01 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:54:01 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:54:01 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:54:02 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:54:03 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:54:03 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:54:03 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:59:09 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:59:09 register.go:38: calling Answer manager
TRACE: 2017/03/15 03:59:09 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:59:09 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:59:12 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:59:12 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:59:12 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:59:13 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:59:14 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:59:14 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:59:14 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:59:34 register.go:68: calling Question manager
TRACE: 2017/03/15 03:59:35 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 03:59:44 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:59:44 register.go:38: calling Answer manager
TRACE: 2017/03/15 03:59:44 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 03:59:44 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:59:50 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:59:50 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:59:50 register.go:50: actual vs correct  
TRACE: 2017/03/15 03:59:51 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 03:59:52 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 03:59:52 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 03:59:52 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:00:34 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:00:34 register.go:38: calling Answer manager
TRACE: 2017/03/15 04:00:34 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:00:34 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:00:36 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:00:36 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:00:36 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:00:37 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:00:38 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:00:38 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:00:38 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:00:57 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:00:57 register.go:38: calling Answer manager
TRACE: 2017/03/15 04:00:57 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:00:57 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:00:59 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:00:59 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:00:59 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:01:00 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:01:02 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:01:02 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:01:02 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:01:15 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:01:15 register.go:38: calling Answer manager
TRACE: 2017/03/15 04:01:15 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:01:15 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:01:17 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:01:17 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:01:17 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:01:17 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:01:19 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:01:19 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:01:19 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:04:07 register.go:68: calling Question manager
TRACE: 2017/03/15 04:04:09 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 04:04:17 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:04:17 register.go:38: calling Answer manager
TRACE: 2017/03/15 04:04:17 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:04:17 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:04:18 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:04:18 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:04:18 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:04:21 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:04:23 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:04:23 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:04:23 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:05:03 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:05:03 register.go:38: calling Answer manager
TRACE: 2017/03/15 04:05:03 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:05:03 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:05:04 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:05:04 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:05:04 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:05:05 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:05:06 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:05:06 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:05:06 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:05:12 register.go:68: calling Question manager
TRACE: 2017/03/15 04:05:14 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 04:05:25 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:05:25 register.go:38: calling Answer manager
TRACE: 2017/03/15 04:05:25 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:05:25 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:05:27 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:05:27 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:05:27 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:05:28 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:05:29 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:05:29 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:05:29 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:06:13 register.go:23: calling register manager
TRACE: 2017/03/15 04:06:13 userimpl.go:16: Fname:  xd
TRACE: 2017/03/15 04:06:13 userimpl.go:17: Lname:  xd
TRACE: 2017/03/15 04:06:13 userimpl.go:18: phone:  1223455667
TRACE: 2017/03/15 04:06:13 userimpl.go:19: email:  shraddhakharat26@gmail.com
TRACE: 2017/03/15 04:06:15 register.go:32: 118
TRACE: 2017/03/15 04:06:20 register.go:68: calling Question manager
TRACE: 2017/03/15 04:06:22 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 04:06:27 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:06:27 register.go:38: calling Answer manager
TRACE: 2017/03/15 04:06:27 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:06:27 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:06:28 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:06:28 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:06:28 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:06:30 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:06:31 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:06:31 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:06:31 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:11:07 register.go:68: calling Question manager
TRACE: 2017/03/15 04:11:08 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 04:11:11 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 04:11:11 register.go:38: calling Answer manager
TRACE: 2017/03/15 04:11:11 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 04:11:11 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:11:12 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:11:12 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:11:12 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:11:14 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:11:15 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:11:15 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:11:15 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:12:17 register.go:68: calling Question manager
TRACE: 2017/03/15 04:12:19 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 04:12:35 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:12:35 register.go:38: calling Answer manager
TRACE: 2017/03/15 04:12:35 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:12:35 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:12:36 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:12:36 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:12:36 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:12:37 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:12:39 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:12:39 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:12:39 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:13:44 register.go:68: calling Question manager
TRACE: 2017/03/15 04:13:45 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 04:13:59 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:13:59 register.go:38: calling Answer manager
TRACE: 2017/03/15 04:13:59 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:13:59 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:14:00 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:14:00 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:14:00 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:14:01 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:14:02 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:14:02 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:14:02 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:17:39 register.go:23: calling register manager
TRACE: 2017/03/15 04:17:39 userimpl.go:16: Fname:  g
TRACE: 2017/03/15 04:17:39 userimpl.go:17: Lname:  g
TRACE: 2017/03/15 04:17:39 userimpl.go:18: phone:  12313234232
TRACE: 2017/03/15 04:17:39 userimpl.go:19: email:  shraddha.kharat@rapidqube.com
TRACE: 2017/03/15 04:17:42 register.go:32: 119
TRACE: 2017/03/15 04:17:47 register.go:68: calling Question manager
TRACE: 2017/03/15 04:17:49 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 04:17:55 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:17:55 register.go:38: calling Answer manager
TRACE: 2017/03/15 04:17:55 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 04:17:55 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:17:57 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:17:57 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:17:57 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:17:58 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:17:59 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:17:59 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:17:59 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:22:47 register.go:68: calling Question manager
TRACE: 2017/03/15 04:22:48 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 04:22:54 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 04:22:54 register.go:38: calling Answer manager
TRACE: 2017/03/15 04:22:54 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 04:22:54 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:22:56 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:22:56 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:22:56 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:22:57 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:22:58 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:22:58 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:22:58 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:25:01 register.go:68: calling Question manager
TRACE: 2017/03/15 04:25:03 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 04:25:59 register.go:68: calling Question manager
TRACE: 2017/03/15 04:26:00 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()}]
TRACE: 2017/03/15 04:26:13 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 04:26:13 register.go:38: calling Answer manager
TRACE: 2017/03/15 04:26:13 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 04:26:13 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:26:15 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:26:15 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:26:15 register.go:50: actual vs correct  
TRACE: 2017/03/15 04:26:16 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 04:26:17 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 04:26:17 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 04:26:17 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:01:15 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/15 05:01:15 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/15 05:01:15 debug.go:45: [GIN-debug] POST   /userAnswer               --> OnlineTestGo/webservice.AnswerList (3 handlers)
TRACE: 2017/03/15 05:01:15 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/15 05:01:15 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/15 05:01:15 main.go:35: First log message!
TRACE: 2017/03/15 05:01:15 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/15 05:01:26 register.go:68: calling Question manager
TRACE: 2017/03/15 05:01:27 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 05:01:43 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:01:43 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:01:43 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:01:43 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:01:44 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:01:44 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:01:44 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:01:45 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:01:46 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:01:46 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:01:46 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:02:29 register.go:68: calling Question manager
TRACE: 2017/03/15 05:02:31 questionimpl.go:42: totalquestions: [{5 to be badgered is to be flattered} {5 to be badgered is to be tormented} {5 to be badgered is to be made angry} {5 to be badgered is to be null} {6 if you were inundated with work you would be very busy} {6 if you were inundated with work you would be not busy} {6 if you were inundated with work you would be irritated} {6 if you were inundated with work you would be null}]
TRACE: 2017/03/15 05:02:39 register.go:68: calling Question manager
TRACE: 2017/03/15 05:02:40 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 05:03:19 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:03:19 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:03:19 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:03:19 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:03:21 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:03:21 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:03:21 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:03:21 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:03:23 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:03:23 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:03:23 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:04:48 register.go:68: calling Question manager
TRACE: 2017/03/15 05:04:49 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 05:04:57 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:04:57 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:04:57 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:04:57 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:04:59 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:04:59 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:04:59 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:04:59 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:05:01 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:05:01 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:05:01 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:13:20 register.go:68: calling Question manager
TRACE: 2017/03/15 05:13:21 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 05:13:28 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:13:28 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:13:28 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:13:28 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:13:30 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:13:30 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:13:30 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:13:30 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:13:32 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:13:32 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:13:32 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:14:28 register.go:68: calling Question manager
TRACE: 2017/03/15 05:14:30 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()}]
TRACE: 2017/03/15 05:14:39 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:14:39 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:14:39 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:14:39 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:14:46 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:14:46 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:14:46 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:14:47 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:14:48 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:14:48 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:14:48 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:16:23 register.go:68: calling Question manager
TRACE: 2017/03/15 05:16:24 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 05:16:36 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:16:36 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:16:36 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:16:36 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:16:37 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:16:37 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:16:37 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:16:38 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:16:39 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:16:39 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:16:39 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:17:14 register.go:68: calling Question manager
TRACE: 2017/03/15 05:17:15 questionimpl.go:42: totalquestions: [{5 to be badgered is to be flattered} {5 to be badgered is to be tormented} {5 to be badgered is to be made angry} {5 to be badgered is to be null} {6 if you were inundated with work you would be very busy} {6 if you were inundated with work you would be not busy} {6 if you were inundated with work you would be irritated} {6 if you were inundated with work you would be null}]
TRACE: 2017/03/15 05:17:24 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:17:24 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:17:24 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:17:24 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:17:25 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:17:25 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:17:25 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:17:26 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:17:27 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:17:27 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:17:27 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:19:31 register.go:68: calling Question manager
TRACE: 2017/03/15 05:19:34 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()}]
TRACE: 2017/03/15 05:19:44 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:19:44 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:19:44 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:19:44 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:19:46 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:19:46 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:19:46 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:19:47 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:19:49 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:19:49 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:19:49 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:20:32 register.go:68: calling Question manager
TRACE: 2017/03/15 05:20:34 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()}]
TRACE: 2017/03/15 05:21:31 register.go:68: calling Question manager
TRACE: 2017/03/15 05:21:32 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 05:21:44 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:21:44 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:21:44 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:21:44 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:21:46 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:21:46 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:21:46 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:21:47 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:21:48 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:21:48 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:21:48 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:24:12 register.go:68: calling Question manager
TRACE: 2017/03/15 05:24:14 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()}]
TRACE: 2017/03/15 05:24:22 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:24:22 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:24:22 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:24:22 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:24:23 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:24:23 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:24:23 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:24:24 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:24:25 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:24:25 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:24:25 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:24:52 register.go:68: calling Question manager
TRACE: 2017/03/15 05:24:53 questionimpl.go:42: totalquestions: [{5 to be badgered is to be flattered} {5 to be badgered is to be tormented} {5 to be badgered is to be made angry} {5 to be badgered is to be null} {6 if you were inundated with work you would be very busy} {6 if you were inundated with work you would be not busy} {6 if you were inundated with work you would be irritated} {6 if you were inundated with work you would be null}]
TRACE: 2017/03/15 05:25:01 webservice.go:38: [{24 0 } {24 0 }]
TRACE: 2017/03/15 05:25:01 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:25:01 register.go:44: aanswerList [{24 0 } {24 0 }]
TRACE: 2017/03/15 05:25:01 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:25:02 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:25:02 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:25:02 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:25:03 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:25:04 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:25:04 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:25:04 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:26:08 register.go:68: calling Question manager
TRACE: 2017/03/15 05:26:09 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()}]
TRACE: 2017/03/15 05:26:21 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:26:21 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:26:21 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:26:21 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:26:22 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:26:22 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:26:22 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:26:23 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:26:23 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:26:23 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:26:23 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:30:23 register.go:68: calling Question manager
TRACE: 2017/03/15 05:30:25 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()}]
TRACE: 2017/03/15 05:30:35 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:30:35 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:30:35 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:30:35 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:30:37 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:30:37 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:30:37 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:30:38 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:30:39 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:30:39 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:30:39 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:31:21 register.go:68: calling Question manager
TRACE: 2017/03/15 05:31:22 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 05:31:30 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:31:30 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:31:30 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:31:30 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:31:34 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:31:34 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:31:34 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:31:35 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:31:36 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:31:36 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:31:36 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:39:50 register.go:68: calling Question manager
TRACE: 2017/03/15 05:39:52 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/15 05:40:00 webservice.go:38: [{0 0 } {0 0 } {0 0 }]
TRACE: 2017/03/15 05:40:00 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:40:00 register.go:44: aanswerList [{0 0 } {0 0 } {0 0 }]
TRACE: 2017/03/15 05:40:00 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:40:02 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:40:02 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:40:02 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:40:03 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:40:04 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:40:04 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:40:04 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:40:05 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:40:06 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:40:06 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:40:06 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:42:11 register.go:68: calling Question manager
TRACE: 2017/03/15 05:42:14 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/15 05:42:26 webservice.go:38: [{0 0 } {0 0 } {0 0 }]
TRACE: 2017/03/15 05:42:26 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:42:26 register.go:44: aanswerList [{0 0 } {0 0 } {0 0 }]
TRACE: 2017/03/15 05:42:26 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:42:28 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:42:28 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:42:28 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:42:29 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:42:30 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:42:30 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:42:30 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:42:32 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:42:33 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:42:33 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:42:33 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:46:17 register.go:68: calling Question manager
TRACE: 2017/03/15 05:46:19 questionimpl.go:42: totalquestions: [{5 to be badgered is to be flattered} {5 to be badgered is to be tormented} {5 to be badgered is to be made angry} {5 to be badgered is to be null} {6 if you were inundated with work you would be very busy} {6 if you were inundated with work you would be not busy} {6 if you were inundated with work you would be irritated} {6 if you were inundated with work you would be null}]
TRACE: 2017/03/15 05:46:35 register.go:23: calling register manager
TRACE: 2017/03/15 05:46:35 userimpl.go:16: Fname:  j
TRACE: 2017/03/15 05:46:35 userimpl.go:17: Lname:  u
TRACE: 2017/03/15 05:46:35 userimpl.go:18: phone:  1234556567
TRACE: 2017/03/15 05:46:35 userimpl.go:19: email:  shraddha.kharat@rapidqube.com
TRACE: 2017/03/15 05:46:37 register.go:32: 120
TRACE: 2017/03/15 05:46:42 register.go:68: calling Question manager
TRACE: 2017/03/15 05:46:43 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 05:46:54 webservice.go:38: [{120 0 } {120 0 }]
TRACE: 2017/03/15 05:46:54 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:46:54 register.go:44: aanswerList [{120 0 } {120 0 }]
TRACE: 2017/03/15 05:46:54 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:46:57 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:46:57 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:46:57 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:46:58 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:47:00 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:47:00 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:47:00 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:49:10 register.go:68: calling Question manager
TRACE: 2017/03/15 05:49:11 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/15 05:51:07 register.go:68: calling Question manager
TRACE: 2017/03/15 05:51:08 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/15 05:51:15 webservice.go:38: [{0 0 } {0 0 } {0 0 }]
TRACE: 2017/03/15 05:51:15 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:51:15 register.go:44: aanswerList [{0 0 } {0 0 } {0 0 }]
TRACE: 2017/03/15 05:51:15 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:51:17 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:51:17 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:51:17 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:51:18 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:51:20 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:51:20 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:51:20 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:51:20 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:51:21 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:51:21 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:51:21 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:51:41 register.go:68: calling Question manager
TRACE: 2017/03/15 05:51:42 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/15 05:51:50 webservice.go:38: [{0 0 } {0 0 } {0 0 }]
TRACE: 2017/03/15 05:51:50 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:51:50 register.go:44: aanswerList [{0 0 } {0 0 } {0 0 }]
TRACE: 2017/03/15 05:51:50 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:51:51 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:51:51 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:51:51 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:51:52 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:51:53 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:51:53 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:51:53 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:51:53 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:51:54 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:51:54 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:51:54 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:55:51 register.go:68: calling Question manager
TRACE: 2017/03/15 05:55:52 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 05:55:58 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:55:58 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:55:58 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 05:55:58 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:55:59 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:55:59 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:55:59 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:56:00 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:56:01 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:56:01 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:56:01 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:56:28 register.go:23: calling register manager
TRACE: 2017/03/15 05:56:28 userimpl.go:16: Fname:  f
TRACE: 2017/03/15 05:56:28 userimpl.go:17: Lname:  f
TRACE: 2017/03/15 05:56:28 userimpl.go:18: phone:  1344556777
TRACE: 2017/03/15 05:56:28 userimpl.go:19: email:  shraddha.kharat@rapidqube.com
TRACE: 2017/03/15 05:56:29 register.go:32: 121
TRACE: 2017/03/15 05:56:33 register.go:68: calling Question manager
TRACE: 2017/03/15 05:56:35 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/15 05:57:24 register.go:23: calling register manager
TRACE: 2017/03/15 05:57:24 userimpl.go:16: Fname:  r
TRACE: 2017/03/15 05:57:24 userimpl.go:17: Lname:  g
TRACE: 2017/03/15 05:57:24 userimpl.go:18: phone:  5456767888
TRACE: 2017/03/15 05:57:24 userimpl.go:19: email:  shraddha.kharat@rapidqube.com
TRACE: 2017/03/15 05:57:27 register.go:32: 122
TRACE: 2017/03/15 05:57:34 register.go:68: calling Question manager
TRACE: 2017/03/15 05:57:36 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 05:57:48 webservice.go:38: [{122 0 } {122 0 }]
TRACE: 2017/03/15 05:57:48 register.go:38: calling Answer manager
TRACE: 2017/03/15 05:57:48 register.go:44: aanswerList [{122 0 } {122 0 }]
TRACE: 2017/03/15 05:57:48 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:57:51 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:57:51 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:57:51 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:57:51 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 05:57:53 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 05:57:53 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 05:57:53 register.go:50: actual vs correct  
TRACE: 2017/03/15 05:59:56 register.go:68: calling Question manager
TRACE: 2017/03/15 05:59:58 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 06:00:04 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 06:00:04 register.go:38: calling Answer manager
TRACE: 2017/03/15 06:00:04 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 06:00:04 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 06:00:06 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 06:00:06 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 06:00:06 register.go:50: actual vs correct  
TRACE: 2017/03/15 06:00:07 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 06:00:08 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 06:00:08 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 06:00:08 register.go:50: actual vs correct  
TRACE: 2017/03/15 06:02:01 register.go:23: calling register manager
TRACE: 2017/03/15 06:02:01 userimpl.go:16: Fname:  h
TRACE: 2017/03/15 06:02:01 userimpl.go:17: Lname:  h
TRACE: 2017/03/15 06:02:01 userimpl.go:18: phone:  6566677888
TRACE: 2017/03/15 06:02:01 userimpl.go:19: email:  shraddha.kharat@rapidqube.com
TRACE: 2017/03/15 06:02:02 register.go:32: 123
TRACE: 2017/03/15 06:02:08 register.go:68: calling Question manager
TRACE: 2017/03/15 06:02:10 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/15 06:02:17 webservice.go:38: [{123 0 } {123 0 } {123 0 }]
TRACE: 2017/03/15 06:02:17 register.go:38: calling Answer manager
TRACE: 2017/03/15 06:02:17 register.go:44: aanswerList [{123 0 } {123 0 } {123 0 }]
TRACE: 2017/03/15 06:02:17 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 06:02:18 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 06:02:18 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 06:02:18 register.go:50: actual vs correct  
TRACE: 2017/03/15 06:02:19 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 06:02:20 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 06:02:20 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 06:02:20 register.go:50: actual vs correct  
TRACE: 2017/03/15 06:02:22 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 06:02:23 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 06:02:23 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 06:02:23 register.go:50: actual vs correct  
TRACE: 2017/03/15 06:14:34 register.go:23: calling register manager
TRACE: 2017/03/15 06:14:34 userimpl.go:16: Fname:  sqw
TRACE: 2017/03/15 06:14:34 userimpl.go:17: Lname:  gasgj
TRACE: 2017/03/15 06:14:34 userimpl.go:18: phone:  1234567890
TRACE: 2017/03/15 06:14:34 userimpl.go:19: email:  shraddhakharat26@gmail.com
TRACE: 2017/03/15 06:14:36 register.go:32: 124
TRACE: 2017/03/15 06:14:42 register.go:68: calling Question manager
TRACE: 2017/03/15 06:14:43 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 06:15:17 register.go:68: calling Question manager
TRACE: 2017/03/15 06:15:18 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/15 06:16:03 register.go:68: calling Question manager
TRACE: 2017/03/15 06:16:04 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/15 06:16:38 webservice.go:38: [{0 0 } {0 0 }]
TRACE: 2017/03/15 06:16:38 register.go:38: calling Answer manager
TRACE: 2017/03/15 06:16:38 register.go:44: aanswerList [{0 0 } {0 0 }]
TRACE: 2017/03/15 06:16:38 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 06:16:39 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 06:16:39 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 06:16:39 register.go:50: actual vs correct  
TRACE: 2017/03/15 06:16:40 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 06:16:41 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 06:16:41 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 06:16:41 register.go:50: actual vs correct  
TRACE: 2017/03/15 06:23:21 register.go:23: calling register manager
TRACE: 2017/03/15 06:23:21 userimpl.go:16: Fname:  yh
TRACE: 2017/03/15 06:23:21 userimpl.go:17: Lname:  h
TRACE: 2017/03/15 06:23:21 userimpl.go:18: phone:  2435456466
TRACE: 2017/03/15 06:23:21 userimpl.go:19: email:  shraddhakharat26@gmail.com
TRACE: 2017/03/15 06:23:22 register.go:32: 125
TRACE: 2017/03/15 06:23:27 register.go:68: calling Question manager
TRACE: 2017/03/15 06:23:29 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/15 06:23:41 webservice.go:38: [{125 0 finally} {125 0 runThread()} {125 0 abstract}]
TRACE: 2017/03/15 06:23:41 register.go:38: calling Answer manager
TRACE: 2017/03/15 06:23:41 register.go:44: aanswerList [{125 0 finally} {125 0 runThread()} {125 0 abstract}]
TRACE: 2017/03/15 06:23:41 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 06:23:43 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 06:23:43 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 06:23:43 register.go:50: actual vs correct finally 
TRACE: 2017/03/15 06:23:43 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 06:23:44 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 06:23:44 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 06:23:44 register.go:50: actual vs correct runThread() 
TRACE: 2017/03/15 06:23:44 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 06:23:45 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 06:23:45 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 06:23:45 register.go:50: actual vs correct abstract 
TRACE: 2017/03/15 06:24:10 register.go:23: calling register manager
TRACE: 2017/03/15 06:24:10 userimpl.go:16: Fname:  h
TRACE: 2017/03/15 06:24:10 userimpl.go:17: Lname:  h
TRACE: 2017/03/15 06:24:10 userimpl.go:18: phone:  2122222222
TRACE: 2017/03/15 06:24:10 userimpl.go:19: email:  shraddha.kharat@rapidqube.com
TRACE: 2017/03/15 06:24:11 register.go:32: 126
TRACE: 2017/03/15 06:24:17 register.go:68: calling Question manager
TRACE: 2017/03/15 06:24:18 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/15 06:24:37 webservice.go:38: [{126 0 default handler} {126 0 start()} {126 0 catch}]
TRACE: 2017/03/15 06:24:37 register.go:38: calling Answer manager
TRACE: 2017/03/15 06:24:37 register.go:44: aanswerList [{126 0 default handler} {126 0 start()} {126 0 catch}]
TRACE: 2017/03/15 06:24:37 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 06:24:39 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 06:24:39 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 06:24:39 register.go:50: actual vs correct default handler 
TRACE: 2017/03/15 06:24:39 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 06:24:45 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 06:24:45 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 06:24:45 register.go:50: actual vs correct start() 
TRACE: 2017/03/15 06:24:45 register.go:47: Fetching the right answer...
TRACE: 2017/03/15 06:24:47 questionimpl.go:87: No rows with that ID.
TRACE: 2017/03/15 06:24:47 questionimpl.go:94: correct Answer fir ID 0 
TRACE: 2017/03/15 06:24:47 register.go:50: actual vs correct catch 
TRACE: 2017/03/15 09:10:57 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/15 09:10:57 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/15 09:10:57 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/15 09:10:57 main.go:37: First log message!
TRACE: 2017/03/15 09:10:57 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/15 09:19:13 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/15 09:19:13 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/15 09:19:13 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/15 09:19:13 main.go:37: First log message!
TRACE: 2017/03/15 09:19:13 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/15 09:25:59 register.go:79: calling register manager
TRACE: 2017/03/15 09:26:01 register.go:86: error occured Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ' INSERT INTO questions ( question,type)VALUES(?,?),INSERT INTO Options (qid,choi' at line 1
TRACE: 2017/03/15 09:26:01 register.go:88: 0
TRACE: 2017/03/15 09:26:01 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/15 09:28:18 register.go:79: calling register manager
TRACE: 2017/03/15 09:28:19 register.go:86: error occured Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ' INSERT INTO questions ( question,type)VALUES(?,?),INSERT INTO Options (qid,choi' at line 1
TRACE: 2017/03/15 09:28:19 register.go:88: 0
TRACE: 2017/03/15 09:28:19 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/15 09:32:00 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/15 09:32:00 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/15 09:32:00 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/15 09:32:00 main.go:37: First log message!
TRACE: 2017/03/15 09:32:00 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/15 09:32:08 register.go:79: calling register manager
TRACE: 2017/03/15 09:32:10 register.go:86: error occured Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INSERT INTO questions ( question,type) VALUES(?,?);INSERT INTO Options (qid,choi' at line 1
TRACE: 2017/03/15 09:32:10 register.go:88: 0
TRACE: 2017/03/15 09:32:10 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/15 11:12:28 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/15 11:12:28 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/15 11:12:28 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/15 11:12:28 main.go:37: First log message!
TRACE: 2017/03/15 11:12:28 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/15 11:12:31 register.go:79: calling register manager
TRACE: 2017/03/15 11:12:34 register.go:86: error occured Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INSERT INTO questions ( question,type) VALUES(?,?);INSERT INTO Options (qid,choi' at line 1
TRACE: 2017/03/15 11:12:34 register.go:88: 0
TRACE: 2017/03/15 11:12:34 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 03:56:12 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 03:56:12 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 03:56:12 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 03:56:12 main.go:37: First log message!
TRACE: 2017/03/16 03:56:12 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 03:56:42 register.go:79: calling addquestion manager
TRACE: 2017/03/16 03:56:44 questionimpl.go:119: 42
TRACE: 2017/03/16 03:56:44 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 03:56:44 register.go:93: calling register manager
TRACE: 2017/03/16 03:56:45 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 200 with 500
TRACE: 2017/03/16 04:01:10 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 04:01:10 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 04:01:10 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 04:01:10 main.go:37: First log message!
TRACE: 2017/03/16 04:01:10 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 04:02:15 register.go:79: calling addquestion manager
TRACE: 2017/03/16 04:02:17 questionimpl.go:119: 43
TRACE: 2017/03/16 04:02:17 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 04:02:17 register.go:93: calling register manager
TRACE: 2017/03/16 04:02:19 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 200 with 500
TRACE: 2017/03/16 04:09:44 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 04:09:44 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 04:09:44 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 04:09:44 main.go:37: First log message!
TRACE: 2017/03/16 04:09:44 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 04:11:31 register.go:79: calling addquestion manager
TRACE: 2017/03/16 04:11:34 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 500
TRACE: 2017/03/16 04:11:48 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 04:11:48 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 04:11:48 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 04:11:48 main.go:37: First log message!
TRACE: 2017/03/16 04:11:48 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 04:12:36 register.go:79: calling addquestion manager
TRACE: 2017/03/16 04:12:37 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 500
TRACE: 2017/03/16 04:17:45 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 04:17:45 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 04:17:45 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 04:17:45 main.go:37: First log message!
TRACE: 2017/03/16 04:17:45 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 04:17:57 register.go:79: calling addquestion manager
TRACE: 2017/03/16 04:17:58 questionimpl.go:119: 44
TRACE: 2017/03/16 04:17:58 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 04:17:58 register.go:93: calling register manager
TRACE: 2017/03/16 04:17:59 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 200 with 500
TRACE: 2017/03/16 04:18:50 register.go:79: calling addquestion manager
TRACE: 2017/03/16 04:18:51 questionimpl.go:119: 45
TRACE: 2017/03/16 04:18:51 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 04:18:51 register.go:93: calling register manager
TRACE: 2017/03/16 04:18:53 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 200 with 500
TRACE: 2017/03/16 04:52:29 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 04:52:29 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 04:52:29 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 04:52:29 main.go:37: First log message!
TRACE: 2017/03/16 04:52:29 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 04:56:13 register.go:79: calling addquestion manager
TRACE: 2017/03/16 04:56:13 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 04:56:14 questionimpl.go:115: {0xc420186bd0 0xc42019e140}
TRACE: 2017/03/16 04:56:14 questionimpl.go:120: 48
TRACE: 2017/03/16 04:56:14 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 04:56:14 register.go:93: calling register manager
TRACE: 2017/03/16 04:56:14 questionimpl.go:128: calling addoption function
TRACE: 2017/03/16 04:56:16 questionimpl.go:141: <nil>
TRACE: 2017/03/16 04:56:16 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 200 with 500
TRACE: 2017/03/16 05:08:57 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 05:08:57 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 05:08:57 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 05:08:57 main.go:37: First log message!
TRACE: 2017/03/16 05:08:57 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 05:09:03 register.go:79: calling addquestion manager
TRACE: 2017/03/16 05:09:03 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 05:09:06 questionimpl.go:115: {0xc420186bd0 0xc42019e130}
TRACE: 2017/03/16 05:09:06 questionimpl.go:120: 49
TRACE: 2017/03/16 05:09:06 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 05:09:06 register.go:93: calling register manager
TRACE: 2017/03/16 05:09:06 questionimpl.go:128: calling addoption function
TRACE: 2017/03/16 05:09:07 questionimpl.go:141: <nil>
TRACE: 2017/03/16 05:09:07 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 200 with 500
TRACE: 2017/03/16 05:14:06 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 05:14:06 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 05:14:06 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 05:14:06 main.go:37: First log message!
TRACE: 2017/03/16 05:14:06 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 05:14:51 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 05:14:51 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 05:14:51 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 05:14:51 main.go:37: First log message!
TRACE: 2017/03/16 05:14:51 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 05:14:56 register.go:79: calling addquestion manager
TRACE: 2017/03/16 05:14:56 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 05:14:58 questionimpl.go:115: {0xc420186bd0 0xc42019e110}
TRACE: 2017/03/16 05:14:58 questionimpl.go:120: 50
TRACE: 2017/03/16 05:14:58 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 05:14:58 register.go:93: calling register manager
TRACE: 2017/03/16 05:14:58 questionimpl.go:128: calling addoption function
TRACE: 2017/03/16 05:14:59 questionimpl.go:141: <nil>
TRACE: 2017/03/16 05:14:59 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 200 with 500
TRACE: 2017/03/16 05:20:29 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 05:20:29 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 05:20:29 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 05:20:29 main.go:37: First log message!
TRACE: 2017/03/16 05:20:29 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 05:20:59 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 05:20:59 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 05:20:59 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 05:20:59 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 05:20:59 main.go:37: First log message!
TRACE: 2017/03/16 05:20:59 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 05:21:39 register.go:24: calling register manager
TRACE: 2017/03/16 05:21:39 userimpl.go:16: Fname:  sweta
TRACE: 2017/03/16 05:21:39 userimpl.go:17: Lname:  vahia
TRACE: 2017/03/16 05:21:39 userimpl.go:18: phone:  9898779887
TRACE: 2017/03/16 05:21:39 userimpl.go:19: email:  sweta.vahia@rapidqube.com
TRACE: 2017/03/16 05:21:41 register.go:33: 134
TRACE: 2017/03/16 05:22:40 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 05:22:40 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 05:22:40 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 05:22:40 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 05:22:40 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 05:22:40 main.go:37: First log message!
TRACE: 2017/03/16 05:22:40 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 05:36:02 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 05:36:02 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 05:36:02 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 05:36:02 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 05:36:02 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 05:36:02 main.go:37: First log message!
TRACE: 2017/03/16 05:36:02 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 05:37:13 register.go:71: calling Question manager
TRACE: 2017/03/16 05:37:15 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 05:37:19 register.go:79: calling addquestion manager
TRACE: 2017/03/16 05:37:19 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 05:37:20 questionimpl.go:115: {0xc4201871f0 0xc42019eb50}
TRACE: 2017/03/16 05:37:20 questionimpl.go:120: 51
TRACE: 2017/03/16 05:37:20 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 05:37:20 register.go:93: calling register manager
TRACE: 2017/03/16 05:37:20 questionimpl.go:128: calling addoption function
TRACE: 2017/03/16 05:37:22 questionimpl.go:141: <nil>
TRACE: 2017/03/16 05:37:22 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 200 with 500
TRACE: 2017/03/16 05:50:31 register.go:71: calling Question manager
TRACE: 2017/03/16 05:50:32 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 06:07:22 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 06:07:22 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 06:07:22 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 06:07:22 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 06:07:22 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 06:07:22 main.go:37: First log message!
TRACE: 2017/03/16 06:07:22 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 06:07:26 register.go:79: calling addquestion manager
TRACE: 2017/03/16 06:07:26 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 06:07:27 questionimpl.go:115: {0xc420186cb0 0xc42019e210}
TRACE: 2017/03/16 06:07:27 questionimpl.go:120: 52
TRACE: 2017/03/16 06:07:27 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 06:07:27 register.go:93: calling register manager
TRACE: 2017/03/16 06:07:27 questionimpl.go:128: calling addoption function
TRACE: 2017/03/16 06:07:27 questionimpl.go:130: after query execution
TRACE: 2017/03/16 06:07:29 questionimpl.go:141: <nil>
TRACE: 2017/03/16 06:07:29 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 200 with 500
TRACE: 2017/03/16 06:09:46 register.go:71: calling Question manager
TRACE: 2017/03/16 06:09:48 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/16 06:10:12 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 06:10:12 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 06:10:12 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 06:10:12 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 06:10:12 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 06:10:12 main.go:37: First log message!
TRACE: 2017/03/16 06:10:12 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 06:10:15 register.go:79: calling addquestion manager
TRACE: 2017/03/16 06:10:15 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 06:10:16 questionimpl.go:115: {0xc420186cb0 0xc42019e220}
TRACE: 2017/03/16 06:10:16 questionimpl.go:120: 53
TRACE: 2017/03/16 06:10:16 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 06:10:16 register.go:93: calling register manager
TRACE: 2017/03/16 06:10:16 questionimpl.go:128: calling addoption function
TRACE: 2017/03/16 06:10:16 questionimpl.go:130: after query execution
TRACE: 2017/03/16 06:10:17 questionimpl.go:141: <nil>
TRACE: 2017/03/16 06:10:17 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 200 with 500
TRACE: 2017/03/16 06:11:37 register.go:71: calling Question manager
TRACE: 2017/03/16 06:11:38 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 06:14:03 register.go:71: calling Question manager
TRACE: 2017/03/16 06:14:05 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 06:15:15 register.go:71: calling Question manager
TRACE: 2017/03/16 06:15:17 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 06:16:24 register.go:71: calling Question manager
TRACE: 2017/03/16 06:16:24 questionimpl.go:27: dial tcp 85.10.205.173:3306: getsockopt: connection refused
TRACE: 2017/03/16 06:16:47 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 06:16:47 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 06:16:47 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 06:16:47 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 06:16:47 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 06:16:47 main.go:37: First log message!
TRACE: 2017/03/16 06:16:47 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 06:17:02 register.go:71: calling Question manager
TRACE: 2017/03/16 06:17:02 questionimpl.go:27: dial tcp 85.10.205.173:3306: getsockopt: connection refused
TRACE: 2017/03/16 06:54:15 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 06:54:15 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 06:54:15 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 06:54:15 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 06:54:15 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 06:54:15 main.go:37: First log message!
TRACE: 2017/03/16 06:54:15 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 06:54:22 register.go:79: calling addquestion manager
TRACE: 2017/03/16 06:54:22 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 06:55:10 register.go:79: calling addquestion manager
TRACE: 2017/03/16 06:55:10 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 06:57:18 register.go:87: error occured dial tcp 85.10.205.173:3306: getsockopt: connection timed out
TRACE: 2017/03/16 06:57:18 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 06:57:18 register.go:93: calling register manager
TRACE: 2017/03/16 06:57:18 questionimpl.go:128: calling addoption function
TRACE: 2017/03/16 06:57:18 questionimpl.go:130: after query execution
TRACE: 2017/03/16 06:59:25 register.go:100: error occured dial tcp 85.10.205.173:3306: getsockopt: connection timed out
TRACE: 2017/03/16 06:59:25 register.go:102: 0
TRACE: 2017/03/16 07:09:02 register.go:79: calling addquestion manager
TRACE: 2017/03/16 07:09:02 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 07:11:11 register.go:87: error occured dial tcp 85.10.205.173:3306: getsockopt: connection timed out
TRACE: 2017/03/16 07:11:11 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 07:11:11 register.go:93: calling register manager
TRACE: 2017/03/16 07:11:11 questionimpl.go:128: calling addoption function
TRACE: 2017/03/16 07:11:11 questionimpl.go:130: after query execution
TRACE: 2017/03/16 07:28:20 register.go:71: calling Question manager
TRACE: 2017/03/16 07:28:21 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/16 07:37:58 register.go:71: calling Question manager
TRACE: 2017/03/16 07:38:00 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 07:51:00 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 07:51:00 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 07:51:00 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 07:51:00 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 07:51:00 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 07:51:00 main.go:37: First log message!
TRACE: 2017/03/16 07:51:00 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 07:51:25 register.go:79: calling addquestion manager
TRACE: 2017/03/16 07:51:25 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 07:51:27 register.go:87: error occured Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SELECT LAST_INSERT_ID() INTO @questions;insert into Options(qid,choices,answers)' at line 1
TRACE: 2017/03/16 07:51:27 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 08:51:06 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 08:51:06 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 08:51:06 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 08:51:06 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 08:51:06 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 08:51:06 main.go:37: First log message!
TRACE: 2017/03/16 08:51:06 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 08:51:38 register.go:79: calling addquestion manager
TRACE: 2017/03/16 08:51:38 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 08:51:39 register.go:87: error occured Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SELECT LAST_INSERT_ID() INTO @questions;insert into Options(qid,choices,answers)' at line 1
TRACE: 2017/03/16 08:51:39 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 09:00:18 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 09:00:18 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 09:00:18 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 09:00:18 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 09:00:18 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 09:00:18 main.go:37: First log message!
TRACE: 2017/03/16 09:00:18 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 09:00:28 register.go:79: calling addquestion manager
TRACE: 2017/03/16 09:00:28 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 09:00:30 register.go:87: error occured Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'insert into Options(qid,choices,answers) values((select max(id) from questions),' at line 1
TRACE: 2017/03/16 09:00:30 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 09:04:31 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 09:04:31 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 09:04:31 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 09:04:31 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 09:04:31 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 09:04:31 main.go:37: First log message!
TRACE: 2017/03/16 09:04:31 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 09:06:29 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 09:06:29 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 09:06:29 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 09:06:29 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 09:06:29 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 09:06:29 main.go:37: First log message!
TRACE: 2017/03/16 09:06:29 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 09:07:43 register.go:71: calling Question manager
TRACE: 2017/03/16 09:07:44 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd}]
TRACE: 2017/03/16 09:11:36 register.go:71: calling Question manager
TRACE: 2017/03/16 09:11:41 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd}]
TRACE: 2017/03/16 09:13:08 register.go:71: calling Question manager
TRACE: 2017/03/16 09:13:09 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd}]
TRACE: 2017/03/16 09:13:25 register.go:71: calling Question manager
TRACE: 2017/03/16 09:13:26 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd}]
TRACE: 2017/03/16 09:17:44 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 09:17:44 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 09:17:44 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 09:17:44 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 09:17:44 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 09:17:44 main.go:37: First log message!
TRACE: 2017/03/16 09:17:44 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 09:32:11 register.go:71: calling Question manager
TRACE: 2017/03/16 09:32:12 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 09:34:23 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 09:34:23 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 09:34:23 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 09:34:23 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 09:34:23 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 09:34:23 main.go:37: First log message!
TRACE: 2017/03/16 09:34:23 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 09:34:28 register.go:79: calling addquestion manager
TRACE: 2017/03/16 09:34:28 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 09:34:28 register.go:87: error occured Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'insert into Options(qid,choices,answers) values((select max(id) from questions),' at line 1
TRACE: 2017/03/16 09:34:28 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 09:38:32 register.go:71: calling Question manager
TRACE: 2017/03/16 09:38:33 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 09:39:48 register.go:71: calling Question manager
TRACE: 2017/03/16 09:39:49 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 09:40:40 register.go:71: calling Question manager
TRACE: 2017/03/16 09:40:41 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 09:46:17 register.go:71: calling Question manager
TRACE: 2017/03/16 09:46:19 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 09:47:08 register.go:71: calling Question manager
TRACE: 2017/03/16 09:47:08 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 09:48:17 register.go:71: calling Question manager
TRACE: 2017/03/16 09:48:19 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 10:02:25 register.go:71: calling Question manager
TRACE: 2017/03/16 10:02:26 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 10:03:44 register.go:71: calling Question manager
TRACE: 2017/03/16 10:03:51 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 10:05:00 register.go:71: calling Question manager
TRACE: 2017/03/16 10:05:08 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 10:06:01 register.go:71: calling Question manager
TRACE: 2017/03/16 10:06:24 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 10:07:25 register.go:71: calling Question manager
TRACE: 2017/03/16 10:07:26 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 10:07:37 register.go:71: calling Question manager
TRACE: 2017/03/16 10:07:38 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 10:08:12 register.go:71: calling Question manager
TRACE: 2017/03/16 10:08:17 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 10:08:22 register.go:71: calling Question manager
TRACE: 2017/03/16 10:08:24 register.go:71: calling Question manager
TRACE: 2017/03/16 10:08:35 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 10:08:35 questionimpl.go:42: totalquestions: [{5 to be badgered is to be flattered} {5 to be badgered is to be tormented} {5 to be badgered is to be made angry} {5 to be badgered is to be null} {6 if you were inundated with work you would be very busy} {6 if you were inundated with work you would be not busy} {6 if you were inundated with work you would be irritated} {6 if you were inundated with work you would be null}]
TRACE: 2017/03/16 10:08:46 register.go:71: calling Question manager
TRACE: 2017/03/16 10:08:49 questionimpl.go:42: totalquestions: [{5 to be badgered is to be flattered} {5 to be badgered is to be tormented} {5 to be badgered is to be made angry} {5 to be badgered is to be null} {6 if you were inundated with work you would be very busy} {6 if you were inundated with work you would be not busy} {6 if you were inundated with work you would be irritated} {6 if you were inundated with work you would be null}]
TRACE: 2017/03/16 10:09:02 register.go:71: calling Question manager
TRACE: 2017/03/16 10:09:08 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 10:09:27 register.go:71: calling Question manager
TRACE: 2017/03/16 10:09:33 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 10:10:15 register.go:71: calling Question manager
TRACE: 2017/03/16 10:10:24 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 10:10:48 register.go:71: calling Question manager
TRACE: 2017/03/16 10:10:53 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 10:11:07 register.go:71: calling Question manager
TRACE: 2017/03/16 10:11:10 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 10:11:48 register.go:71: calling Question manager
TRACE: 2017/03/16 10:11:59 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 10:13:10 register.go:71: calling Question manager
TRACE: 2017/03/16 10:13:23 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 10:14:06 register.go:71: calling Question manager
TRACE: 2017/03/16 10:14:20 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 10:17:44 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 10:17:44 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 10:17:44 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 10:17:44 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 10:17:44 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 10:17:44 main.go:37: First log message!
TRACE: 2017/03/16 10:17:44 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 10:24:07 register.go:71: calling Question manager
TRACE: 2017/03/16 10:24:19 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 10:26:40 register.go:71: calling Question manager
TRACE: 2017/03/16 10:26:51 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 10:34:18 register.go:71: calling Question manager
TRACE: 2017/03/16 10:34:20 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 10:38:11 register.go:71: calling Question manager
TRACE: 2017/03/16 10:38:13 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 10:39:17 register.go:71: calling Question manager
TRACE: 2017/03/16 10:39:18 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 10:40:41 register.go:71: calling Question manager
TRACE: 2017/03/16 10:40:43 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 10:47:18 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 10:47:18 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 10:47:18 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 10:47:18 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 10:47:18 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 10:47:18 main.go:37: First log message!
TRACE: 2017/03/16 10:47:18 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 10:47:22 register.go:79: calling addquestion manager
TRACE: 2017/03/16 10:47:22 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 10:48:09 questionimpl.go:115: {0xc420186d90 0xc4201982c0}
TRACE: 2017/03/16 10:48:09 questionimpl.go:120: 17
TRACE: 2017/03/16 10:48:09 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 10:48:09 register.go:93: calling register manager
TRACE: 2017/03/16 10:48:09 questionimpl.go:128: calling addoption function
TRACE: 2017/03/16 10:48:09 questionimpl.go:130: after query execution
TRACE: 2017/03/16 10:48:11 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 200 with 500
TRACE: 2017/03/16 10:49:23 register.go:71: calling Question manager
TRACE: 2017/03/16 10:49:35 register.go:79: calling addquestion manager
TRACE: 2017/03/16 10:49:35 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 10:49:59 questionimpl.go:115: {0xc4201876c0 0xc420199290}
TRACE: 2017/03/16 10:49:59 questionimpl.go:120: 18
TRACE: 2017/03/16 10:49:59 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 10:49:59 register.go:93: calling register manager
TRACE: 2017/03/16 10:49:59 questionimpl.go:128: calling addoption function
TRACE: 2017/03/16 10:49:59 questionimpl.go:130: after query execution
TRACE: 2017/03/16 10:49:59 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 10:50:00 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 200 with 500
TRACE: 2017/03/16 10:52:02 register.go:71: calling Question manager
TRACE: 2017/03/16 10:52:34 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 10:53:09 register.go:71: calling Question manager
TRACE: 2017/03/16 10:53:15 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 10:54:30 register.go:71: calling Question manager
TRACE: 2017/03/16 10:55:21 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this} {12 bbc ab} {12 bbc ac} {12 bbc ad} {12 bbc ae} {13 ccd va} {13 ccd vb} {13 ccd vc} {13 ccd vd} {14 bbc ab} {14 bbc ac} {14 bbc ad} {14 bbc ae} {15 ccd va} {15 ccd vb} {15 ccd vc} {15 ccd vd} {16 ccd va} {16 ccd vb} {16 ccd vc} {16 ccd vd}]
TRACE: 2017/03/16 10:55:35 register.go:71: calling Question manager
TRACE: 2017/03/16 10:56:05 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 10:58:46 register.go:71: calling Question manager
TRACE: 2017/03/16 10:59:12 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 11:00:01 register.go:71: calling Question manager
TRACE: 2017/03/16 11:00:06 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 11:02:16 register.go:71: calling Question manager
TRACE: 2017/03/16 11:02:29 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 11:14:32 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 11:14:32 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 11:14:32 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 11:14:32 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 11:14:32 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 11:14:32 main.go:37: First log message!
TRACE: 2017/03/16 11:14:32 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 11:14:38 register.go:79: calling addquestion manager
TRACE: 2017/03/16 11:14:38 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 11:14:48 questionimpl.go:115: {0xc420186d90 0xc4201982d0}
TRACE: 2017/03/16 11:14:49 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 500
TRACE: 2017/03/16 11:19:04 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 11:19:04 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 11:19:04 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 11:19:04 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 11:19:04 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 11:19:04 main.go:37: First log message!
TRACE: 2017/03/16 11:19:04 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 11:19:55 register.go:93: calling register manager
TRACE: 2017/03/16 11:19:55 questionimpl.go:139: calling addoption function
TRACE: 2017/03/16 11:19:55 questionimpl.go:141: after query execution
TRACE: 2017/03/16 11:20:11 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 500
TRACE: 2017/03/16 11:21:10 register.go:93: calling register manager
TRACE: 2017/03/16 11:21:10 questionimpl.go:139: calling addoption function
TRACE: 2017/03/16 11:21:10 questionimpl.go:141: after query execution
TRACE: 2017/03/16 11:21:23 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 500
TRACE: 2017/03/16 11:27:36 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 11:27:36 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 11:27:36 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 11:27:36 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 11:27:36 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 11:27:36 main.go:37: First log message!
TRACE: 2017/03/16 11:27:36 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 11:28:00 register.go:79: calling addquestion manager
TRACE: 2017/03/16 11:28:00 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 11:28:20 questionimpl.go:115: {0xc420186d90 0xc4201982d0}
TRACE: 2017/03/16 11:28:20 questionimpl.go:121: 20
TRACE: 2017/03/16 11:28:20 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 11:28:20 register.go:93: calling register manager
TRACE: 2017/03/16 11:28:20 questionimpl.go:129: calling addoption function
TRACE: 2017/03/16 11:28:20 questionimpl.go:131: after query execution
TRACE: 2017/03/16 11:28:21 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 200 with 500
TRACE: 2017/03/16 11:38:05 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 11:38:05 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 11:38:05 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 11:38:05 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 11:38:05 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 11:38:05 main.go:37: First log message!
TRACE: 2017/03/16 11:38:05 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 11:38:09 register.go:79: calling addquestion manager
TRACE: 2017/03/16 11:38:09 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 11:38:10 questionimpl.go:115: {0xc420186d90 0xc4201a0280}
TRACE: 2017/03/16 11:38:10 questionimpl.go:121: 21
TRACE: 2017/03/16 11:38:10 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 11:38:10 register.go:93: calling register manager
TRACE: 2017/03/16 11:38:10 questionimpl.go:129: calling addoption function
TRACE: 2017/03/16 11:38:10 questionimpl.go:131: after query execution
TRACE: 2017/03/16 11:38:11 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 200 with 500
TRACE: 2017/03/16 11:45:19 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 11:45:19 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 11:45:19 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 11:45:19 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 11:45:19 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 11:45:19 main.go:37: First log message!
TRACE: 2017/03/16 11:45:19 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 11:45:24 register.go:79: calling addquestion manager
TRACE: 2017/03/16 11:45:24 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 11:45:26 questionimpl.go:115: {0xc420186d90 0xc4201982a0}
TRACE: 2017/03/16 11:45:26 questionimpl.go:121: 22
TRACE: 2017/03/16 11:45:26 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 11:45:26 register.go:93: calling register manager
TRACE: 2017/03/16 11:45:26 questionimpl.go:129: calling addoption function
TRACE: 2017/03/16 11:45:26 questionimpl.go:131: after query execution
TRACE: 2017/03/16 11:45:27 questionimpl.go:140: reached to execution
TRACE: 2017/03/16 11:45:27 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 200 with 500
TRACE: 2017/03/16 11:45:38 register.go:71: calling Question manager
TRACE: 2017/03/16 11:45:47 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/16 11:55:42 register.go:71: calling Question manager
TRACE: 2017/03/16 11:55:43 questionimpl.go:42: totalquestions: [{5 to be badgered is to be flattered} {5 to be badgered is to be tormented} {5 to be badgered is to be made angry} {5 to be badgered is to be null} {6 if you were inundated with work you would be very busy} {6 if you were inundated with work you would be not busy} {6 if you were inundated with work you would be irritated} {6 if you were inundated with work you would be null}]
TRACE: 2017/03/16 12:00:57 register.go:71: calling Question manager
TRACE: 2017/03/16 12:00:58 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/16 12:01:23 register.go:71: calling Question manager
TRACE: 2017/03/16 12:01:24 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/16 12:05:55 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 12:05:55 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 12:05:55 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 12:05:55 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 12:05:55 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 12:05:55 main.go:37: First log message!
TRACE: 2017/03/16 12:05:55 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 12:06:06 register.go:71: calling Question manager
TRACE: 2017/03/16 12:06:13 questionimpl.go:42: totalquestions: [{5 to be badgered is to be flattered} {5 to be badgered is to be tormented} {5 to be badgered is to be made angry} {5 to be badgered is to be null} {6 if you were inundated with work you would be very busy} {6 if you were inundated with work you would be not busy} {6 if you were inundated with work you would be irritated} {6 if you were inundated with work you would be null}]
TRACE: 2017/03/16 12:06:57 register.go:71: calling Question manager
TRACE: 2017/03/16 12:07:02 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/16 12:07:47 register.go:71: calling Question manager
TRACE: 2017/03/16 12:07:52 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/16 12:15:26 register.go:71: calling Question manager
TRACE: 2017/03/16 12:15:27 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 12:16:07 register.go:71: calling Question manager
TRACE: 2017/03/16 12:16:08 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 12:16:59 register.go:71: calling Question manager
TRACE: 2017/03/16 12:17:01 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 12:17:51 register.go:71: calling Question manager
TRACE: 2017/03/16 12:17:52 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 12:20:37 register.go:71: calling Question manager
TRACE: 2017/03/16 12:20:38 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/16 12:22:37 register.go:71: calling Question manager
TRACE: 2017/03/16 12:22:38 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 12:24:37 register.go:71: calling Question manager
TRACE: 2017/03/16 12:24:38 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/16 12:27:15 register.go:71: calling Question manager
TRACE: 2017/03/16 12:27:43 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 12:28:50 register.go:71: calling Question manager
TRACE: 2017/03/16 12:28:51 questionimpl.go:42: totalquestions: [{3 which of these method waits for the thread to terminate? sleep()} {3 which of these method waits for the thread to terminate? isalive()} {3 which of these method waits for the thread to terminate? join()} {3 which of these method waits for the thread to terminate? stop()} {4 which of these methods are used to read in from file get()} {4 which of these methods are used to read in from file read()} {4 which of these methods are used to read in from file scan()} {4 which of these methods are used to read in from file readfileInput()}]
TRACE: 2017/03/16 12:36:12 register.go:71: calling Question manager
TRACE: 2017/03/16 12:36:34 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/16 12:37:12 register.go:24: calling register manager
TRACE: 2017/03/16 12:37:12 userimpl.go:16: Fname:  
TRACE: 2017/03/16 12:37:12 userimpl.go:17: Lname:  
TRACE: 2017/03/16 12:37:12 userimpl.go:18: phone:  
TRACE: 2017/03/16 12:37:12 userimpl.go:19: email:  
TRACE: 2017/03/16 12:37:21 register.go:33: 135
TRACE: 2017/03/16 12:44:51 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 12:44:51 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 12:44:51 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 12:44:51 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 12:44:51 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 12:44:51 main.go:37: First log message!
TRACE: 2017/03/16 12:44:51 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 12:45:05 register.go:71: calling Question manager
TRACE: 2017/03/16 12:45:19 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/16 12:47:26 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 12:47:26 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 12:47:26 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 12:47:26 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 12:47:26 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 12:47:26 main.go:37: First log message!
TRACE: 2017/03/16 12:47:26 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 12:47:40 register.go:71: calling Question manager
TRACE: 2017/03/16 12:47:52 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/16 12:50:39 register.go:71: calling Question manager
TRACE: 2017/03/16 12:50:54 questionimpl.go:42: totalquestions: [{1 which of these handles the exception when no catch is used? default handler} {1 which of these handles the exception when no catch is used? finally} {1 which of these handles the exception when no catch is used? throw handler} {1 which of these handles the exception when no catch is used? java runtime system} {2 which of these methods are used to implement runable interface? stop()} {2 which of these methods are used to implement runable interface? start()} {2 which of these methods are used to implement runable interface? runThread()} {2 which of these methods are used to implement runable interface? stopThread()} {7 which keyword is used by method to refer to object that invoked it? import} {7 which keyword is used by method to refer to object that invoked it? catch} {7 which keyword is used by method to refer to object that invoked it? abstract} {7 which keyword is used by method to refer to object that invoked it? this}]
TRACE: 2017/03/16 12:56:28 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 12:56:28 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 12:56:28 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 12:56:28 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 12:56:28 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 12:56:28 main.go:37: First log message!
TRACE: 2017/03/16 12:56:28 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 12:57:12 register.go:79: calling addquestion manager
TRACE: 2017/03/16 12:57:12 questionimpl.go:102: calling addquestion function
TRACE: 2017/03/16 12:57:13 questionimpl.go:115: {0xc420186d90 0xc4201982b0}
TRACE: 2017/03/16 12:57:13 questionimpl.go:121: 23
TRACE: 2017/03/16 12:57:13 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 13:50:00 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 13:50:00 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 13:50:00 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 13:50:00 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 13:50:00 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 13:50:00 main.go:33: First log message!
TRACE: 2017/03/16 13:50:00 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 13:50:40 register.go:79: calling addquestion manager
TRACE: 2017/03/16 13:50:40 questionimpl.go:129: calling addquestion function
TRACE: 2017/03/16 13:50:46 questionimpl.go:141: {0xc420186d90 0xc4201982b0}
TRACE: 2017/03/16 13:50:46 questionimpl.go:147: 24
TRACE: 2017/03/16 13:50:46 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 13:54:32 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 13:54:32 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 13:54:32 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 13:54:32 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 13:54:32 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 13:54:32 main.go:33: First log message!
TRACE: 2017/03/16 13:54:32 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 13:54:43 register.go:79: calling addquestion manager
TRACE: 2017/03/16 13:54:43 questionimpl.go:130: calling addquestion function
TRACE: 2017/03/16 13:54:44 questionimpl.go:142: {0xc420186d90 0xc4201982b0}
TRACE: 2017/03/16 13:54:44 questionimpl.go:148: 25
TRACE: 2017/03/16 13:54:44 debug.go:45: [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
TRACE: 2017/03/16 13:56:11 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 13:56:11 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 13:56:11 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 13:56:11 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 13:56:11 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 13:56:11 main.go:33: First log message!
TRACE: 2017/03/16 13:56:11 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 13:56:16 register.go:79: calling addquestion manager
TRACE: 2017/03/16 13:56:16 questionimpl.go:130: calling addquestion function
TRACE: 2017/03/16 13:56:23 questionimpl.go:142: {0xc420186d90 0xc420198280}
TRACE: 2017/03/16 13:56:23 questionimpl.go:148: 26
TRACE: 2017/03/16 13:58:32 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 13:58:32 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 13:58:32 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 13:58:32 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 13:58:32 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 13:58:32 main.go:33: First log message!
TRACE: 2017/03/16 13:58:32 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 13:58:39 register.go:79: calling addquestion manager
TRACE: 2017/03/16 13:58:39 questionimpl.go:130: calling addquestion function
TRACE: 2017/03/16 13:58:49 questionimpl.go:142: {0xc420186d90 0xc4201982a0}
TRACE: 2017/03/16 13:58:49 questionimpl.go:148: 27
TRACE: 2017/03/16 13:58:49 questionimpl.go:151: options []
TRACE: 2017/03/16 14:00:48 debug.go:45: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

TRACE: 2017/03/16 14:00:48 debug.go:45: [GIN-debug] POST   /registerUser             --> OnlineTestGo/webservice.RegisterUser (3 handlers)
TRACE: 2017/03/16 14:00:48 debug.go:45: [GIN-debug] GET    /questions                --> OnlineTestGo/webservice.QuestionList (3 handlers)
TRACE: 2017/03/16 14:00:48 debug.go:45: [GIN-debug] POST   /addquestions             --> OnlineTestGo/webservice.AddQuestions (3 handlers)
TRACE: 2017/03/16 14:00:48 debug.go:45: [GIN-debug] GET    /testService              --> OnlineTestGo/webservice.TestService (3 handlers)
TRACE: 2017/03/16 14:00:48 main.go:33: First log message!
TRACE: 2017/03/16 14:00:48 debug.go:45: [GIN-debug] Listening and serving HTTP on :8081
TRACE: 2017/03/16 14:00:53 register.go:79: calling addquestion manager {0 which of these access specifier can be used for an interface? [] public java}
TRACE: 2017/03/16 14:00:53 questionimpl.go:130: calling addquestion function
TRACE: 2017/03/16 14:01:00 questionimpl.go:142: {0xc420186e00 0xc4201a02c0}
TRACE: 2017/03/16 14:01:00 questionimpl.go:148: 28
TRACE: 2017/03/16 14:01:00 questionimpl.go:151: options []
TRACE: 2017/03/16 14:02:10 register.go:79: calling addquestion manager {0 which of these access specifier can be used for an interface? [public protected private all of the mentioned] public java}
TRACE: 2017/03/16 14:02:10 questionimpl.go:130: calling addquestion function
TRACE: 2017/03/16 14:02:17 questionimpl.go:142: {0xc420187110 0xc4201a0900}
TRACE: 2017/03/16 14:02:17 questionimpl.go:148: 29
TRACE: 2017/03/16 14:02:17 questionimpl.go:151: options [public protected private all of the mentioned]
TRACE: 2017/03/16 14:02:17 questionimpl.go:101: calling addoption function
TRACE: 2017/03/16 14:02:17 questionimpl.go:103: after query execution
TRACE: 2017/03/16 14:02:24 questionimpl.go:112: reached to execution
TRACE: 2017/03/16 14:02:24 questionimpl.go:114: {0xc420187340 0xc4201a0ce0}
TRACE: 2017/03/16 14:02:24 questionimpl.go:119: 53 <nil>
TRACE: 2017/03/16 14:02:24 questionimpl.go:101: calling addoption function
TRACE: 2017/03/16 14:02:24 questionimpl.go:103: after query execution
TRACE: 2017/03/16 14:02:26 questionimpl.go:112: reached to execution
TRACE: 2017/03/16 14:02:26 questionimpl.go:114: {0xc420187570 0xc4201a1070}
TRACE: 2017/03/16 14:02:26 questionimpl.go:119: 54 <nil>
TRACE: 2017/03/16 14:02:26 questionimpl.go:101: calling addoption function
TRACE: 2017/03/16 14:02:26 questionimpl.go:103: after query execution
TRACE: 2017/03/16 14:02:48 questionimpl.go:112: reached to execution
TRACE: 2017/03/16 14:02:48 questionimpl.go:114: {0xc4201877a0 0xc4201a13f0}
TRACE: 2017/03/16 14:02:48 questionimpl.go:119: 55 <nil>
TRACE: 2017/03/16 14:02:48 questionimpl.go:101: calling addoption function
TRACE: 2017/03/16 14:02:48 questionimpl.go:103: after query execution
TRACE: 2017/03/16 14:02:49 questionimpl.go:112: reached to execution
TRACE: 2017/03/16 14:02:50 questionimpl.go:114: {0xc4201879d0 0xc4201a1780}
TRACE: 2017/03/16 14:02:50 questionimpl.go:119: 56 <nil>
